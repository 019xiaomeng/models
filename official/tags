!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
ALIVE_CACHE	transformer/model/beam_search.py	/^  ALIVE_CACHE = "ALIVE_CACHE"$/;"	v	class:_StateKeys
ALIVE_LOG_PROBS	transformer/model/beam_search.py	/^  ALIVE_LOG_PROBS = "ALIVE_LOG_PROBS"$/;"	v	class:_StateKeys
ALIVE_SEQ	transformer/model/beam_search.py	/^  ALIVE_SEQ = "ALIVE_SEQ"$/;"	v	class:_StateKeys
ALLOWED_TYPES	resnet/resnet_model.py	/^ALLOWED_TYPES = (DEFAULT_DTYPE,) + CASTABLE_TYPES$/;"	v
AdamWeightDecay	bert/optimization.py	/^class AdamWeightDecay(tf.keras.optimizers.Adam):$/;"	c
Attention	bert/modeling.py	/^class Attention(tf.keras.layers.Layer):$/;"	c
Attention	transformer/model/attention_layer.py	/^class Attention(tf.layers.Layer):$/;"	c
Attention	transformer/v2/attention_layer.py	/^class Attention(tf.keras.layers.Layer):$/;"	c
BASE_LEARNING_RATE	resnet/keras/keras_common.py	/^BASE_LEARNING_RATE = 0.1  # This matches Jing's version.$/;"	v
BASE_MULTI_GPU_PARAMS	transformer/model/model_params.py	/^BASE_MULTI_GPU_PARAMS = BASE_PARAMS.copy()$/;"	v
BASE_PARAMS	transformer/model/model_params.py	/^BASE_PARAMS = defaultdict($/;"	v
BATCH_NORM_DECAY	resnet/keras/resnet_cifar_model.py	/^BATCH_NORM_DECAY = 0.997$/;"	v
BATCH_NORM_DECAY	resnet/keras/resnet_model.py	/^BATCH_NORM_DECAY = 0.9$/;"	v
BATCH_NORM_EPSILON	resnet/keras/resnet_cifar_model.py	/^BATCH_NORM_EPSILON = 1e-5$/;"	v
BATCH_NORM_EPSILON	resnet/keras/resnet_model.py	/^BATCH_NORM_EPSILON = 1e-5$/;"	v
BATCH_SIZE	mnist/mnist_test.py	/^BATCH_SIZE = 100$/;"	v
BATCH_SIZE	recommendation/data_test.py	/^BATCH_SIZE = 2048$/;"	v
BATCH_SIZE	resnet/layer_test.py	/^BATCH_SIZE = 32$/;"	v
BENCHMARK_RUN_LOG_FILE_NAME	utils/logs/logger.py	/^BENCHMARK_RUN_LOG_FILE_NAME = "benchmark_run.log"$/;"	v
BIG_MULTI_GPU_PARAMS	transformer/model/model_params.py	/^BIG_MULTI_GPU_PARAMS = BIG_PARAMS.copy()$/;"	v
BIG_PARAMS	transformer/model/model_params.py	/^BIG_PARAMS = BASE_PARAMS.copy()$/;"	v
BLEU_DIR	transformer/transformer_main.py	/^BLEU_DIR = "bleu"$/;"	v
BLEU_DIR	transformer/v2/transformer_main.py	/^BLEU_DIR = "bleu"$/;"	v
BLOCK_TESTS	resnet/layer_test.py	/^BLOCK_TESTS = [$/;"	v
BaseBenchmarkLogger	utils/logs/logger.py	/^class BaseBenchmarkLogger(object):$/;"	c
BaseBenchmarkLoggerTest	utils/logs/logger_test.py	/^class BaseBenchmarkLoggerTest(tf.test.TestCase):$/;"	c
BaseDataConstructor	recommendation/data_pipeline.py	/^class BaseDataConstructor(threading.Thread):$/;"	c
BaseTest	boosted_trees/train_higgs_test.py	/^class BaseTest(tf.test.TestCase):$/;"	c
BaseTest	recommendation/data_test.py	/^class BaseTest(tf.test.TestCase):$/;"	c
BaseTest	resnet/cifar10_test.py	/^class BaseTest(tf.test.TestCase):$/;"	c
BaseTest	resnet/imagenet_test.py	/^class BaseTest(tf.test.TestCase):$/;"	c
BaseTest	resnet/layer_test.py	/^class BaseTest(reference_data.BaseTest):$/;"	c
BaseTest	utils/data/file_io_test.py	/^class BaseTest(tf.test.TestCase):$/;"	c
BaseTest	utils/logs/hooks_helper_test.py	/^class BaseTest(unittest.TestCase):$/;"	c
BaseTest	utils/testing/reference_data.py	/^class BaseTest(tf.test.TestCase):$/;"	c
BaseTest	wide_deep/census_test.py	/^class BaseTest(tf.test.TestCase):$/;"	c
BaseTest	wide_deep/movielens_test.py	/^class BaseTest(tf.test.TestCase):$/;"	c
BaseTester	utils/flags/flags_test.py	/^class BaseTester(unittest.TestCase):$/;"	c
BasicTokenizer	bert/tokenization.py	/^class BasicTokenizer(object):$/;"	c
BatchTimestamp	utils/misc/keras_utils.py	/^class BatchTimestamp(object):$/;"	c
BeamSearchHelperTests	transformer/model/beam_search_test.py	/^class BeamSearchHelperTests(tf.test.TestCase):$/;"	c
BenchmarkBigQueryLogger	utils/logs/logger.py	/^class BenchmarkBigQueryLogger(BaseBenchmarkLogger):$/;"	c
BenchmarkBigQueryLoggerTest	utils/logs/logger_test.py	/^class BenchmarkBigQueryLoggerTest(tf.test.TestCase):$/;"	c
BenchmarkFileLogger	utils/logs/logger.py	/^class BenchmarkFileLogger(BaseBenchmarkLogger):$/;"	c
BenchmarkFileLoggerTest	utils/logs/logger_test.py	/^class BenchmarkFileLoggerTest(tf.test.TestCase):$/;"	c
BenchmarkLoggerTest	utils/logs/logger_test.py	/^class BenchmarkLoggerTest(tf.test.TestCase):$/;"	c
BenchmarkTimerCallback	bert/benchmark/bert_benchmark.py	/^class BenchmarkTimerCallback(tf.keras.callbacks.Callback):$/;"	c
Benchmarks	mnist/mnist_test.py	/^class Benchmarks(tf.test.Benchmark):$/;"	c
BertBenchmarkBase	bert/benchmark/bert_benchmark.py	/^class BertBenchmarkBase(tf.test.Benchmark):$/;"	c
BertClassifyAccuracy	bert/benchmark/bert_benchmark.py	/^class BertClassifyAccuracy(BertBenchmarkBase):$/;"	c
BertClassifyBenchmark	bert/benchmark/bert_benchmark.py	/^class BertClassifyBenchmark(BertBenchmarkBase):$/;"	c
BertConfig	bert/modeling.py	/^class BertConfig(object):$/;"	c
BertModel	bert/modeling.py	/^class BertModel(tf.keras.layers.Layer):$/;"	c
BertModelCheckpoint	bert/model_saving_utils.py	/^class BertModelCheckpoint(tf.keras.callbacks.Callback):$/;"	c
BertPretrainLayer	bert/bert_models.py	/^class BertPretrainLayer(tf.keras.layers.Layer):$/;"	c
BertPretrainLossAndMetricLayer	bert/bert_models.py	/^class BertPretrainLossAndMetricLayer(tf.keras.layers.Layer):$/;"	c
BertSquadLogitsLayer	bert/bert_models.py	/^class BertSquadLogitsLayer(tf.keras.layers.Layer):$/;"	c
BigQueryUploader	benchmark/benchmark_uploader.py	/^class BigQueryUploader(object):$/;"	c
BigQueryUploaderTest	benchmark/benchmark_uploader_test.py	/^class BigQueryUploaderTest(tf.test.TestCase):$/;"	c
BisectionDataConstructor	recommendation/data_pipeline.py	/^class BisectionDataConstructor(BaseDataConstructor):$/;"	c
CACHE_INVALIDATION_SEC	recommendation/constants.py	/^CACHE_INVALIDATION_SEC = 3600 * 24$/;"	v
CALLBACKS	keras_application_models/model_callbacks.py	/^CALLBACKS = {$/;"	v
CASTABLE_TYPES	resnet/resnet_model.py	/^CASTABLE_TYPES = (tf.float16,)$/;"	v
CIFAR_DATA_DIR_NAME	resnet/estimator_benchmark.py	/^CIFAR_DATA_DIR_NAME = 'cifar-10-batches-bin'$/;"	v
CIFAR_DATA_DIR_NAME	resnet/keras/keras_cifar_benchmark.py	/^CIFAR_DATA_DIR_NAME = 'cifar-10-batches-bin'$/;"	v
CLASSIFIER_EVAL_DATA_PATH	bert/benchmark/bert_benchmark.py	/^CLASSIFIER_EVAL_DATA_PATH = 'gs:\/\/tf-perfzero-data\/bert\/classification\/mrpc_eval.tf_record'$/;"	v
CLASSIFIER_INPUT_META_DATA_PATH	bert/benchmark/bert_benchmark.py	/^CLASSIFIER_INPUT_META_DATA_PATH = 'gs:\/\/tf-perfzero-data\/bert\/classification\/mrpc_meta_data'$/;"	v
CLASSIFIER_TRAIN_DATA_PATH	bert/benchmark/bert_benchmark.py	/^CLASSIFIER_TRAIN_DATA_PATH = 'gs:\/\/tf-perfzero-data\/bert\/classification\/mrpc_train.tf_record'$/;"	v
CUR_INDEX	transformer/model/beam_search.py	/^  CUR_INDEX = "CUR_INDEX"$/;"	v	class:_StateKeys
CYCLES_TO_BUFFER	recommendation/constants.py	/^CYCLES_TO_BUFFER = 3  # The number of train cycles worth of data to "run ahead"$/;"	v
Cifar10Dataset	keras_application_models/dataset.py	/^class Cifar10Dataset(object):$/;"	c
Cifar10Model	resnet/cifar10_main.py	/^class Cifar10Model(resnet_model.Model):$/;"	c
CloudLibTest	utils/logs/cloud_lib_test.py	/^class CloudLibTest(unittest.TestCase):$/;"	c
ColaProcessor	bert/classifier_data_lib.py	/^class ColaProcessor(DataProcessor):$/;"	c
ComputeBleuTest	transformer/compute_bleu_test.py	/^class ComputeBleuTest(tf.test.TestCase):$/;"	c
CustomEarlyStopping	recommendation/ncf_keras_main.py	/^class CustomEarlyStopping(tf.keras.callbacks.Callback):$/;"	c
DATASET	recommendation/data_test.py	/^DATASET = "ml-test"$/;"	v
DATASETS	datasets/movielens.py	/^DATASETS = [ML_1M, ML_20M]$/;"	v
DATASET_NAME	resnet/cifar10_main.py	/^DATASET_NAME = 'CIFAR-10'$/;"	v
DATASET_NAME	resnet/imagenet_main.py	/^DATASET_NAME = 'ImageNet'$/;"	v
DATASET_TO_NUM_USERS_AND_ITEMS	recommendation/data_preprocessing.py	/^DATASET_TO_NUM_USERS_AND_ITEMS = {$/;"	v
DATA_FORMAT	resnet/layer_test.py	/^DATA_FORMAT = "channels_last"  # CPU instructions often preclude channels_first$/;"	v
DATA_URL	resnet/cifar10_download_and_extract.py	/^DATA_URL = 'https:\/\/www.cs.toronto.edu\/~kriz\/cifar-10-binary.tar.gz'$/;"	v
DATA_URL	wide_deep/census_dataset.py	/^DATA_URL = 'https:\/\/archive.ics.uci.edu\/ml\/machine-learning-databases\/adult'$/;"	v
DEFAULT_DTYPE	resnet/resnet_model.py	/^DEFAULT_DTYPE = tf.float32$/;"	v
DEFAULT_IMAGE_SIZE	resnet/imagenet_main.py	/^DEFAULT_IMAGE_SIZE = 224$/;"	v
DEFAULT_TRAIN_EPOCHS	transformer/transformer_main.py	/^DEFAULT_TRAIN_EPOCHS = 10$/;"	v
DEFAULT_VERSION	resnet/resnet_model.py	/^DEFAULT_VERSION = 2$/;"	v
DROP_CACHE_LOC	utils/logs/mlperf_helper.py	/^DROP_CACHE_LOC = os.getenv("DROP_CACHE_LOC", "\/proc\/sys\/vm\/drop_caches")$/;"	v
DTYPE_MAP	utils/flags/_performance.py	/^DTYPE_MAP = {$/;"	v
DTYPE_MAP	utils/flags/core.py	/^DTYPE_MAP = _performance.DTYPE_MAP$/;"	v
DUPLICATE_MASK	recommendation/constants.py	/^DUPLICATE_MASK = "duplicate_mask"$/;"	v
DataProcessor	bert/classifier_data_lib.py	/^class DataProcessor(object):$/;"	c
DatasetManager	recommendation/data_pipeline.py	/^class DatasetManager(object):$/;"	c
DecoderStack	transformer/model/transformer.py	/^class DecoderStack(tf.layers.Layer):$/;"	c
DecoderStack	transformer/v2/transformer.py	/^class DecoderStack(tf.keras.layers.Layer):$/;"	c
Dense2DProjection	bert/modeling.py	/^class Dense2DProjection(tf.keras.layers.Layer):$/;"	c
Dense3D	bert/modeling.py	/^class Dense3D(tf.keras.layers.Layer):$/;"	c
DummyConstructor	recommendation/data_pipeline.py	/^class DummyConstructor(threading.Thread):$/;"	c
DummyContextManager	utils/misc/distribution_utils.py	/^class DummyContextManager(object):$/;"	c
EN2DE_2014_BLEU_DATA_DIR_NAME	transformer/transformer_estimator_benchmark.py	/^EN2DE_2014_BLEU_DATA_DIR_NAME = 'newstest2014'$/;"	v
EN2DE_2014_BLEU_DATA_DIR_NAME	transformer/v2/transformer_benchmark.py	/^EN2DE_2014_BLEU_DATA_DIR_NAME = 'newstest2014'$/;"	v
END_TO_END_EVAL_MD5	recommendation/data_test.py	/^END_TO_END_EVAL_MD5 = "d753d0f3186831466d6e218163a9501e"$/;"	v
END_TO_END_TRAIN_MD5	recommendation/data_test.py	/^END_TO_END_TRAIN_MD5 = "b218738e915e825d03939c5e305a2698"$/;"	v
EOS	transformer/utils/tokenizer.py	/^EOS = "<EOS>"$/;"	v
EOS_ID	transformer/utils/tokenizer.py	/^EOS_ID = 1$/;"	v
EVAL_BATCH_SIZE	recommendation/data_test.py	/^EVAL_BATCH_SIZE = 4000$/;"	v
EVAL_FILE	wide_deep/census_dataset.py	/^EVAL_FILE = 'adult.test'$/;"	v
EVAL_FOLDER	recommendation/constants.py	/^EVAL_FOLDER = "eval_data"$/;"	v
EVAL_ITEM_KEY	recommendation/constants.py	/^EVAL_ITEM_KEY = "eval_{}".format(movielens.ITEM_COLUMN)$/;"	v
EVAL_URL	wide_deep/census_dataset.py	/^EVAL_URL = '%s\/%s' % (DATA_URL, EVAL_FILE)$/;"	v
EVAL_USER_KEY	recommendation/constants.py	/^EVAL_USER_KEY = "eval_{}".format(movielens.USER_COLUMN)$/;"	v
EmbeddingLookup	bert/modeling.py	/^class EmbeddingLookup(tf.keras.layers.Layer):$/;"	c
EmbeddingPostprocessor	bert/modeling.py	/^class EmbeddingPostprocessor(tf.keras.layers.Layer):$/;"	c
EmbeddingSharedWeights	transformer/model/embedding_layer.py	/^class EmbeddingSharedWeights(tf.layers.Layer):$/;"	c
EmbeddingSharedWeights	transformer/v2/embedding_layer.py	/^class EmbeddingSharedWeights(tf.keras.layers.Layer):$/;"	c
EncoderStack	transformer/model/transformer.py	/^class EncoderStack(tf.layers.Layer):$/;"	c
EncoderStack	transformer/v2/transformer.py	/^class EncoderStack(tf.keras.layers.Layer):$/;"	c
EstimatorBenchmark	resnet/estimator_benchmark.py	/^class EstimatorBenchmark(tf.test.Benchmark):$/;"	c
EstimatorBenchmark	transformer/transformer_estimator_benchmark.py	/^class EstimatorBenchmark(tf.test.Benchmark):$/;"	c
ExamplesPerSecondCallback	keras_application_models/model_callbacks.py	/^class ExamplesPerSecondCallback(tf.keras.callbacks.Callback):$/;"	c
ExamplesPerSecondHook	utils/logs/hooks.py	/^class ExamplesPerSecondHook(tf.estimator.SessionRunHook):$/;"	c
ExamplesPerSecondHookTest	utils/logs/hooks_test.py	/^class ExamplesPerSecondHookTest(tf.test.TestCase):$/;"	c
ExportUtilsTest	utils/export/export_test.py	/^class ExportUtilsTest(tf.test.TestCase):$/;"	c
FINISHED_FLAGS	transformer/model/beam_search.py	/^  FINISHED_FLAGS = "FINISHED_FLAGS"$/;"	v	class:_StateKeys
FINISHED_SCORES	transformer/model/beam_search.py	/^  FINISHED_SCORES = "FINISHED_SCORES"$/;"	v	class:_StateKeys
FINISHED_SEQ	transformer/model/beam_search.py	/^  FINISHED_SEQ = "FINISHED_SEQ"$/;"	v	class:_StateKeys
FIXED_TIMESTAMP	transformer/v2/transformer_main_test.py	/^FIXED_TIMESTAMP = "my_time_stamp"$/;"	v
FLAGS	bert/benchmark/bert_benchmark.py	/^FLAGS = flags.FLAGS$/;"	v
FLAGS	bert/create_finetuning_data.py	/^FLAGS = flags.FLAGS$/;"	v
FLAGS	bert/run_classifier.py	/^FLAGS = flags.FLAGS$/;"	v
FLAGS	bert/run_pretraining.py	/^FLAGS = flags.FLAGS$/;"	v
FLAGS	bert/run_squad.py	/^FLAGS = flags.FLAGS$/;"	v
FLAGS	boosted_trees/data_download.py	/^  FLAGS = flags.FLAGS$/;"	v
FLAGS	mnist/mnist_tpu.py	/^FLAGS = tf.flags.FLAGS$/;"	v
FLAGS	recommendation/ncf_common.py	/^FLAGS = flags.FLAGS$/;"	v
FLAGS	recommendation/ncf_estimator_main.py	/^FLAGS = flags.FLAGS$/;"	v
FLAGS	recommendation/ncf_keras_benchmark.py	/^FLAGS = flags.FLAGS$/;"	v
FLAGS	recommendation/ncf_keras_main.py	/^FLAGS = flags.FLAGS$/;"	v
FLAGS	resnet/estimator_benchmark.py	/^FLAGS = flags.FLAGS$/;"	v
FLAGS	resnet/keras/keras_benchmark.py	/^FLAGS = flags.FLAGS$/;"	v
FLAGS	resnet/keras/keras_cifar_benchmark.py	/^FLAGS = flags.FLAGS$/;"	v
FLAGS	resnet/keras/keras_common.py	/^FLAGS = flags.FLAGS$/;"	v
FLAGS	resnet/keras/keras_imagenet_benchmark.py	/^FLAGS = flags.FLAGS$/;"	v
FLAGS	transformer/compute_bleu.py	/^  FLAGS = flags.FLAGS$/;"	v
FLAGS	transformer/data_download.py	/^  FLAGS = flags.FLAGS$/;"	v
FLAGS	transformer/transformer_estimator_benchmark.py	/^FLAGS = flags.FLAGS$/;"	v
FLAGS	transformer/translate.py	/^  FLAGS = flags.FLAGS$/;"	v
FLAGS	transformer/v2/misc.py	/^FLAGS = flags.FLAGS$/;"	v
FLAGS	transformer/v2/transformer_benchmark.py	/^FLAGS = flags.FLAGS$/;"	v
FLAGS	transformer/v2/transformer_main_test.py	/^FLAGS = flags.FLAGS$/;"	v
FLAGS	utils/logs/logger.py	/^FLAGS = flags.FLAGS$/;"	v
FLAGS	utils/testing/perfzero_benchmark.py	/^FLAGS = flags.FLAGS$/;"	v
FRESH_RANDOMNESS_MD5	recommendation/data_test.py	/^FRESH_RANDOMNESS_MD5 = "63d0dff73c0e5f1048fbdc8c65021e22"$/;"	v
FauxPool	recommendation/popen_helper.py	/^class FauxPool(object):$/;"	c
FeatureWriter	bert/squad_lib.py	/^class FeatureWriter(object):$/;"	c
FeedForwardNetwork	transformer/v2/ffn_layer.py	/^class FeedForwardNetwork(tf.keras.layers.Layer):$/;"	c
FeedFowardNetwork	transformer/model/ffn_layer.py	/^class FeedFowardNetwork(tf.layers.Layer):$/;"	c
FullTokenizer	bert/tokenization.py	/^class FullTokenizer(object):$/;"	c
GCP_METADATA_HEADER	utils/logs/cloud_lib.py	/^GCP_METADATA_HEADER = {"Metadata-Flavor": "Google"}$/;"	v
GCP_METADATA_URL	utils/logs/cloud_lib.py	/^GCP_METADATA_URL = "http:\/\/metadata\/computeMetadata\/v1\/instance\/hostname"$/;"	v
GCP_TEST_ENV	utils/logs/logger.py	/^GCP_TEST_ENV = "GCP"$/;"	v
GENRES	datasets/movielens.py	/^GENRES = [$/;"	v
GENRE_COLUMN	datasets/movielens.py	/^GENRE_COLUMN = "genres"$/;"	v
GetDistributionStrategyTest	utils/misc/distribution_utils_test.py	/^class GetDistributionStrategyTest(tf.test.TestCase):$/;"	c
GoldenBaseTest	utils/testing/reference_data_test.py	/^class GoldenBaseTest(reference_data.BaseTest):$/;"	c
HEIGHT	resnet/cifar10_main.py	/^HEIGHT = 32$/;"	v
HOOKS	utils/logs/hooks_helper.py	/^HOOKS = {$/;"	v
HR_KEY	recommendation/constants.py	/^HR_KEY = "HR"$/;"	v
HR_METRIC_NAME	recommendation/constants.py	/^HR_METRIC_NAME = "HR_METRIC"$/;"	v
IMAGENET_DATA_DIR_NAME	resnet/estimator_benchmark.py	/^IMAGENET_DATA_DIR_NAME = 'imagenet'$/;"	v
INF	transformer/model/beam_search.py	/^INF = 1. * 1e7$/;"	v
INF	transformer/transformer_main.py	/^INF = int(1e9)$/;"	v
INF	transformer/v2/transformer_main.py	/^INF = int(1e9)$/;"	v
INPUT_FILE	boosted_trees/data_download.py	/^INPUT_FILE = "HIGGS.csv.gz"$/;"	v
ITEM_COLUMN	datasets/movielens.py	/^ITEM_COLUMN = "item_id"  # movies$/;"	v
ITEM_DTYPE	recommendation/constants.py	/^ITEM_DTYPE = np.int32$/;"	v
ITEM_MAP	recommendation/constants.py	/^ITEM_MAP = "item_map"$/;"	v
ImagenetModel	resnet/imagenet_main.py	/^class ImagenetModel(resnet_model.Model):$/;"	c
IncrementEpochCallback	recommendation/ncf_keras_main.py	/^class IncrementEpochCallback(tf.keras.callbacks.Callback):$/;"	c
InputExample	bert/classifier_data_lib.py	/^class InputExample(object):$/;"	c
InputFeatures	bert/classifier_data_lib.py	/^class InputFeatures(object):$/;"	c
InputFeatures	bert/squad_lib.py	/^class InputFeatures(object):$/;"	c
K	transformer/v2/optimizer.py	/^K = tf.keras.backend$/;"	v
KerasBenchmark	resnet/keras/keras_benchmark.py	/^class KerasBenchmark(tf.test.Benchmark):$/;"	c
KerasCifarTest	resnet/keras/keras_cifar_test.py	/^class KerasCifarTest(googletest.TestCase):$/;"	c
KerasCommonTests	resnet/keras/keras_common_test.py	/^class KerasCommonTests(tf.test.TestCase):$/;"	c
KerasImagenetTest	resnet/keras/keras_imagenet_test.py	/^class KerasImagenetTest(googletest.TestCase):$/;"	c
KerasNCFBenchmarkBase	recommendation/ncf_keras_benchmark.py	/^class KerasNCFBenchmarkBase(tf.test.Benchmark):$/;"	c
KerasNCFRealData	recommendation/ncf_keras_benchmark.py	/^class KerasNCFRealData(KerasNCFBenchmarkBase):$/;"	c
KerasNCFSyntheticData	recommendation/ncf_keras_benchmark.py	/^class KerasNCFSyntheticData(KerasNCFBenchmarkBase):$/;"	c
L2_WEIGHT_DECAY	resnet/keras/resnet_cifar_model.py	/^L2_WEIGHT_DECAY = 2e-4$/;"	v
L2_WEIGHT_DECAY	resnet/keras/resnet_model.py	/^L2_WEIGHT_DECAY = 1e-4$/;"	v
LEARNING_RATE	mnist/mnist.py	/^LEARNING_RATE = 1e-4$/;"	v
LINE_PATTERN	utils/logs/mlperf_helper.py	/^LINE_PATTERN = re.compile($/;"	v
LOCAL	utils/accelerator/tpu.py	/^LOCAL = "local"$/;"	v
LOGGER	utils/logs/mlperf_helper.py	/^LOGGER = Logger()$/;"	v
LOSS_PREFIX	wide_deep/wide_deep_run_loop.py	/^LOSS_PREFIX = {'wide': 'linear\/', 'deep': 'dnn\/'}$/;"	v
LR_SCHEDULE	resnet/keras/keras_cifar_main.py	/^LR_SCHEDULE = [  # (multiplier, epoch to start) tuples$/;"	v
LR_SCHEDULE	resnet/keras/keras_imagenet_main.py	/^LR_SCHEDULE = [    # (multiplier, epoch to start) tuples$/;"	v
LayerNormalization	transformer/model/transformer.py	/^class LayerNormalization(tf.layers.Layer):$/;"	c
LayerNormalization	transformer/v2/transformer.py	/^class LayerNormalization(tf.keras.layers.Layer):$/;"	c
LazyAdam	transformer/v2/optimizer.py	/^class LazyAdam(tf.keras.optimizers.Adam):$/;"	c
LearningRateBatchScheduler	resnet/keras/keras_common.py	/^class LearningRateBatchScheduler(tf.keras.callbacks.Callback):$/;"	c
LearningRateFn	transformer/v2/optimizer.py	/^class LearningRateFn(object):$/;"	c
LearningRateScheduler	transformer/v2/optimizer.py	/^class LearningRateScheduler(tf.keras.callbacks.Callback):$/;"	c
Logger	utils/logs/mlperf_helper.py	/^class Logger(object):$/;"	c
LoggingMetricCallback	keras_application_models/model_callbacks.py	/^class LoggingMetricCallback(tf.keras.callbacks.Callback):$/;"	c
LoggingMetricHook	utils/logs/metric_hook.py	/^class LoggingMetricHook(tf.estimator.LoggingTensorHook):$/;"	c
LoggingMetricHookTest	utils/logs/metric_hook_test.py	/^class LoggingMetricHookTest(tf.test.TestCase):$/;"	c
LossLayer	transformer/v2/metrics.py	/^class LossLayer(tf.keras.layers.Layer):$/;"	c
MASK_START_INDEX	recommendation/constants.py	/^MASK_START_INDEX = "mask_start_index"$/;"	v
MAX_RATING	datasets/movielens.py	/^MAX_RATING = 5$/;"	v
MAX_TOP_1_ACCURACY	resnet/keras/keras_cifar_benchmark.py	/^MAX_TOP_1_ACCURACY = 0.938$/;"	v
MAX_TOP_1_ACCURACY	resnet/keras/keras_imagenet_benchmark.py	/^MAX_TOP_1_ACCURACY = 0.77$/;"	v
METRIC_LOG_FILE_NAME	utils/logs/logger.py	/^METRIC_LOG_FILE_NAME = "metric.log"$/;"	v
MIN_NUM_RATINGS	recommendation/constants.py	/^MIN_NUM_RATINGS = 20$/;"	v
MIN_TOP_1_ACCURACY	resnet/keras/keras_cifar_benchmark.py	/^MIN_TOP_1_ACCURACY = 0.925$/;"	v
MIN_TOP_1_ACCURACY	resnet/keras/keras_imagenet_benchmark.py	/^MIN_TOP_1_ACCURACY = 0.76$/;"	v
ML_1M	datasets/movielens.py	/^ML_1M = "ml-1m"$/;"	v
ML_20M	datasets/movielens.py	/^ML_20M = "ml-20m"$/;"	v
MNISTTest	mnist/mnist_eager_test.py	/^class MNISTTest(tf.test.TestCase):$/;"	c
MODELS	keras_application_models/benchmark_main.py	/^MODELS = {$/;"	v
MODEL_CONFIG_FILE_PATH	bert/benchmark/bert_benchmark.py	/^MODEL_CONFIG_FILE_PATH = 'gs:\/\/cloud-tpu-checkpoints\/bert\/tf_20\/uncased_L-24_H-1024_A-16\/bert_config'$/;"	v
MOVIES_FILE	datasets/movielens.py	/^MOVIES_FILE = "movies.csv"$/;"	v
MOVIE_COLUMNS	datasets/movielens.py	/^MOVIE_COLUMNS = [ITEM_COLUMN, TITLE_COLUMN, GENRE_COLUMN]$/;"	v
Manager	transformer/utils/schedule.py	/^class Manager(object):$/;"	c
MaterializedDataConstructor	recommendation/data_pipeline.py	/^class MaterializedDataConstructor(BaseDataConstructor):$/;"	c
MetricLayer	recommendation/ncf_keras_main.py	/^class MetricLayer(tf.keras.layers.Layer):$/;"	c
MetricLayer	transformer/v2/metrics.py	/^class MetricLayer(tf.keras.layers.Layer):$/;"	c
MnliProcessor	bert/classifier_data_lib.py	/^class MnliProcessor(DataProcessor):$/;"	c
MockBenchmarkLogger	utils/testing/mock_lib.py	/^class MockBenchmarkLogger(object):$/;"	c
Model	resnet/resnet_model.py	/^class Model(object):$/;"	c
ModelUtilsTest	transformer/model/model_utils_test.py	/^class ModelUtilsTest(tf.test.TestCase):$/;"	c
MrpcProcessor	bert/classifier_data_lib.py	/^class MrpcProcessor(DataProcessor):$/;"	c
NCF_DATA_DIR_NAME	recommendation/ncf_keras_benchmark.py	/^NCF_DATA_DIR_NAME = 'movielens_data'$/;"	v
NDCG_KEY	recommendation/constants.py	/^NDCG_KEY = "NDCG"$/;"	v
NDCG_METRIC_NAME	recommendation/constants.py	/^NDCG_METRIC_NAME = "NDCG_METRIC"$/;"	v
NEG_INF	transformer/model/model_utils_test.py	/^NEG_INF = -1e9$/;"	v
NPZ_FILE	boosted_trees/data_download.py	/^NPZ_FILE = "HIGGS.csv.gz.npz"  # numpy compressed file to contain "data" array.$/;"	v
NPZ_FILE	boosted_trees/train_higgs.py	/^NPZ_FILE = "HIGGS.csv.gz.npz"  # numpy compressed file containing "data" array$/;"	v
NUM_CHANNELS	resnet/cifar10_main.py	/^NUM_CHANNELS = 3$/;"	v
NUM_CHANNELS	resnet/imagenet_main.py	/^NUM_CHANNELS = 3$/;"	v
NUM_CLASSES	resnet/cifar10_main.py	/^NUM_CLASSES = 10$/;"	v
NUM_CLASSES	resnet/imagenet_main.py	/^NUM_CLASSES = 1001$/;"	v
NUM_EVAL_NEGATIVES	recommendation/constants.py	/^NUM_EVAL_NEGATIVES = 999$/;"	v
NUM_EXAMPLES	transformer/utils/schedule.py	/^NUM_EXAMPLES = {$/;"	v
NUM_FILE_SHARDS	recommendation/constants.py	/^NUM_FILE_SHARDS = 16$/;"	v
NUM_IMAGES	resnet/cifar10_main.py	/^NUM_IMAGES = {$/;"	v
NUM_IMAGES	resnet/imagenet_main.py	/^NUM_IMAGES = {$/;"	v
NUM_ITEMS	recommendation/data_test.py	/^NUM_ITEMS = 2000$/;"	v
NUM_ITEM_IDS	datasets/movielens.py	/^NUM_ITEM_IDS = 3952$/;"	v
NUM_NEG	recommendation/data_test.py	/^NUM_NEG = 4$/;"	v
NUM_PTS	recommendation/data_test.py	/^NUM_PTS = 50000$/;"	v
NUM_RATINGS	datasets/movielens.py	/^NUM_RATINGS = {$/;"	v
NUM_TRAIN_NEG	recommendation/ncf_test.py	/^NUM_TRAIN_NEG = 4$/;"	v
NUM_USERS	recommendation/data_test.py	/^NUM_USERS = 1000$/;"	v
NUM_USER_IDS	datasets/movielens.py	/^NUM_USER_IDS = {$/;"	v
N_GENRE	datasets/movielens.py	/^N_GENRE = len(GENRES)$/;"	v
NcfTest	recommendation/ncf_test.py	/^class NcfTest(tf.test.TestCase):$/;"	c
PAD	transformer/utils/tokenizer.py	/^PAD = "<pad>"$/;"	v
PAD_ID	transformer/utils/tokenizer.py	/^PAD_ID = 0$/;"	v
PARAMS_MAP	transformer/transformer_main.py	/^PARAMS_MAP = {$/;"	v
PARAMS_MAP	transformer/v2/misc.py	/^PARAMS_MAP = {$/;"	v
PRETRAINED_CHECKPOINT_PATH	bert/benchmark/bert_benchmark.py	/^PRETRAINED_CHECKPOINT_PATH = 'gs:\/\/cloud-tpu-checkpoints\/bert\/tf_20\/uncased_L-24_H-1024_A-16\/bert_model.ckpt'$/;"	v
ParsedLine	utils/logs/mlperf_helper.py	/^ParsedLine = namedtuple("ParsedLine", ["version", "benchmark", "timestamp",$/;"	v
PastStopThresholdTest	utils/misc/model_helpers_test.py	/^class PastStopThresholdTest(tf.test.TestCase):$/;"	c
PerReplicaBatchSizeTest	utils/misc/distribution_utils_test.py	/^class PerReplicaBatchSizeTest(tf.test.TestCase):$/;"	c
PerfZeroBenchmark	utils/testing/perfzero_benchmark.py	/^class PerfZeroBenchmark(tf.test.Benchmark):$/;"	c
PiecewiseConstantDecayWithWarmup	resnet/keras/keras_common.py	/^    tf.keras.optimizers.schedules.LearningRateSchedule):$/;"	c
PrePostProcessingWrapper	transformer/model/transformer.py	/^class PrePostProcessingWrapper(object):$/;"	c
PrePostProcessingWrapper	transformer/v2/transformer.py	/^class PrePostProcessingWrapper(tf.keras.layers.Layer):$/;"	c
ProfilerCallback	utils/misc/keras_utils.py	/^class ProfilerCallback(tf.keras.callbacks.Callback):$/;"	c
RATINGS_FILE	datasets/movielens.py	/^RATINGS_FILE = "ratings.csv"$/;"	v
RATING_COLUMN	datasets/movielens.py	/^RATING_COLUMN = "rating"$/;"	v
RATING_COLUMNS	datasets/movielens.py	/^RATING_COLUMNS = [USER_COLUMN, ITEM_COLUMN, RATING_COLUMN, TIMESTAMP_COLUMN]$/;"	v
RAW_CACHE_FILE	recommendation/constants.py	/^RAW_CACHE_FILE = "raw_data_cache_py{}.pickle".format(sys.version_info[0])$/;"	v
RESERVED_TOKENS	transformer/utils/tokenizer.py	/^RESERVED_TOKENS = [PAD, EOS]$/;"	v
RUN_STATUS_FAILURE	utils/logs/logger.py	/^RUN_STATUS_FAILURE = "failure"$/;"	v
RUN_STATUS_RUNNING	utils/logs/logger.py	/^RUN_STATUS_RUNNING = "running"$/;"	v
RUN_STATUS_SUCCESS	utils/logs/logger.py	/^RUN_STATUS_SUCCESS = "success"$/;"	v
RawResult	bert/squad_lib.py	/^RawResult = collections.namedtuple("RawResult",$/;"	v
ReferenceDataActionParser	utils/testing/reference_data.py	/^class ReferenceDataActionParser(argparse.ArgumentParser):$/;"	c
Resnet50EstimatorAccuracy	resnet/estimator_benchmark.py	/^class Resnet50EstimatorAccuracy(EstimatorBenchmark):$/;"	c
Resnet50EstimatorBenchmark	resnet/estimator_benchmark.py	/^class Resnet50EstimatorBenchmark(EstimatorBenchmark):$/;"	c
Resnet50EstimatorBenchmarkReal	resnet/estimator_benchmark.py	/^class Resnet50EstimatorBenchmarkReal(Resnet50EstimatorBenchmark):$/;"	c
Resnet50EstimatorBenchmarkSynth	resnet/estimator_benchmark.py	/^class Resnet50EstimatorBenchmarkSynth(Resnet50EstimatorBenchmark):$/;"	c
Resnet50KerasAccuracy	resnet/keras/keras_imagenet_benchmark.py	/^class Resnet50KerasAccuracy(keras_benchmark.KerasBenchmark):$/;"	c
Resnet50KerasBenchmarkBase	resnet/keras/keras_imagenet_benchmark.py	/^class Resnet50KerasBenchmarkBase(keras_benchmark.KerasBenchmark):$/;"	c
Resnet50KerasBenchmarkReal	resnet/keras/keras_imagenet_benchmark.py	/^class Resnet50KerasBenchmarkReal(Resnet50KerasBenchmarkBase):$/;"	c
Resnet50KerasBenchmarkSynth	resnet/keras/keras_imagenet_benchmark.py	/^class Resnet50KerasBenchmarkSynth(Resnet50KerasBenchmarkBase):$/;"	c
Resnet56EstimatorAccuracy	resnet/estimator_benchmark.py	/^class Resnet56EstimatorAccuracy(EstimatorBenchmark):$/;"	c
Resnet56KerasAccuracy	resnet/keras/keras_cifar_benchmark.py	/^class Resnet56KerasAccuracy(keras_benchmark.KerasBenchmark):$/;"	c
Resnet56KerasBenchmarkBase	resnet/keras/keras_cifar_benchmark.py	/^class Resnet56KerasBenchmarkBase(keras_benchmark.KerasBenchmark):$/;"	c
Resnet56KerasBenchmarkReal	resnet/keras/keras_cifar_benchmark.py	/^class Resnet56KerasBenchmarkReal(Resnet56KerasBenchmarkBase):$/;"	c
Resnet56KerasBenchmarkSynth	resnet/keras/keras_cifar_benchmark.py	/^class Resnet56KerasBenchmarkSynth(Resnet56KerasBenchmarkBase):$/;"	c
SHARD_TEMPLATE	recommendation/constants.py	/^SHARD_TEMPLATE = "shard_{}.tfrecords"$/;"	v
SUDO	utils/logs/mlperf_helper.py	/^SUDO = "sudo" if os.geteuid() else ""$/;"	v
SUMMARY_TXT	bert/model_training_utils.py	/^SUMMARY_TXT = 'training_summary.txt'$/;"	v
SYNTHETIC_BATCHES_PER_EPOCH	recommendation/constants.py	/^SYNTHETIC_BATCHES_PER_EPOCH = 2000$/;"	v
ScheduleBaseTester	transformer/utils/schedule_test.py	/^class ScheduleBaseTester(tf.test.TestCase):$/;"	c
SelfAttention	transformer/model/attention_layer.py	/^class SelfAttention(Attention):$/;"	c
SelfAttention	transformer/v2/attention_layer.py	/^class SelfAttention(Attention):$/;"	c
SequenceBeamSearch	transformer/model/beam_search.py	/^class SequenceBeamSearch(object):$/;"	c
SequenceBeamSearchV2	transformer/v2/beam_search.py	/^class SequenceBeamSearchV2(v1.SequenceBeamSearch):$/;"	c
SquadExample	bert/squad_lib.py	/^class SquadExample(object):$/;"	c
StringHelperTest	transformer/utils/tokenizer_test.py	/^class StringHelperTest(tf.test.TestCase):$/;"	c
Subtokenizer	transformer/utils/tokenizer.py	/^class Subtokenizer(object):$/;"	c
SubtokenizerTest	transformer/utils/tokenizer_test.py	/^class SubtokenizerTest(tf.test.TestCase):$/;"	c
SyntheticDataTest	utils/misc/model_helpers_test.py	/^class SyntheticDataTest(tf.test.TestCase):$/;"	c
SyntheticDataset	utils/misc/distribution_utils.py	/^class SyntheticDataset(object):$/;"	c
TAGS	utils/logs/mlperf_helper.py	/^TAGS = LOGGER.tags$/;"	v
TENSORS_TO_LOG	transformer/transformer_main.py	/^TENSORS_TO_LOG = {$/;"	v
TEST_CASES	utils/accelerator/tpu_test.py	/^TEST_CASES = [$/;"	v
TEST_CSV	boosted_trees/train_higgs_test.py	/^TEST_CSV = os.path.join(os.path.dirname(__file__), "train_higgs_test.csv")$/;"	v
TEST_CSV	wide_deep/census_test.py	/^TEST_CSV = os.path.join(os.path.dirname(__file__), 'census_test.csv')$/;"	v
TEST_INPUT	wide_deep/census_test.py	/^TEST_INPUT = ('18,Self-emp-not-inc,987,Bachelors,12,Married-civ-spouse,abc,'$/;"	v
TEST_INPUT_VALUES	wide_deep/census_test.py	/^TEST_INPUT_VALUES = {$/;"	v
TEST_INPUT_VALUES	wide_deep/movielens_test.py	/^TEST_INPUT_VALUES = {$/;"	v
TIMESTAMP_COLUMN	datasets/movielens.py	/^TIMESTAMP_COLUMN = "timestamp"$/;"	v
TINY_PARAMS	transformer/model/model_params.py	/^TINY_PARAMS = BASE_PARAMS.copy()$/;"	v
TITLE_COLUMN	datasets/movielens.py	/^TITLE_COLUMN = "titles"$/;"	v
TOP_K	recommendation/constants.py	/^TOP_K = 10  # Top-k list for evaluation$/;"	v
TPUBaseTester	utils/accelerator/tpu_test.py	/^class TPUBaseTester(tf.test.TestCase):$/;"	c
TRAINING_FILE	wide_deep/census_dataset.py	/^TRAINING_FILE = 'adult.data'$/;"	v
TRAINING_URL	wide_deep/census_dataset.py	/^TRAINING_URL = '%s\/%s' % (DATA_URL, TRAINING_FILE)$/;"	v
TRAIN_FOLDER_TEMPLATE	recommendation/constants.py	/^TRAIN_FOLDER_TEMPLATE = "training_cycle_{}"$/;"	v
TRAIN_ITEM_KEY	recommendation/constants.py	/^TRAIN_ITEM_KEY = "train_{}".format(movielens.ITEM_COLUMN)$/;"	v
TRAIN_LABEL_KEY	recommendation/constants.py	/^TRAIN_LABEL_KEY = "train_labels"$/;"	v
TRAIN_TOP_1	resnet/keras/keras_common.py	/^TRAIN_TOP_1 = 'training_accuracy_top_1'$/;"	v
TRAIN_USER_KEY	recommendation/constants.py	/^TRAIN_USER_KEY = "train_{}".format(movielens.USER_COLUMN)$/;"	v
TRANSFORMER_EN2DE_DATA_DIR_NAME	transformer/transformer_estimator_benchmark.py	/^TRANSFORMER_EN2DE_DATA_DIR_NAME = 'wmt32k-en2de-official'$/;"	v
TRANSFORMER_EN2DE_DATA_DIR_NAME	transformer/v2/transformer_benchmark.py	/^TRANSFORMER_EN2DE_DATA_DIR_NAME = 'wmt32k-en2de-official'$/;"	v
Tags	utils/logs/mlperf_helper.py	/^  class Tags(object):$/;"	c	class:Logger
Tests	mnist/mnist_test.py	/^class Tests(tf.test.TestCase):$/;"	c
TimeHistory	utils/misc/keras_utils.py	/^class TimeHistory(tf.keras.callbacks.Callback):$/;"	c
TokenizationTest	bert/tokenization_test.py	/^class TokenizationTest(tf.test.TestCase):$/;"	c
Transformer	bert/modeling.py	/^class Transformer(tf.keras.layers.Layer):$/;"	c
Transformer	transformer/model/transformer.py	/^class Transformer(object):$/;"	c
Transformer	transformer/v2/transformer.py	/^class Transformer(tf.keras.Model):$/;"	c
TransformerBaseEstimatorAccuracy	transformer/transformer_estimator_benchmark.py	/^class TransformerBaseEstimatorAccuracy(EstimatorBenchmark):$/;"	c
TransformerBaseEstimatorBenchmarkReal	transformer/transformer_estimator_benchmark.py	/^class TransformerBaseEstimatorBenchmarkReal(TransformerEstimatorBenchmark):$/;"	c
TransformerBaseEstimatorBenchmarkSynth	transformer/transformer_estimator_benchmark.py	/^class TransformerBaseEstimatorBenchmarkSynth(TransformerEstimatorBenchmark):$/;"	c
TransformerBaseKerasAccuracy	transformer/v2/transformer_benchmark.py	/^class TransformerBaseKerasAccuracy(TransformerBenchmark):$/;"	c
TransformerBaseKerasBenchmarkReal	transformer/v2/transformer_benchmark.py	/^class TransformerBaseKerasBenchmarkReal(TransformerKerasBenchmark):$/;"	c
TransformerBenchmark	transformer/v2/transformer_benchmark.py	/^class TransformerBenchmark(PerfZeroBenchmark):$/;"	c
TransformerBigEstimatorAccuracy	transformer/transformer_estimator_benchmark.py	/^class TransformerBigEstimatorAccuracy(EstimatorBenchmark):$/;"	c
TransformerBigEstimatorBenchmarkReal	transformer/transformer_estimator_benchmark.py	/^class TransformerBigEstimatorBenchmarkReal(TransformerEstimatorBenchmark):$/;"	c
TransformerBigEstimatorBenchmarkSynth	transformer/transformer_estimator_benchmark.py	/^class TransformerBigEstimatorBenchmarkSynth(TransformerEstimatorBenchmark):$/;"	c
TransformerBigKerasAccuracy	transformer/v2/transformer_benchmark.py	/^class TransformerBigKerasAccuracy(TransformerBenchmark):$/;"	c
TransformerBigKerasBenchmarkReal	transformer/v2/transformer_benchmark.py	/^class TransformerBigKerasBenchmarkReal(TransformerKerasBenchmark):$/;"	c
TransformerBlock	bert/modeling.py	/^class TransformerBlock(tf.keras.layers.Layer):$/;"	c
TransformerEstimatorBenchmark	transformer/transformer_estimator_benchmark.py	/^class TransformerEstimatorBenchmark(EstimatorBenchmark):$/;"	c
TransformerKerasBenchmark	transformer/v2/transformer_benchmark.py	/^class TransformerKerasBenchmark(TransformerBenchmark):$/;"	c
TransformerLayersTest	transformer/v2/transformer_layers_test.py	/^class TransformerLayersTest(tf.test.TestCase):$/;"	c
TransformerTask	transformer/v2/transformer_main.py	/^class TransformerTask(object):$/;"	c
TransformerTaskTest	transformer/v2/transformer_main_test.py	/^class TransformerTaskTest(tf.test.TestCase):$/;"	c
TransformerV2Test	transformer/v2/transformer_test.py	/^class TransformerV2Test(tf.test.TestCase):$/;"	c
TrivialKerasBenchmarkReal	resnet/keras/keras_imagenet_benchmark.py	/^class TrivialKerasBenchmarkReal(keras_benchmark.KerasBenchmark):$/;"	c
URL_ROOT	boosted_trees/data_download.py	/^URL_ROOT = "https:\/\/archive.ics.uci.edu\/ml\/machine-learning-databases\/00280"$/;"	v
USER_COLUMN	datasets/movielens.py	/^USER_COLUMN = "user_id"$/;"	v
USER_DTYPE	recommendation/constants.py	/^USER_DTYPE = np.int32$/;"	v
USER_MAP	recommendation/constants.py	/^USER_MAP = "user_map"$/;"	v
UnicodeRegex	transformer/compute_bleu.py	/^class UnicodeRegex(object):$/;"	c
VALID_POINT_MASK	recommendation/constants.py	/^VALID_POINT_MASK = "valid_point_mask"$/;"	v
VOCAB_FILE	transformer/data_download.py	/^VOCAB_FILE = "vocab.ende.%d" % _TARGET_VOCAB_SIZE$/;"	v
WEIGHT_PATTERN	transformer/v2/transformer_main_test.py	/^WEIGHT_PATTERN = re.compile(r"weights-epoch-.+\\.hdf5")$/;"	v
WIDTH	resnet/cifar10_main.py	/^WIDTH = 32$/;"	v
WarmUp	bert/optimization.py	/^class WarmUp(tf.keras.optimizers.schedules.LearningRateSchedule):$/;"	c
WordpieceTokenizer	bert/tokenization.py	/^class WordpieceTokenizer(object):$/;"	c
XnliProcessor	bert/classifier_data_lib.py	/^class XnliProcessor(DataProcessor):$/;"	c
_ALPHA	transformer/translate.py	/^_ALPHA = 0.6$/;"	v
_ALPHA	transformer/v2/translate.py	/^_ALPHA = 0.6$/;"	v
_ALPHANUMERIC_CHAR_SET	transformer/utils/tokenizer.py	/^_ALPHANUMERIC_CHAR_SET = set($/;"	v
_BASE_END_TO_END_FLAGS	recommendation/ncf_test.py	/^  _BASE_END_TO_END_FLAGS = ['-batch_size', '1024', '-train_epochs', '1']$/;"	v	class:NcfTest
_BATCH_NORM_DECAY	resnet/resnet_model.py	/^_BATCH_NORM_DECAY = 0.997$/;"	v
_BATCH_NORM_EPSILON	resnet/resnet_model.py	/^_BATCH_NORM_EPSILON = 1e-5$/;"	v
_BATCH_SIZE	resnet/cifar10_test.py	/^_BATCH_SIZE = 128$/;"	v
_BATCH_SIZE	resnet/imagenet_test.py	/^_BATCH_SIZE = 32$/;"	v
_BEAM_SIZE	transformer/translate.py	/^_BEAM_SIZE = 4$/;"	v
_BEAM_SIZE	transformer/v2/translate.py	/^_BEAM_SIZE = 4$/;"	v
_BENCHMARK	utils/logs/mlperf_helper.py	/^_BENCHMARK = r"([a-zA-Z0-9_]+)"$/;"	v
_BOUNDARY_SCALE	transformer/utils/dataset.py	/^_BOUNDARY_SCALE = 1.1$/;"	v
_BOUNDARY_SCALE	transformer/v2/data_pipeline.py	/^_BOUNDARY_SCALE = 1.1$/;"	v
_BUFFER_SIZE	wide_deep/movielens_dataset.py	/^_BUFFER_SIZE = {$/;"	v
_BUFFER_SUBDIR	wide_deep/movielens_dataset.py	/^_BUFFER_SUBDIR = "wide_deep_buffer"$/;"	v
_B_MEAN	resnet/imagenet_preprocessing.py	/^_B_MEAN = 103.94$/;"	v
_CALLSITE	utils/logs/mlperf_helper.py	/^_CALLSITE = r"\\((.+):([0-9]+)\\)"$/;"	v
_CHANNEL_MEANS	resnet/imagenet_preprocessing.py	/^_CHANNEL_MEANS = [_R_MEAN, _G_MEAN, _B_MEAN]$/;"	v
_CSV_COLUMNS	wide_deep/census_dataset.py	/^_CSV_COLUMNS = [$/;"	v
_CSV_COLUMN_DEFAULTS	wide_deep/census_dataset.py	/^_CSV_COLUMN_DEFAULTS = [[0], [''], [0], [''], [0], [''], [''], [''], [''], [''],$/;"	v
_DATA_URL	datasets/movielens.py	/^_DATA_URL = "http:\/\/files.grouplens.org\/datasets\/movielens\/"$/;"	v
_DATE_TIME_FORMAT_PATTERN	utils/logs/logger.py	/^_DATE_TIME_FORMAT_PATTERN = "%Y-%m-%dT%H:%M:%S.%fZ"$/;"	v
_DECODE_BATCH_SIZE	transformer/translate.py	/^_DECODE_BATCH_SIZE = 32$/;"	v
_DECODE_BATCH_SIZE	transformer/v2/translate.py	/^_DECODE_BATCH_SIZE = 32$/;"	v
_DEFAULT_IMAGE_BYTES	resnet/cifar10_main.py	/^_DEFAULT_IMAGE_BYTES = HEIGHT * WIDTH * NUM_CHANNELS$/;"	v
_DUMMY_COL	utils/data/file_io_test.py	/^_DUMMY_COL = "column_0"$/;"	v
_DUMMY_VEC_COL	utils/data/file_io_test.py	/^_DUMMY_VEC_COL = "column_1"$/;"	v
_DUMMY_VEC_LEN	utils/data/file_io_test.py	/^_DUMMY_VEC_LEN = 4$/;"	v
_ESCAPE_CHARS	transformer/utils/tokenizer.py	/^_ESCAPE_CHARS = set(u"\\\\_u;0123456789")$/;"	v
_EVAL_DATA_SOURCES	transformer/data_download.py	/^_EVAL_DATA_SOURCES = [$/;"	v
_EVAL_FEATURE_MAP	recommendation/data_pipeline.py	/^_EVAL_FEATURE_MAP = {$/;"	v
_EVAL_SHARDS	transformer/data_download.py	/^_EVAL_SHARDS = 1$/;"	v
_EVAL_TAG	transformer/data_download.py	/^_EVAL_TAG = "dev"  # Following WMT and Tensor2Tensor conventions, in which the$/;"	v
_EXPECTED_CACHE_KEYS	recommendation/data_preprocessing.py	/^_EXPECTED_CACHE_KEYS = ($/;"	v
_EXTRA_DECODE_LENGTH	transformer/translate.py	/^_EXTRA_DECODE_LENGTH = 100$/;"	v
_EXTRA_DECODE_LENGTH	transformer/v2/translate.py	/^_EXTRA_DECODE_LENGTH = 100$/;"	v
_FEATURE_MAP	utils/data/file_io_test.py	/^_FEATURE_MAP = {$/;"	v
_FEATURE_MAP	wide_deep/movielens_dataset.py	/^_FEATURE_MAP = {$/;"	v
_GARBAGE_COLLECTOR	utils/data/file_io.py	/^_GARBAGE_COLLECTOR = _GarbageCollector()$/;"	v
_G_MEAN	resnet/imagenet_preprocessing.py	/^_G_MEAN = 116.78$/;"	v
_GarbageCollector	utils/data/file_io.py	/^class _GarbageCollector(object):$/;"	c
_HASH_BUCKET_SIZE	wide_deep/census_dataset.py	/^_HASH_BUCKET_SIZE = 1000$/;"	v
_HEIGHT	resnet/cifar10_test.py	/^_HEIGHT = 32$/;"	v
_ITEM_EMBEDDING_DIM	wide_deep/movielens_dataset.py	/^_ITEM_EMBEDDING_DIM = 64$/;"	v
_LABEL_CLASSES	resnet/imagenet_test.py	/^_LABEL_CLASSES = 1001$/;"	v
_MAX_MIN_COUNT	transformer/utils/tokenizer.py	/^_MAX_MIN_COUNT = 1000  # max value to use when binary searching for min_count$/;"	v
_MIN_BOUNDARY	transformer/utils/dataset.py	/^_MIN_BOUNDARY = 8$/;"	v
_MIN_BOUNDARY	transformer/v2/data_pipeline.py	/^_MIN_BOUNDARY = 8$/;"	v
_MIN_MIN_COUNT	transformer/utils/tokenizer.py	/^_MIN_MIN_COUNT = 1     # min value to use when binary searching for min_count$/;"	v
_MIN_VERSION	utils/logs/mlperf_helper.py	/^_MIN_VERSION = (0, 0, 10)$/;"	v
_NCF_PREFIX	utils/logs/mlperf_helper.py	/^_NCF_PREFIX = "NCF_RAW_"$/;"	v
_NEG_INF	transformer/model/model_utils.py	/^_NEG_INF = -1e9$/;"	v
_NEG_INF	transformer/model/transformer.py	/^_NEG_INF = -1e9$/;"	v
_NUM_CHANNELS	keras_application_models/dataset.py	/^_NUM_CHANNELS = 3$/;"	v
_NUM_CHANNELS	resnet/cifar10_test.py	/^_NUM_CHANNELS = 3$/;"	v
_NUM_CLASSES	keras_application_models/dataset.py	/^_NUM_CLASSES = 1000$/;"	v
_NUM_DATA_FILES	resnet/cifar10_main.py	/^_NUM_DATA_FILES = 5$/;"	v
_NUM_EXAMPLES	wide_deep/census_dataset.py	/^_NUM_EXAMPLES = {$/;"	v
_NUM_TRAIN_FILES	resnet/imagenet_main.py	/^_NUM_TRAIN_FILES = 1024$/;"	v
_PER_BATCH_METRICS	keras_application_models/model_callbacks.py	/^_PER_BATCH_METRICS = {$/;"	v
_PER_EPOCH_METRICS	keras_application_models/model_callbacks.py	/^_PER_EPOCH_METRICS = {$/;"	v
_PREFIX	transformer/data_download.py	/^_PREFIX = "wmt32k"$/;"	v
_PREFIX	utils/logs/mlperf_helper.py	/^_PREFIX = r"(?:{})?:::MLPv([0-9]+).([0-9]+).([0-9]+)".format(_NCF_PREFIX)$/;"	v
_RAW_ROW	utils/data/file_io_test.py	/^_RAW_ROW = "raw_row"$/;"	v
_READ_RECORD_BUFFER	transformer/utils/dataset.py	/^_READ_RECORD_BUFFER = 8 * 1000 * 1000$/;"	v
_READ_RECORD_BUFFER	transformer/v2/data_pipeline.py	/^_READ_RECORD_BUFFER = 8 * 1000 * 1000$/;"	v
_RECORD_BYTES	resnet/cifar10_main.py	/^_RECORD_BYTES = _DEFAULT_IMAGE_BYTES + 1$/;"	v
_RESIZE_MIN	resnet/imagenet_preprocessing.py	/^_RESIZE_MIN = 256$/;"	v
_ROWS_PER_CORE	utils/data/file_io.py	/^_ROWS_PER_CORE = 50000$/;"	v
_ROWS_PER_CORE	utils/data/file_io_test.py	/^_ROWS_PER_CORE = 4$/;"	v
_R_MEAN	resnet/imagenet_preprocessing.py	/^_R_MEAN = 123.68$/;"	v
_SHUFFLE_BUFFER	resnet/imagenet_main.py	/^_SHUFFLE_BUFFER = 10000$/;"	v
_SINGLE_SAMPLE	transformer/v2/transformer_main.py	/^_SINGLE_SAMPLE = 1$/;"	v
_STACK_OFFSET	utils/logs/mlperf_helper.py	/^_STACK_OFFSET = 2$/;"	v
_StateKeys	transformer/model/beam_search.py	/^class _StateKeys(object):$/;"	c
_StateKeys	transformer/v2/beam_search.py	/^_StateKeys = v1._StateKeys  # pylint: disable=protected-access$/;"	v
_TAG	utils/logs/mlperf_helper.py	/^_TAG = r"([a-zA-Z0-9_]+)"$/;"	v
_TARGET_THRESHOLD	transformer/data_download.py	/^_TARGET_THRESHOLD = 327  # Accept vocabulary if size is within this threshold$/;"	v
_TARGET_VOCAB_SIZE	transformer/data_download.py	/^_TARGET_VOCAB_SIZE = 32768  # Number of subtokens in the vocabulary list.$/;"	v
_TENSORS_TO_LOG	utils/logs/hooks_helper.py	/^_TENSORS_TO_LOG = dict((x, x) for x in ['learning_rate',$/;"	v
_TEST_CASES	utils/data/file_io_test.py	/^_TEST_CASES = [$/;"	v
_TEST_DATA_SOURCES	transformer/data_download.py	/^_TEST_DATA_SOURCES = [$/;"	v
_TIMESTAMP	utils/logs/mlperf_helper.py	/^_TIMESTAMP = r"([0-9]+\\.[0-9]+)"$/;"	v
_TRAIN_DATA_MIN_COUNT	transformer/data_download.py	/^_TRAIN_DATA_MIN_COUNT = 6$/;"	v
_TRAIN_DATA_SOURCES	transformer/data_download.py	/^_TRAIN_DATA_SOURCES = [$/;"	v
_TRAIN_FEATURE_MAP	recommendation/data_pipeline.py	/^_TRAIN_FEATURE_MAP = {$/;"	v
_TRAIN_SHARDS	transformer/data_download.py	/^_TRAIN_SHARDS = 100$/;"	v
_TRAIN_TAG	transformer/data_download.py	/^_TRAIN_TAG = "train"$/;"	v
_UNDEFINED_UNICODE	transformer/utils/tokenizer.py	/^_UNDEFINED_UNICODE = u"\\u3013"$/;"	v
_UNESCAPE_REGEX	transformer/utils/tokenizer.py	/^_UNESCAPE_REGEX = re.compile(r"\\\\u|\\\\\\\\|\\\\([0-9]+);")$/;"	v
_USER_EMBEDDING_DIM	wide_deep/movielens_dataset.py	/^_USER_EMBEDDING_DIM = 16$/;"	v
_VALUE	utils/logs/mlperf_helper.py	/^_VALUE = r"(.*)"$/;"	v
_WIDTH	resnet/cifar10_test.py	/^_WIDTH = 32$/;"	v
__call__	bert/bert_models.py	/^  def __call__(self,$/;"	m	class:BertPretrainLayer	file:
__call__	bert/bert_models.py	/^  def __call__(self,$/;"	m	class:BertPretrainLossAndMetricLayer	file:
__call__	bert/modeling.py	/^  def __call__(self, from_tensor, to_tensor, attention_mask=None, **kwargs):$/;"	m	class:Attention	file:
__call__	bert/modeling.py	/^  def __call__(self, input_tensor, attention_mask=None):$/;"	m	class:Transformer	file:
__call__	bert/modeling.py	/^  def __call__(self, input_tensor, attention_mask=None):$/;"	m	class:TransformerBlock	file:
__call__	bert/modeling.py	/^  def __call__(self, word_embeddings, token_type_ids=None, **kwargs):$/;"	m	class:EmbeddingPostprocessor	file:
__call__	bert/modeling.py	/^  def __call__(self,$/;"	m	class:BertModel	file:
__call__	bert/optimization.py	/^  def __call__(self, step):$/;"	m	class:WarmUp	file:
__call__	resnet/keras/keras_common.py	/^  def __call__(self, step):$/;"	m	class:PiecewiseConstantDecayWithWarmup	file:
__call__	resnet/resnet_model.py	/^  def __call__(self, inputs, training):$/;"	m	class:Model	file:
__call__	transformer/model/transformer.py	/^  def __call__(self, inputs, targets=None):$/;"	m	class:Transformer	file:
__call__	transformer/model/transformer.py	/^  def __call__(self, x, *args, **kwargs):$/;"	m	class:PrePostProcessingWrapper	file:
__call__	transformer/v2/optimizer.py	/^  def __call__(self, global_step):$/;"	m	class:LearningRateFn	file:
__call__	utils/logs/mlperf_helper.py	/^  def __call__(self, enable=False):$/;"	m	class:Logger	file:
__enter__	utils/logs/mlperf_helper.py	/^  def __enter__(self):$/;"	m	class:Logger	file:
__enter__	utils/misc/distribution_utils.py	/^  def __enter__(self):$/;"	m	class:DummyContextManager	file:
__exit__	utils/logs/mlperf_helper.py	/^  def __exit__(self, exc_type, exc_val, exc_tb):$/;"	m	class:Logger	file:
__exit__	utils/misc/distribution_utils.py	/^  def __exit__(self, *args):$/;"	m	class:DummyContextManager	file:
__getattr__	utils/logs/mlperf_helper.py	/^    def __getattr__(self, item):$/;"	m	class:Logger.Tags	file:
__init__	benchmark/benchmark_uploader.py	/^  def __init__(self, gcp_project=None, credentials=None):$/;"	m	class:BigQueryUploader
__init__	bert/benchmark/bert_benchmark.py	/^  def __init__(self, num_batches_to_skip=10):$/;"	m	class:BenchmarkTimerCallback
__init__	bert/benchmark/bert_benchmark.py	/^  def __init__(self, output_dir=None):$/;"	m	class:BertBenchmarkBase
__init__	bert/benchmark/bert_benchmark.py	/^  def __init__(self, output_dir=None, **kwargs):$/;"	m	class:BertClassifyAccuracy
__init__	bert/benchmark/bert_benchmark.py	/^  def __init__(self, output_dir=None, **kwargs):$/;"	m	class:BertClassifyBenchmark
__init__	bert/bert_models.py	/^  def __init__(self, bert_config, **kwargs):$/;"	m	class:BertPretrainLossAndMetricLayer
__init__	bert/bert_models.py	/^  def __init__(self, initializer=None, float_type=tf.float32, **kwargs):$/;"	m	class:BertSquadLogitsLayer
__init__	bert/bert_models.py	/^  def __init__(self,$/;"	m	class:BertPretrainLayer
__init__	bert/classifier_data_lib.py	/^  def __init__(self):$/;"	m	class:XnliProcessor
__init__	bert/classifier_data_lib.py	/^  def __init__(self, guid, text_a, text_b=None, label=None):$/;"	m	class:InputExample
__init__	bert/classifier_data_lib.py	/^  def __init__(self,$/;"	m	class:InputFeatures
__init__	bert/model_saving_utils.py	/^  def __init__(self, checkpoint_dir, checkpoint):$/;"	m	class:BertModelCheckpoint
__init__	bert/modeling.py	/^  def __init__(self, config, float_type=tf.float32, **kwargs):$/;"	m	class:BertModel
__init__	bert/modeling.py	/^  def __init__(self,$/;"	m	class:Attention
__init__	bert/modeling.py	/^  def __init__(self,$/;"	m	class:BertConfig
__init__	bert/modeling.py	/^  def __init__(self,$/;"	m	class:Dense2DProjection
__init__	bert/modeling.py	/^  def __init__(self,$/;"	m	class:Dense3D
__init__	bert/modeling.py	/^  def __init__(self,$/;"	m	class:EmbeddingLookup
__init__	bert/modeling.py	/^  def __init__(self,$/;"	m	class:EmbeddingPostprocessor
__init__	bert/modeling.py	/^  def __init__(self,$/;"	m	class:Transformer
__init__	bert/modeling.py	/^  def __init__(self,$/;"	m	class:TransformerBlock
__init__	bert/optimization.py	/^  def __init__($/;"	m	class:WarmUp
__init__	bert/optimization.py	/^  def __init__(self,$/;"	m	class:AdamWeightDecay
__init__	bert/squad_lib.py	/^  def __init__(self, filename, is_training):$/;"	m	class:FeatureWriter
__init__	bert/squad_lib.py	/^  def __init__(self,$/;"	m	class:InputFeatures
__init__	bert/squad_lib.py	/^  def __init__(self,$/;"	m	class:SquadExample
__init__	bert/tokenization.py	/^  def __init__(self, do_lower_case=True):$/;"	m	class:BasicTokenizer
__init__	bert/tokenization.py	/^  def __init__(self, vocab, unk_token="[UNK]", max_input_chars_per_word=200):$/;"	m	class:WordpieceTokenizer
__init__	bert/tokenization.py	/^  def __init__(self, vocab_file, do_lower_case=True):$/;"	m	class:FullTokenizer
__init__	keras_application_models/dataset.py	/^  def __init__(self, batch_size):$/;"	m	class:Cifar10Dataset
__init__	keras_application_models/model_callbacks.py	/^  def __init__(self, batch_size, every_n_steps=1, metric_logger=None):$/;"	m	class:ExamplesPerSecondCallback
__init__	keras_application_models/model_callbacks.py	/^  def __init__(self, metric_logger=None):$/;"	m	class:LoggingMetricCallback
__init__	recommendation/data_pipeline.py	/^  def __init__(self, *args, **kwargs):$/;"	m	class:BisectionDataConstructor
__init__	recommendation/data_pipeline.py	/^  def __init__(self, *args, **kwargs):$/;"	m	class:MaterializedDataConstructor
__init__	recommendation/data_pipeline.py	/^  def __init__(self, is_training, stream_files, batches_per_epoch,$/;"	m	class:DatasetManager
__init__	recommendation/data_pipeline.py	/^  def __init__(self,$/;"	m	class:BaseDataConstructor
__init__	recommendation/ncf_keras_benchmark.py	/^  def __init__(self,$/;"	m	class:KerasNCFBenchmarkBase
__init__	recommendation/ncf_keras_benchmark.py	/^  def __init__(self,$/;"	m	class:KerasNCFRealData
__init__	recommendation/ncf_keras_benchmark.py	/^  def __init__(self,$/;"	m	class:KerasNCFSyntheticData
__init__	recommendation/ncf_keras_main.py	/^  def __init__(self, monitor, desired_value):$/;"	m	class:CustomEarlyStopping
__init__	recommendation/ncf_keras_main.py	/^  def __init__(self, params):$/;"	m	class:MetricLayer
__init__	recommendation/ncf_keras_main.py	/^  def __init__(self, producer):$/;"	m	class:IncrementEpochCallback
__init__	recommendation/popen_helper.py	/^  def __init__(self, *args, **kwargs):$/;"	m	class:FauxPool
__init__	resnet/cifar10_main.py	/^  def __init__(self, resnet_size, data_format=None, num_classes=NUM_CLASSES,$/;"	m	class:Cifar10Model
__init__	resnet/estimator_benchmark.py	/^  def __init__(self, output_dir=None, default_flags=None):$/;"	m	class:Resnet50EstimatorBenchmark
__init__	resnet/estimator_benchmark.py	/^  def __init__(self, output_dir=None, default_flags=None, flag_methods=None):$/;"	m	class:EstimatorBenchmark
__init__	resnet/estimator_benchmark.py	/^  def __init__(self, output_dir=None, root_data_dir=None, **kwargs):$/;"	m	class:Resnet50EstimatorAccuracy
__init__	resnet/estimator_benchmark.py	/^  def __init__(self, output_dir=None, root_data_dir=None, **kwargs):$/;"	m	class:Resnet50EstimatorBenchmarkReal
__init__	resnet/estimator_benchmark.py	/^  def __init__(self, output_dir=None, root_data_dir=None, **kwargs):$/;"	m	class:Resnet50EstimatorBenchmarkSynth
__init__	resnet/estimator_benchmark.py	/^  def __init__(self, output_dir=None, root_data_dir=None, **kwargs):$/;"	m	class:Resnet56EstimatorAccuracy
__init__	resnet/imagenet_main.py	/^  def __init__(self, resnet_size, data_format=None, num_classes=NUM_CLASSES,$/;"	m	class:ImagenetModel
__init__	resnet/keras/keras_benchmark.py	/^  def __init__(self, output_dir=None, default_flags=None, flag_methods=None):$/;"	m	class:KerasBenchmark
__init__	resnet/keras/keras_cifar_benchmark.py	/^  def __init__(self, output_dir=None, default_flags=None):$/;"	m	class:Resnet56KerasBenchmarkBase
__init__	resnet/keras/keras_cifar_benchmark.py	/^  def __init__(self, output_dir=None, root_data_dir=None, **kwargs):$/;"	m	class:Resnet56KerasAccuracy
__init__	resnet/keras/keras_cifar_benchmark.py	/^  def __init__(self, output_dir=None, root_data_dir=None, **kwargs):$/;"	m	class:Resnet56KerasBenchmarkReal
__init__	resnet/keras/keras_cifar_benchmark.py	/^  def __init__(self, output_dir=None, root_data_dir=None, **kwargs):$/;"	m	class:Resnet56KerasBenchmarkSynth
__init__	resnet/keras/keras_common.py	/^  def __init__(self, batch_size, epoch_size, warmup_epochs, boundaries,$/;"	m	class:PiecewiseConstantDecayWithWarmup
__init__	resnet/keras/keras_common.py	/^  def __init__(self, schedule, batch_size, num_images):$/;"	m	class:LearningRateBatchScheduler
__init__	resnet/keras/keras_imagenet_benchmark.py	/^  def __init__(self, output_dir=None, default_flags=None):$/;"	m	class:Resnet50KerasBenchmarkBase
__init__	resnet/keras/keras_imagenet_benchmark.py	/^  def __init__(self, output_dir=None, root_data_dir=None, **kwargs):$/;"	m	class:Resnet50KerasAccuracy
__init__	resnet/keras/keras_imagenet_benchmark.py	/^  def __init__(self, output_dir=None, root_data_dir=None, **kwargs):$/;"	m	class:Resnet50KerasBenchmarkReal
__init__	resnet/keras/keras_imagenet_benchmark.py	/^  def __init__(self, output_dir=None, root_data_dir=None, **kwargs):$/;"	m	class:Resnet50KerasBenchmarkSynth
__init__	resnet/keras/keras_imagenet_benchmark.py	/^  def __init__(self, output_dir=None, root_data_dir=None, **kwargs):$/;"	m	class:TrivialKerasBenchmarkReal
__init__	resnet/resnet_model.py	/^  def __init__(self, resnet_size, bottleneck, num_classes, num_filters,$/;"	m	class:Model
__init__	transformer/compute_bleu.py	/^  def __init__(self):$/;"	m	class:UnicodeRegex
__init__	transformer/model/attention_layer.py	/^  def __init__(self, hidden_size, num_heads, attention_dropout, train):$/;"	m	class:Attention
__init__	transformer/model/beam_search.py	/^  def __init__(self, symbols_to_logits_fn, vocab_size, batch_size,$/;"	m	class:SequenceBeamSearch
__init__	transformer/model/embedding_layer.py	/^  def __init__(self, vocab_size, hidden_size, method="gather"):$/;"	m	class:EmbeddingSharedWeights
__init__	transformer/model/ffn_layer.py	/^  def __init__(self, hidden_size, filter_size, relu_dropout, train, allow_pad):$/;"	m	class:FeedFowardNetwork
__init__	transformer/model/transformer.py	/^  def __init__(self, hidden_size):$/;"	m	class:LayerNormalization
__init__	transformer/model/transformer.py	/^  def __init__(self, layer, params, train):$/;"	m	class:PrePostProcessingWrapper
__init__	transformer/model/transformer.py	/^  def __init__(self, params, train):$/;"	m	class:DecoderStack
__init__	transformer/model/transformer.py	/^  def __init__(self, params, train):$/;"	m	class:EncoderStack
__init__	transformer/model/transformer.py	/^  def __init__(self, params, train):$/;"	m	class:Transformer
__init__	transformer/transformer_estimator_benchmark.py	/^  def __init__(self, output_dir=None, default_flags=None, batch_per_gpu=4096):$/;"	m	class:TransformerEstimatorBenchmark
__init__	transformer/transformer_estimator_benchmark.py	/^  def __init__(self, output_dir=None, default_flags=None, flag_methods=None):$/;"	m	class:EstimatorBenchmark
__init__	transformer/transformer_estimator_benchmark.py	/^  def __init__(self, output_dir=None, root_data_dir=None, **kwargs):$/;"	m	class:TransformerBaseEstimatorAccuracy
__init__	transformer/transformer_estimator_benchmark.py	/^  def __init__(self, output_dir=None, root_data_dir=None, **kwargs):$/;"	m	class:TransformerBaseEstimatorBenchmarkReal
__init__	transformer/transformer_estimator_benchmark.py	/^  def __init__(self, output_dir=None, root_data_dir=None, **kwargs):$/;"	m	class:TransformerBaseEstimatorBenchmarkSynth
__init__	transformer/transformer_estimator_benchmark.py	/^  def __init__(self, output_dir=None, root_data_dir=None, **kwargs):$/;"	m	class:TransformerBigEstimatorAccuracy
__init__	transformer/transformer_estimator_benchmark.py	/^  def __init__(self, output_dir=None, root_data_dir=None, **kwargs):$/;"	m	class:TransformerBigEstimatorBenchmarkReal
__init__	transformer/transformer_estimator_benchmark.py	/^  def __init__(self, output_dir=None, root_data_dir=None, **kwargs):$/;"	m	class:TransformerBigEstimatorBenchmarkSynth
__init__	transformer/utils/schedule.py	/^  def __init__(self, train_steps, steps_between_evals, train_epochs,$/;"	m	class:Manager
__init__	transformer/utils/tokenizer.py	/^  def __init__(self, vocab_file, reserved_tokens=None):$/;"	m	class:Subtokenizer
__init__	transformer/v2/attention_layer.py	/^  def __init__(self, hidden_size, num_heads, attention_dropout):$/;"	m	class:Attention
__init__	transformer/v2/embedding_layer.py	/^  def __init__(self, vocab_size, hidden_size):$/;"	m	class:EmbeddingSharedWeights
__init__	transformer/v2/ffn_layer.py	/^  def __init__(self, hidden_size, filter_size, relu_dropout):$/;"	m	class:FeedForwardNetwork
__init__	transformer/v2/metrics.py	/^  def __init__(self, vocab_size):$/;"	m	class:MetricLayer
__init__	transformer/v2/metrics.py	/^  def __init__(self, vocab_size, label_smoothing):$/;"	m	class:LossLayer
__init__	transformer/v2/optimizer.py	/^  def __init__(self, learning_rate, hidden_size, warmup_steps):$/;"	m	class:LearningRateFn
__init__	transformer/v2/optimizer.py	/^  def __init__(self, schedule, init_steps=None, verbose=False):$/;"	m	class:LearningRateScheduler
__init__	transformer/v2/transformer.py	/^  def __init__(self, hidden_size):$/;"	m	class:LayerNormalization
__init__	transformer/v2/transformer.py	/^  def __init__(self, layer, params):$/;"	m	class:PrePostProcessingWrapper
__init__	transformer/v2/transformer.py	/^  def __init__(self, params):$/;"	m	class:DecoderStack
__init__	transformer/v2/transformer.py	/^  def __init__(self, params):$/;"	m	class:EncoderStack
__init__	transformer/v2/transformer.py	/^  def __init__(self, params, name=None):$/;"	m	class:Transformer
__init__	transformer/v2/transformer_benchmark.py	/^  def __init__(self, output_dir=None, default_flags=None, root_data_dir=None,$/;"	m	class:TransformerBenchmark
__init__	transformer/v2/transformer_benchmark.py	/^  def __init__(self, output_dir=None, default_flags=None,$/;"	m	class:TransformerKerasBenchmark
__init__	transformer/v2/transformer_benchmark.py	/^  def __init__(self, output_dir=None, root_data_dir=None, **kwargs):$/;"	m	class:TransformerBaseKerasAccuracy
__init__	transformer/v2/transformer_benchmark.py	/^  def __init__(self, output_dir=None, root_data_dir=None, **kwargs):$/;"	m	class:TransformerBaseKerasBenchmarkReal
__init__	transformer/v2/transformer_benchmark.py	/^  def __init__(self, output_dir=None, root_data_dir=None, **kwargs):$/;"	m	class:TransformerBigKerasAccuracy
__init__	transformer/v2/transformer_benchmark.py	/^  def __init__(self, output_dir=None, root_data_dir=None, **kwargs):$/;"	m	class:TransformerBigKerasBenchmarkReal
__init__	transformer/v2/transformer_main.py	/^  def __init__(self, flags_obj):$/;"	m	class:TransformerTask
__init__	utils/data/file_io.py	/^  def __init__(self):$/;"	m	class:_GarbageCollector
__init__	utils/logs/hooks.py	/^  def __init__(self,$/;"	m	class:ExamplesPerSecondHook
__init__	utils/logs/logger.py	/^  def __init__(self, logging_dir):$/;"	m	class:BenchmarkFileLogger
__init__	utils/logs/logger.py	/^  def __init__(self,$/;"	m	class:BenchmarkBigQueryLogger
__init__	utils/logs/metric_hook.py	/^  def __init__(self, tensors, metric_logger=None,$/;"	m	class:LoggingMetricHook
__init__	utils/logs/mlperf_helper.py	/^    def __init__(self, mlperf_log):$/;"	m	class:Logger.Tags
__init__	utils/logs/mlperf_helper.py	/^  def __init__(self):$/;"	m	class:Logger
__init__	utils/misc/distribution_utils.py	/^  def __init__(self, dataset, split_by=1):$/;"	m	class:SyntheticDataset
__init__	utils/misc/keras_utils.py	/^  def __init__(self, batch_index, timestamp):$/;"	m	class:BatchTimestamp
__init__	utils/misc/keras_utils.py	/^  def __init__(self, batch_size, log_steps):$/;"	m	class:TimeHistory
__init__	utils/misc/keras_utils.py	/^  def __init__(self, log_dir, start_step, stop_step):$/;"	m	class:ProfilerCallback
__init__	utils/testing/mock_lib.py	/^  def __init__(self):$/;"	m	class:MockBenchmarkLogger
__init__	utils/testing/perfzero_benchmark.py	/^  def __init__(self, output_dir=None, default_flags=None, flag_methods=None):$/;"	m	class:PerfZeroBenchmark
__init__	utils/testing/reference_data.py	/^  def __init__(self):$/;"	m	class:ReferenceDataActionParser
__repr__	bert/squad_lib.py	/^  def __repr__(self):$/;"	m	class:SquadExample	file:
__repr__	utils/misc/keras_utils.py	/^  def __repr__(self):$/;"	m	class:BatchTimestamp	file:
__str__	bert/squad_lib.py	/^  def __str__(self):$/;"	m	class:SquadExample	file:
__str__	recommendation/data_pipeline.py	/^  def __str__(self):$/;"	m	class:BaseDataConstructor	file:
_add_metrics	bert/bert_models.py	/^  def _add_metrics(self, lm_output, lm_labels, lm_label_weights,$/;"	m	class:BertPretrainLossAndMetricLayer
_append_feature	bert/run_squad.py	/^  def _append_feature(feature, is_padding):$/;"	f	function:predict_squad
_aspect_preserving_resize	resnet/imagenet_preprocessing.py	/^def _aspect_preserving_resize(image, resize_min):$/;"	f
_assemble_eval_batch	recommendation/data_pipeline.py	/^  def _assemble_eval_batch(users, positive_items, negative_items,$/;"	m	class:BaseDataConstructor
_assert_exists	transformer/v2/transformer_main_test.py	/^  def _assert_exists(self, filepath):$/;"	m	class:TransformerTaskTest
_assert_metrics	utils/logs/hooks_test.py	/^  def _assert_metrics(self):$/;"	m	class:ExamplesPerSecondHookTest
_batch_examples	transformer/utils/dataset.py	/^def _batch_examples(dataset, batch_size, max_length):$/;"	f
_batch_examples	transformer/v2/data_pipeline.py	/^def _batch_examples(dataset, batch_size, max_length):$/;"	f
_batch_norm_ops	resnet/layer_test.py	/^  def _batch_norm_ops(self, test=False):$/;"	m	class:BaseTest
_benchmark_logger	utils/logs/logger.py	/^_benchmark_logger = None$/;"	v
_bert_pretrain_loss_fn	bert/run_pretraining.py	/^  def _bert_pretrain_loss_fn(unused_labels, losses, **unused_args):$/;"	f	function:get_loss_fn
_bottleneck_block_v1	resnet/resnet_model.py	/^def _bottleneck_block_v1(inputs, filters, training, projection_shortcut,$/;"	f
_bottleneck_block_v2	resnet/resnet_model.py	/^def _bottleneck_block_v2(inputs, filters, training, projection_shortcut,$/;"	f
_buffer_path	wide_deep/movielens_dataset.py	/^def _buffer_path(data_dir, dataset, name):$/;"	f
_build_eval_output	resnet/keras/keras_common_test.py	/^  def _build_eval_output(self, top_1, eval_loss):$/;"	m	class:KerasCommonTests
_build_history	resnet/keras/keras_common_test.py	/^  def _build_history(self, loss, cat_accuracy=None,$/;"	m	class:KerasCommonTests
_building_block_v1	resnet/resnet_model.py	/^def _building_block_v1(inputs, filters, training, projection_shortcut, strides,$/;"	f
_building_block_v2	resnet/resnet_model.py	/^def _building_block_v2(inputs, filters, training, projection_shortcut, strides,$/;"	f
_central_crop	resnet/imagenet_preprocessing.py	/^def _central_crop(image, crop_height, crop_width):$/;"	f
_check_benchmark_log_dir	utils/flags/_benchmark.py	/^  def _check_benchmark_log_dir(flags_dict):$/;"	f	function:define_benchmark
_check_bleu_files	transformer/transformer_main.py	/^  def _check_bleu_files(flags_dict):$/;"	f	function:define_transformer_flags
_check_bleu_files	transformer/v2/misc.py	/^  def _check_bleu_files(flags_dict):$/;"	f	function:define_transformer_flags
_check_bleu_vocab_file	transformer/transformer_main.py	/^  def _check_bleu_vocab_file(flags_dict):$/;"	f	function:define_transformer_flags
_check_bleu_vocab_file	transformer/v2/misc.py	/^  def _check_bleu_vocab_file(flags_dict):$/;"	f	function:define_transformer_flags
_check_buffers	wide_deep/movielens_dataset.py	/^def _check_buffers(data_dir, dataset):$/;"	f
_check_eager_dist_strat	keras_application_models/benchmark_main.py	/^  def _check_eager_dist_strat(flag_dict):$/;"	f	function:define_keras_benchmark_flags
_check_export_vocab_file	transformer/transformer_main.py	/^  def _check_export_vocab_file(flags_dict):$/;"	f	function:define_transformer_flags
_check_export_vocab_file	transformer/v2/misc.py	/^  def _check_export_vocab_file(flags_dict):$/;"	f	function:define_transformer_flags
_check_fp16_implementation	utils/flags/_performance.py	/^      def _check_fp16_implementation(flags_dict):$/;"	f	function:define_performance
_check_is_max_context	bert/squad_lib.py	/^def _check_is_max_context(doc_spans, cur_span_index, position):$/;"	f
_check_loss_scale	utils/flags/_performance.py	/^      def _check_loss_scale(loss_scale):  # pylint: disable=unused-variable$/;"	f	function:define_performance
_check_train_limits	transformer/transformer_main.py	/^  def _check_train_limits(flag_dict):$/;"	f	function:define_transformer_flags
_check_train_limits	transformer/v2/misc.py	/^  def _check_train_limits(flag_dict):$/;"	f	function:define_transformer_flags
_clean_text	bert/tokenization.py	/^  def _clean_text(self, text):$/;"	m	class:BasicTokenizer
_collect_cpu_info	utils/logs/logger.py	/^def _collect_cpu_info(run_info):$/;"	f
_collect_gpu_info	utils/logs/logger.py	/^def _collect_gpu_info(run_info, session_config=None):$/;"	f
_collect_memory_info	utils/logs/logger.py	/^def _collect_memory_info(run_info):$/;"	f
_collect_run_params	utils/logs/logger.py	/^def _collect_run_params(run_info, run_params):$/;"	f
_collect_tensorflow_environment_variables	utils/logs/logger.py	/^def _collect_tensorflow_environment_variables(run_info):$/;"	f
_collect_tensorflow_info	utils/logs/logger.py	/^def _collect_tensorflow_info(run_info):$/;"	f
_collect_test_environment	utils/logs/logger.py	/^def _collect_test_environment(run_info):$/;"	f
_collective_communication	utils/misc/distribution_utils.py	/^def _collective_communication(all_reduce_alg):$/;"	f
_compute_softmax	bert/squad_lib.py	/^def _compute_softmax(scores):$/;"	f
_construct_and_save_reference_files	utils/testing/reference_data.py	/^  def _construct_and_save_reference_files($/;"	m	class:BaseTest
_construct_eval_epoch	recommendation/data_pipeline.py	/^  def _construct_eval_epoch(self):$/;"	m	class:BaseDataConstructor
_construct_training_epoch	recommendation/data_pipeline.py	/^  def _construct_training_epoch(self):$/;"	m	class:BaseDataConstructor
_continue_search	transformer/model/beam_search.py	/^  def _continue_search(self, state):$/;"	m	class:SequenceBeamSearch
_convert_to_eval_metric	transformer/utils/metrics.py	/^def _convert_to_eval_metric(metric_fn):$/;"	f
_convert_to_json_dict	utils/logs/logger.py	/^def _convert_to_json_dict(input_dict):$/;"	f
_count_and_gen_subtokens	transformer/utils/tokenizer.py	/^def _count_and_gen_subtokens($/;"	f
_count_batches	recommendation/data_pipeline.py	/^  def _count_batches(example_count, batch_size, batches_per_step):$/;"	m	class:BaseDataConstructor
_count_tokens	transformer/utils/tokenizer.py	/^def _count_tokens(files, file_byte_limit=1e6):$/;"	f
_create_callbacks	transformer/v2/transformer_main.py	/^  def _create_callbacks(self, cur_log_dir, init_steps, params):$/;"	m	class:TransformerTask
_create_examples	bert/classifier_data_lib.py	/^  def _create_examples(self, lines, set_type):$/;"	m	class:ColaProcessor
_create_examples	bert/classifier_data_lib.py	/^  def _create_examples(self, lines, set_type):$/;"	m	class:MnliProcessor
_create_examples	bert/classifier_data_lib.py	/^  def _create_examples(self, lines, set_type):$/;"	m	class:MrpcProcessor
_create_initial_state	transformer/model/beam_search.py	/^  def _create_initial_state(self, initial_ids, initial_cache):$/;"	m	class:SequenceBeamSearch
_create_min_max_boundaries	transformer/utils/dataset.py	/^def _create_min_max_boundaries($/;"	f
_create_min_max_boundaries	transformer/v2/data_pipeline.py	/^def _create_min_max_boundaries($/;"	f
_create_optimizer	transformer/v2/transformer_main.py	/^  def _create_optimizer(self):$/;"	m	class:TransformerTask
_create_temp_file	transformer/compute_bleu_test.py	/^  def _create_temp_file(self, text):$/;"	m	class:ComputeBleuTest
_custom_dtype_getter	resnet/resnet_model.py	/^  def _custom_dtype_getter(self, getter, name, shape=None, dtype=DEFAULT_DTYPE,$/;"	m	class:Model
_decay_weights_op	bert/optimization.py	/^  def _decay_weights_op(self, var, learning_rate):$/;"	m	class:AdamWeightDecay
_decode_crop_and_flip	resnet/imagenet_preprocessing.py	/^def _decode_crop_and_flip(image_buffer, bbox, num_channels):$/;"	f
_decode_record	bert/input_pipeline.py	/^  def _decode_record(record, name_to_features):$/;"	f	function:file_based_input_fn_builder
_dense_grad_filter	resnet/resnet_run_loop.py	/^    def _dense_grad_filter(gvs):$/;"	f	function:resnet_model_fn.exclude_batch_norm
_dense_ops	utils/testing/reference_data_test.py	/^  def _dense_ops(self, test=False):$/;"	m	class:GoldenBaseTest
_deserialize	recommendation/data_pipeline.py	/^  def _deserialize(self, serialized_data, batch_size):$/;"	m	class:DatasetManager
_deserialize	wide_deep/movielens_dataset.py	/^def _deserialize(examples_serialized):$/;"	f
_df_to_input_fn	wide_deep/movielens_dataset.py	/^def _df_to_input_fn(df, name, dataset, data_dir, batch_size, repeat, shuffle):$/;"	f
_do_use_weight_decay	bert/optimization.py	/^  def _do_use_weight_decay(self, param_name):$/;"	m	class:AdamWeightDecay
_download_and_clean	datasets/movielens.py	/^def _download_and_clean(dataset, data_dir):$/;"	f
_download_and_clean_file	wide_deep/census_dataset.py	/^def _download_and_clean_file(filename, url):$/;"	f
_download_higgs_data_and_save_npz	boosted_trees/data_download.py	/^def _download_higgs_data_and_save_npz(data_dir):$/;"	f
_embedding	transformer/v2/embedding_layer.py	/^  def _embedding(self, inputs):$/;"	m	class:EmbeddingSharedWeights
_encode_and_add_eos	transformer/translate.py	/^def _encode_and_add_eos(line, subtokenizer):$/;"	f
_encode_and_add_eos	transformer/v2/translate.py	/^def _encode_and_add_eos(line, subtokenizer):$/;"	f
_ensure_dir	transformer/v2/transformer_main.py	/^def _ensure_dir(log_dir):$/;"	f
_escape_token	transformer/utils/tokenizer.py	/^def _escape_token(token, alphabet):$/;"	f
_evaluate_test_case	utils/testing/reference_data.py	/^  def _evaluate_test_case(self, name, graph, ops_to_eval, correctness_function):$/;"	m	class:BaseTest
_expand_to_beam_size	transformer/model/beam_search.py	/^def _expand_to_beam_size(tensor, beam_size):$/;"	f
_expand_to_same_rank	transformer/v2/beam_search.py	/^def _expand_to_same_rank(tensor, target):$/;"	f
_extra_flags	resnet/keras/keras_cifar_test.py	/^  _extra_flags = [$/;"	v	class:KerasCifarTest
_extra_flags	resnet/keras/keras_imagenet_test.py	/^  _extra_flags = [$/;"	v	class:KerasImagenetTest
_extract_benchmark_report_extras	recommendation/ncf_keras_benchmark.py	/^  def _extract_benchmark_report_extras(self, stats):$/;"	m	class:KerasNCFBenchmarkBase
_extract_benchmark_report_extras	recommendation/ncf_keras_benchmark.py	/^  def _extract_benchmark_report_extras(self, stats):$/;"	m	class:KerasNCFRealData
_extract_benchmark_report_extras	recommendation/ncf_keras_benchmark.py	/^  def _extract_benchmark_report_extras(self, stats):$/;"	m	class:KerasNCFSyntheticData
_f_lcs	transformer/utils/metrics.py	/^def _f_lcs(llcs, m, n):$/;"	f
_filter_and_bucket_subtokens	transformer/utils/tokenizer.py	/^def _filter_and_bucket_subtokens(subtoken_counts, min_count):$/;"	f
_filter_index_sort	recommendation/data_preprocessing.py	/^def _filter_index_sort(raw_rating_path, cache_path):$/;"	f
_filter_max_length	transformer/utils/dataset.py	/^def _filter_max_length(example, max_length=256):$/;"	f
_filter_max_length	transformer/v2/data_pipeline.py	/^def _filter_max_length(example, max_length=256):$/;"	f
_flatten_beam_dim	transformer/model/beam_search.py	/^def _flatten_beam_dim(tensor):$/;"	f
_gather_beams	transformer/model/beam_search.py	/^def _gather_beams(nested, beam_indices, batch_size, new_beam_size):$/;"	f
_gather_run_info	utils/logs/logger.py	/^def _gather_run_info(model_name, dataset_name, run_params, test_id):$/;"	f
_gather_topk_beams	transformer/model/beam_search.py	/^def _gather_topk_beams(nested, score_or_log_prob, batch_size, beam_size):$/;"	f
_gen_new_subtoken_list	transformer/utils/tokenizer.py	/^def _gen_new_subtoken_list($/;"	f
_generate_alphabet_dict	transformer/utils/tokenizer.py	/^def _generate_alphabet_dict(iterable, reserved_tokens=None):$/;"	f
_generate_file	transformer/v2/transformer_main_test.py	/^def _generate_file(filepath, lines):$/;"	f
_generate_subtokens	transformer/utils/tokenizer.py	/^def _generate_subtokens($/;"	f
_generate_subtokens_with_target_vocab_size	transformer/utils/tokenizer.py	/^def _generate_subtokens_with_target_vocab_size($/;"	f
_generate_synthetic_data	transformer/utils/dataset.py	/^def _generate_synthetic_data(params):$/;"	f
_generate_synthetic_data	transformer/v2/data_pipeline.py	/^def _generate_synthetic_data(params):$/;"	f
_get_best_indexes	bert/squad_lib.py	/^def _get_best_indexes(logits, n_best_size):$/;"	f
_get_block_sizes	resnet/imagenet_main.py	/^def _get_block_sizes(resnet_size):$/;"	f
_get_classifier_model	bert/run_classifier.py	/^  def _get_classifier_model():$/;"	f	function:run_customized_training
_get_default_image_size	keras_application_models/dataset.py	/^def _get_default_image_size(model):$/;"	f
_get_estimator_spec_with_metrics	recommendation/neumf_model.py	/^def _get_estimator_spec_with_metrics(logits,              # type: tf.Tensor$/;"	f
_get_eval_batch	recommendation/data_pipeline.py	/^  def _get_eval_batch(self, i):$/;"	m	class:BaseDataConstructor
_get_example_length	transformer/utils/dataset.py	/^def _get_example_length(example):$/;"	f
_get_example_length	transformer/v2/data_pipeline.py	/^def _get_example_length(example):$/;"	f
_get_keras_model	recommendation/ncf_keras_main.py	/^def _get_keras_model(params):$/;"	f
_get_learning_rate	resnet/keras/keras_common.py	/^  def _get_learning_rate(self, step):$/;"	m	class:PiecewiseConstantDecayWithWarmup
_get_model_dir	bert/benchmark/bert_benchmark.py	/^  def _get_model_dir(self, folder_name):$/;"	m	class:BertBenchmarkBase
_get_model_dir	resnet/estimator_benchmark.py	/^  def _get_model_dir(self, folder_name):$/;"	m	class:EstimatorBenchmark
_get_model_dir	resnet/keras/keras_benchmark.py	/^  def _get_model_dir(self, folder_name):$/;"	m	class:KerasBenchmark
_get_model_dir	resnet/keras/keras_imagenet_benchmark.py	/^  def _get_model_dir(self, folder_name):$/;"	m	class:Resnet50KerasAccuracy
_get_model_dir	transformer/transformer_estimator_benchmark.py	/^  def _get_model_dir(self, folder_name):$/;"	m	class:EstimatorBenchmark
_get_model_dir	utils/testing/perfzero_benchmark.py	/^  def _get_model_dir(self, folder_name):$/;"	m	class:PerfZeroBenchmark
_get_new_alive_state	transformer/model/beam_search.py	/^  def _get_new_alive_state(self, new_seq, new_log_probs, new_cache):$/;"	m	class:SequenceBeamSearch
_get_new_finished_state	transformer/model/beam_search.py	/^  def _get_new_finished_state(self, state, new_seq, new_log_probs):$/;"	m	class:SequenceBeamSearch
_get_ngrams	transformer/utils/metrics.py	/^def _get_ngrams(n, text):$/;"	f
_get_ngrams_with_counter	transformer/utils/metrics.py	/^def _get_ngrams_with_counter(segment, max_order):$/;"	f
_get_nondefault_flags_as_dict	utils/flags/core.py	/^def _get_nondefault_flags_as_dict():$/;"	f
_get_pretrain_model	bert/run_pretraining.py	/^  def _get_pretrain_model():$/;"	f	function:run_customized_training
_get_shape_keep_last_dim	transformer/model/beam_search.py	/^def _get_shape_keep_last_dim(tensor):$/;"	f
_get_sorted_inputs	transformer/translate.py	/^def _get_sorted_inputs(filename):$/;"	f
_get_sorted_inputs	transformer/v2/translate.py	/^def _get_sorted_inputs(filename):$/;"	f
_get_squad_model	bert/run_squad.py	/^  def _get_squad_model():$/;"	f	function:train_squad
_get_symbols_to_logits_fn	transformer/model/transformer.py	/^  def _get_symbols_to_logits_fn(self, max_decode_length):$/;"	m	class:Transformer
_get_symbols_to_logits_fn	transformer/v2/transformer.py	/^  def _get_symbols_to_logits_fn(self, max_decode_length, training):$/;"	m	class:Transformer
_get_train_and_eval_data	recommendation/ncf_keras_main.py	/^def _get_train_and_eval_data(producer, params):$/;"	f
_get_training_batch	recommendation/data_pipeline.py	/^  def _get_training_batch(self, i):$/;"	m	class:BaseDataConstructor
_grow_alive_seq	transformer/model/beam_search.py	/^  def _grow_alive_seq(self, state):$/;"	m	class:SequenceBeamSearch
_help_wrap	utils/flags/_conventions.py	/^_help_wrap = functools.partial(flags.text_wrap, length=80, indent="",$/;"	v
_improve_answer_span	bert/squad_lib.py	/^def _improve_answer_span(doc_tokens, input_start, input_end, tokenizer,$/;"	f
_index_segment	recommendation/data_pipeline.py	/^  def _index_segment(self, user):$/;"	m	class:BisectionDataConstructor
_init_subtokenizer	transformer/utils/tokenizer_test.py	/^  def _init_subtokenizer(self, vocab_list):$/;"	m	class:SubtokenizerTest
_is_chinese_char	bert/tokenization.py	/^  def _is_chinese_char(self, cp):$/;"	m	class:BasicTokenizer
_is_control	bert/tokenization.py	/^def _is_control(char):$/;"	f
_is_punctuation	bert/tokenization.py	/^def _is_punctuation(char):$/;"	f
_is_whitespace	bert/tokenization.py	/^def _is_whitespace(char):$/;"	f
_join_tokens_to_string	transformer/utils/tokenizer.py	/^def _join_tokens_to_string(tokens):$/;"	f
_lcs	transformer/utils/metrics.py	/^def _lcs(x, y):$/;"	f
_len_lcs	transformer/utils/metrics.py	/^def _len_lcs(x, y):$/;"	f
_length_normalization	transformer/model/beam_search.py	/^def _length_normalization(alpha, length):$/;"	f
_linear	transformer/v2/embedding_layer.py	/^  def _linear(self, inputs):$/;"	m	class:EmbeddingSharedWeights
_list_to_index_dict	transformer/utils/tokenizer.py	/^def _list_to_index_dict(lst):$/;"	f
_load_records	transformer/utils/dataset.py	/^def _load_records(filename):$/;"	f
_load_records	transformer/v2/data_pipeline.py	/^def _load_records(filename):$/;"	f
_load_vocab_file	transformer/utils/tokenizer.py	/^def _load_vocab_file(vocab_file, reserved_tokens=None):$/;"	f
_load_weights_if_possible	transformer/v2/transformer_main.py	/^  def _load_weights_if_possible(self, model, init_weight_path=None):$/;"	m	class:TransformerTask
_log_metric	utils/logs/metric_hook.py	/^  def _log_metric(self, tensor_values):$/;"	m	class:LoggingMetricHook
_log_prob_from_logits	transformer/model/beam_search.py	/^def _log_prob_from_logits(logits):$/;"	f
_logger_lock	utils/logs/logger.py	/^_logger_lock = threading.Lock()$/;"	v
_loss_fn	bert/run_squad.py	/^  def _loss_fn(labels, model_outputs):$/;"	f	function:get_loss_fn
_make_csv_serving_input_receiver_fn	boosted_trees/train_higgs.py	/^def _make_csv_serving_input_receiver_fn(column_names, column_defaults):$/;"	f
_map_fn	datasets/movielens.py	/^  def _map_fn(entry):$/;"	f	function:integerize_genres
_mean_image_subtraction	resnet/imagenet_preprocessing.py	/^def _mean_image_subtraction(image, means, num_channels):$/;"	f
_mirrored_cross_device_ops	utils/misc/distribution_utils.py	/^def _mirrored_cross_device_ops(all_reduce_alg, num_packs):$/;"	f
_model_fn	bert/run_classifier.py	/^  def _model_fn():$/;"	f	function:export_classifier
_model_variable_scope	resnet/resnet_model.py	/^  def _model_variable_scope(self):$/;"	m	class:Model
_monkey_patch_dataset_method	utils/misc/distribution_utils.py	/^def _monkey_patch_dataset_method(strategy):$/;"	f
_monkey_patch_org_create_device_dataset	resnet/keras/keras_common.py	/^def _monkey_patch_org_create_device_dataset():$/;"	f
_native_to_unicode	transformer/utils/tokenizer.py	/^def _native_to_unicode(s):$/;"	f
_no_stop	wide_deep/movielens_main.py	/^  def _no_stop(stop_threshold):$/;"	f	function:define_movie_flags
_num_validation_images	resnet/cifar10_test.py	/^  _num_validation_images = None$/;"	v	class:BaseTest
_num_validation_images	resnet/imagenet_test.py	/^  _num_validation_images = None$/;"	v	class:BaseTest
_pad_tensors_to_same_length	transformer/utils/metrics.py	/^def _pad_tensors_to_same_length(x, y):$/;"	f
_pad_tensors_to_same_length	transformer/v2/metrics.py	/^def _pad_tensors_to_same_length(x, y):$/;"	f
_parse_example	transformer/utils/dataset.py	/^def _parse_example(serialized_example):$/;"	f
_parse_example	transformer/v2/data_pipeline.py	/^def _parse_example(serialized_example):$/;"	f
_parse_example_proto	resnet/imagenet_main.py	/^def _parse_example_proto(example_serialized):$/;"	f
_parse_gpu_model	utils/logs/logger.py	/^def _parse_gpu_model(physical_device_desc):$/;"	f
_path_check	utils/flags/_device.py	/^  def _path_check(flag_values):  # pylint: disable=missing-docstring$/;"	f	function:require_cloud_storage
_prepare_files_and_flags	transformer/v2/transformer_main_test.py	/^  def _prepare_files_and_flags(self, *extra_flags):$/;"	m	class:TransformerTaskTest
_preprocess_image	resnet/resnet_run_loop.py	/^  def _preprocess_image(image_bytes):$/;"	f	function:image_bytes_serving_input_fn
_process_metric_to_json	utils/logs/logger.py	/^def _process_metric_to_json($/;"	f
_progress	resnet/cifar10_download_and_extract.py	/^    def _progress(count, block_size, total_size):$/;"	f	function:main
_projection_dense_layer	bert/modeling.py	/^  def _projection_dense_layer(self, name):$/;"	m	class:Attention
_read_and_batch_from_files	transformer/utils/dataset.py	/^def _read_and_batch_from_files($/;"	f
_read_and_batch_from_files	transformer/v2/data_pipeline.py	/^def _read_and_batch_from_files($/;"	f
_read_tsv	bert/classifier_data_lib.py	/^  def _read_tsv(cls, input_file, quotechar=None):$/;"	m	class:DataProcessor
_regularize_1m_dataset	datasets/movielens.py	/^def _regularize_1m_dataset(temp_dir):$/;"	f
_regularize_20m_dataset	datasets/movielens.py	/^def _regularize_20m_dataset(temp_dir):$/;"	f
_replicated_step	bert/model_training_utils.py	/^        def _replicated_step(inputs):$/;"	f	function:run_customized_training_loop.train_step
_report_benchmark	bert/benchmark/bert_benchmark.py	/^  def _report_benchmark(self, stats, wall_time_sec, min_accuracy, max_accuracy):$/;"	m	class:BertBenchmarkBase
_report_benchmark	resnet/estimator_benchmark.py	/^  def _report_benchmark(self,$/;"	m	class:EstimatorBenchmark
_report_benchmark	resnet/keras/keras_benchmark.py	/^  def _report_benchmark(self,$/;"	m	class:KerasBenchmark
_report_benchmark	transformer/transformer_estimator_benchmark.py	/^  def _report_benchmark(self,$/;"	m	class:EstimatorBenchmark
_resize_image	resnet/imagenet_preprocessing.py	/^def _resize_image(image, height, width):$/;"	f
_resnet_block_ops	resnet/layer_test.py	/^  def _resnet_block_ops(self, test, batch_size, bottleneck, projection,$/;"	m	class:BaseTest
_resource_apply_dense	bert/optimization.py	/^  def _resource_apply_dense(self, grad, var):$/;"	m	class:AdamWeightDecay
_resource_apply_sparse	bert/optimization.py	/^  def _resource_apply_sparse(self, grad, var, indices):$/;"	m	class:AdamWeightDecay
_resource_apply_sparse	transformer/v2/optimizer.py	/^  def _resource_apply_sparse(self, grad, var, indices):$/;"	m	class:LazyAdam
_run	recommendation/data_pipeline.py	/^  def _run(self):$/;"	m	class:BaseDataConstructor
_run_and_report_benchmark	bert/benchmark/bert_benchmark.py	/^  def _run_and_report_benchmark(self,$/;"	m	class:BertClassifyAccuracy
_run_and_report_benchmark	bert/benchmark/bert_benchmark.py	/^  def _run_and_report_benchmark(self,$/;"	m	class:BertClassifyBenchmark
_run_and_report_benchmark	recommendation/ncf_keras_benchmark.py	/^  def _run_and_report_benchmark(self):$/;"	m	class:KerasNCFBenchmarkBase
_run_and_report_benchmark	resnet/estimator_benchmark.py	/^  def _run_and_report_benchmark(self):$/;"	m	class:Resnet50EstimatorAccuracy
_run_and_report_benchmark	resnet/estimator_benchmark.py	/^  def _run_and_report_benchmark(self):$/;"	m	class:Resnet50EstimatorBenchmark
_run_and_report_benchmark	resnet/estimator_benchmark.py	/^  def _run_and_report_benchmark(self):$/;"	m	class:Resnet56EstimatorAccuracy
_run_and_report_benchmark	resnet/keras/keras_cifar_benchmark.py	/^  def _run_and_report_benchmark(self):$/;"	m	class:Resnet56KerasAccuracy
_run_and_report_benchmark	resnet/keras/keras_cifar_benchmark.py	/^  def _run_and_report_benchmark(self):$/;"	m	class:Resnet56KerasBenchmarkBase
_run_and_report_benchmark	resnet/keras/keras_imagenet_benchmark.py	/^  def _run_and_report_benchmark(self):$/;"	m	class:Resnet50KerasAccuracy
_run_and_report_benchmark	resnet/keras/keras_imagenet_benchmark.py	/^  def _run_and_report_benchmark(self):$/;"	m	class:Resnet50KerasBenchmarkBase
_run_and_report_benchmark	resnet/keras/keras_imagenet_benchmark.py	/^  def _run_and_report_benchmark(self):$/;"	m	class:TrivialKerasBenchmarkReal
_run_and_report_benchmark	transformer/transformer_estimator_benchmark.py	/^  def _run_and_report_benchmark(self):$/;"	m	class:TransformerEstimatorBenchmark
_run_and_report_benchmark	transformer/transformer_estimator_benchmark.py	/^  def _run_and_report_benchmark(self, bleu_min=27.3, bleu_max=28):$/;"	m	class:TransformerBaseEstimatorAccuracy
_run_and_report_benchmark	transformer/transformer_estimator_benchmark.py	/^  def _run_and_report_benchmark(self, bleu_min=28.3, bleu_max=29):$/;"	m	class:TransformerBigEstimatorAccuracy
_run_and_report_benchmark	transformer/v2/transformer_benchmark.py	/^  def _run_and_report_benchmark(self,$/;"	m	class:TransformerBenchmark
_run_bert_classifier	bert/benchmark/bert_benchmark.py	/^  def _run_bert_classifier(self, callbacks=None):$/;"	m	class:BertBenchmarkBase
_run_callbacks_on_batch_end	bert/model_training_utils.py	/^      def _run_callbacks_on_batch_end(batch):$/;"	f	function:run_customized_training_loop
_run_callbacks_on_batch_start	bert/model_training_utils.py	/^      def _run_callbacks_on_batch_start(batch):$/;"	f	function:run_customized_training_loop
_run_evaluation	bert/model_training_utils.py	/^      def _run_evaluation(current_training_step, test_iterator):$/;"	f	function:run_customized_training_loop
_run_split_on_punc	bert/tokenization.py	/^  def _run_split_on_punc(self, text):$/;"	m	class:BasicTokenizer
_run_strip_accents	bert/tokenization.py	/^  def _run_strip_accents(self, text):$/;"	m	class:BasicTokenizer
_save_checkpoint	bert/model_training_utils.py	/^def _save_checkpoint(checkpoint, model_dir, checkpoint_prefix):$/;"	f
_save_or_test_ops	utils/testing/reference_data.py	/^  def _save_or_test_ops(self, name, graph, ops_to_eval=None, test=True,$/;"	m	class:BaseTest
_save_vocab_file	transformer/utils/tokenizer.py	/^def _save_vocab_file(vocab_file, subtoken_list):$/;"	f
_search_step	transformer/model/beam_search.py	/^  def _search_step(self, state):$/;"	m	class:SequenceBeamSearch
_select_data_from_record	bert/input_pipeline.py	/^  def _select_data_from_record(record):$/;"	f	function:create_classifier_dataset
_select_data_from_record	bert/input_pipeline.py	/^  def _select_data_from_record(record):$/;"	f	function:create_pretrain_dataset
_select_data_from_record	bert/input_pipeline.py	/^  def _select_data_from_record(record):$/;"	f	function:create_squad_dataset
_serialize	recommendation/data_pipeline.py	/^  def _serialize(data):$/;"	m	class:DatasetManager
_serialize_deserialize	utils/data/file_io_test.py	/^  def _serialize_deserialize(self, num_cores=1, num_rows=20):$/;"	m	class:BaseTest
_serialize_shards	utils/data/file_io.py	/^def _serialize_shards(df_shards, columns, pool, writer):$/;"	f
_setup	bert/benchmark/bert_benchmark.py	/^  def _setup(self):$/;"	m	class:BertBenchmarkBase
_setup	recommendation/ncf_keras_benchmark.py	/^  def _setup(self):$/;"	m	class:KerasNCFBenchmarkBase
_setup	resnet/estimator_benchmark.py	/^  def _setup(self):$/;"	m	class:EstimatorBenchmark
_setup	resnet/keras/keras_benchmark.py	/^  def _setup(self):$/;"	m	class:KerasBenchmark
_setup	transformer/transformer_estimator_benchmark.py	/^  def _setup(self):$/;"	m	class:EstimatorBenchmark
_setup	utils/testing/perfzero_benchmark.py	/^  def _setup(self):$/;"	m	class:PerfZeroBenchmark
_shape_list	transformer/model/beam_search.py	/^def _shape_list(tensor):$/;"	f
_shard_dict_to_examples	utils/data/file_io.py	/^def _shard_dict_to_examples(shard_dict):$/;"	f
_smallest_size_at_least	resnet/imagenet_preprocessing.py	/^def _smallest_size_at_least(height, width, resize_min):$/;"	f
_sparse_to_dense_grads	recommendation/neumf_model.py	/^def _sparse_to_dense_grads(grads_and_vars):$/;"	f
_split_string_to_tokens	transformer/utils/tokenizer.py	/^def _split_string_to_tokens(text):$/;"	f
_split_token_to_subtokens	transformer/utils/tokenizer.py	/^def _split_token_to_subtokens(token, subtoken_dict, max_subtoken_length):$/;"	f
_start_shuffle_iterator	recommendation/data_pipeline.py	/^  def _start_shuffle_iterator(self):$/;"	m	class:BaseDataConstructor
_strip_first_and_last_dimension	recommendation/neumf_model.py	/^def _strip_first_and_last_dimension(x, batch_size):$/;"	f
_strip_spaces	bert/squad_lib.py	/^  def _strip_spaces(text):$/;"	f	function:get_final_text
_subtoken_ids_to_tokens	transformer/utils/tokenizer.py	/^  def _subtoken_ids_to_tokens(self, subtokens):$/;"	m	class:Subtokenizer
_tempdir	resnet/keras/keras_cifar_test.py	/^  _tempdir = None$/;"	v	class:KerasCifarTest
_tempdir	resnet/keras/keras_imagenet_test.py	/^  _tempdir = None$/;"	v	class:KerasImagenetTest
_tensor_shapes_helper	resnet/imagenet_test.py	/^  def _tensor_shapes_helper(self, resnet_size, resnet_version, dtype, with_gpu):$/;"	m	class:BaseTest
_test_cifar10model_shape	resnet/cifar10_test.py	/^  def _test_cifar10model_shape(self, resnet_version):$/;"	m	class:BaseTest
_test_embedding	utils/accelerator/tpu_test.py	/^  def _test_embedding(self, embedding_dim, vocab_size,$/;"	m	class:TPUBaseTester
_test_end_to_end	recommendation/data_test.py	/^  def _test_end_to_end(self, constructor_type):$/;"	m	class:BaseTest
_test_fresh_randomness	recommendation/data_test.py	/^  def _test_fresh_randomness(self, constructor_type):$/;"	m	class:BaseTest
_test_imagenetmodel_shape	resnet/imagenet_test.py	/^  def _test_imagenetmodel_shape(self, resnet_version):$/;"	m	class:BaseTest
_test_masking	utils/accelerator/tpu_test.py	/^  def _test_masking(self, embedding_dim, vocab_size,$/;"	m	class:TPUBaseTester
_test_sharding	utils/data/file_io_test.py	/^  def _test_sharding(self, row_count, cpu_count, expected):$/;"	m	class:BaseTest
_test_step_fn	bert/model_training_utils.py	/^        def _test_step_fn(inputs):$/;"	f	function:run_customized_training_loop.test_step
_token_to_subtoken_ids	transformer/utils/tokenizer.py	/^  def _token_to_subtoken_ids(self, token):$/;"	m	class:Subtokenizer
_tokenize_chinese_chars	bert/tokenization.py	/^  def _tokenize_chinese_chars(self, text):$/;"	m	class:BasicTokenizer
_transform_csv	datasets/movielens.py	/^def _transform_csv(input_path, output_path, names, skip_first, separator=","):$/;"	f
_trim_and_decode	transformer/translate.py	/^def _trim_and_decode(ids, subtokenizer):$/;"	f
_trim_and_decode	transformer/v2/translate.py	/^def _trim_and_decode(ids, subtokenizer):$/;"	f
_truncate_seq_pair	bert/classifier_data_lib.py	/^def _truncate_seq_pair(tokens_a, tokens_b, max_length):$/;"	f
_undo_monkey_patch_dataset_method	utils/misc/distribution_utils.py	/^def _undo_monkey_patch_dataset_method(strategy):$/;"	f
_unescape_token	transformer/utils/tokenizer.py	/^def _unescape_token(token):$/;"	f
_unflatten_beam_dim	transformer/model/beam_search.py	/^def _unflatten_beam_dim(tensor, batch_size, beam_size):$/;"	f
_unicode_to_native	transformer/utils/tokenizer.py	/^def _unicode_to_native(s):$/;"	f
_uniform_random_ops	utils/testing/reference_data_test.py	/^  def _uniform_random_ops(self, test=False, wrong_name=False, wrong_shape=False,$/;"	m	class:GoldenBaseTest
_upload_json	benchmark/benchmark_uploader.py	/^  def _upload_json(self, dataset_name, table_name, json_list):$/;"	m	class:BigQueryUploader
_validate_file	transformer/transformer_main.py	/^def _validate_file(filepath):$/;"	f
_validate_log_every_n_secs	utils/logs/hooks_test.py	/^  def _validate_log_every_n_secs(self, every_n_secs):$/;"	m	class:ExamplesPerSecondHookTest
_validate_log_every_n_steps	utils/logs/hooks_test.py	/^  def _validate_log_every_n_steps(self, every_n_steps, warm_steps):$/;"	m	class:ExamplesPerSecondHookTest
_validate_print_every_n_secs	utils/logs/metric_hook_test.py	/^  def _validate_print_every_n_secs(self, sess, at_end):$/;"	m	class:LoggingMetricHookTest
_validate_print_every_n_steps	utils/logs/metric_hook_test.py	/^  def _validate_print_every_n_steps(self, sess, at_end):$/;"	m	class:LoggingMetricHookTest
_wait_to_construct_train_epoch	recommendation/data_pipeline.py	/^  def _wait_to_construct_train_epoch(self):$/;"	m	class:BaseDataConstructor
after_run	utils/logs/hooks.py	/^  def after_run(self, run_context, run_values):  # pylint: disable=unused-argument$/;"	m	class:ExamplesPerSecondHook
after_run	utils/logs/metric_hook.py	/^  def after_run(self, unused_run_context, run_values):$/;"	m	class:LoggingMetricHook
all_exist	transformer/data_download.py	/^def all_exist(filepaths):$/;"	f
allow_ffn_pad	transformer/model/model_params.py	/^    allow_ffn_pad=True,$/;"	v
alpha	transformer/model/model_params.py	/^    alpha=0.6,  # used to calculate length normalization in beam search$/;"	v
apply_clean	utils/misc/model_helpers.py	/^def apply_clean(flags_obj):$/;"	f
apply_gradients	bert/optimization.py	/^  def apply_gradients(self, grads_and_vars, name=None):$/;"	m	class:AdamWeightDecay
assert_rank	bert/modeling.py	/^def assert_rank(tensor, expected_rank, name=None):$/;"	f
attention_dropout	transformer/model/model_params.py	/^    attention_dropout=0.1,$/;"	v
batch_norm	resnet/resnet_model.py	/^def batch_norm(inputs, training, data_format):$/;"	f
batching_fn	transformer/utils/dataset.py	/^  def batching_fn(bucket_id, grouped_dataset):$/;"	f	function:_batch_examples
batching_fn	transformer/v2/data_pipeline.py	/^  def batching_fn(bucket_id, grouped_dataset):$/;"	f	function:_batch_examples
beam_size	transformer/model/model_params.py	/^    beam_size=4,$/;"	v
before_run	utils/logs/hooks.py	/^  def before_run(self, run_context):  # pylint: disable=unused-argument$/;"	m	class:ExamplesPerSecondHook
begin	utils/logs/hooks.py	/^  def begin(self):$/;"	m	class:ExamplesPerSecondHook
begin	utils/logs/metric_hook.py	/^  def begin(self):$/;"	m	class:LoggingMetricHook
benchmark_1_gpu	recommendation/ncf_keras_benchmark.py	/^  def benchmark_1_gpu(self):$/;"	m	class:KerasNCFRealData
benchmark_1_gpu	recommendation/ncf_keras_benchmark.py	/^  def benchmark_1_gpu(self):$/;"	m	class:KerasNCFSyntheticData
benchmark_1_gpu	resnet/keras/keras_cifar_benchmark.py	/^  def benchmark_1_gpu(self):$/;"	m	class:Resnet56KerasAccuracy
benchmark_1_gpu	resnet/keras/keras_cifar_benchmark.py	/^  def benchmark_1_gpu(self):$/;"	m	class:Resnet56KerasBenchmarkBase
benchmark_1_gpu	resnet/keras/keras_imagenet_benchmark.py	/^  def benchmark_1_gpu(self):$/;"	m	class:Resnet50KerasBenchmarkBase
benchmark_1_gpu	resnet/keras/keras_imagenet_benchmark.py	/^  def benchmark_1_gpu(self):$/;"	m	class:TrivialKerasBenchmarkReal
benchmark_1_gpu	transformer/v2/transformer_benchmark.py	/^  def benchmark_1_gpu(self):$/;"	m	class:TransformerBaseKerasAccuracy
benchmark_1_gpu	transformer/v2/transformer_benchmark.py	/^  def benchmark_1_gpu(self):$/;"	m	class:TransformerKerasBenchmark
benchmark_1_gpu_ctl	recommendation/ncf_keras_benchmark.py	/^  def benchmark_1_gpu_ctl(self):$/;"	m	class:KerasNCFRealData
benchmark_1_gpu_ctl_early_stop	recommendation/ncf_keras_benchmark.py	/^  def benchmark_1_gpu_ctl_early_stop(self):$/;"	m	class:KerasNCFRealData
benchmark_1_gpu_early_stop	recommendation/ncf_keras_benchmark.py	/^  def benchmark_1_gpu_early_stop(self):$/;"	m	class:KerasNCFRealData
benchmark_1_gpu_fp16	resnet/keras/keras_imagenet_benchmark.py	/^  def benchmark_1_gpu_fp16(self):$/;"	m	class:Resnet50KerasBenchmarkBase
benchmark_1_gpu_fp16_dynamic	resnet/keras/keras_imagenet_benchmark.py	/^  def benchmark_1_gpu_fp16_dynamic(self):$/;"	m	class:Resnet50KerasBenchmarkBase
benchmark_1_gpu_mrpc	bert/benchmark/bert_benchmark.py	/^  def benchmark_1_gpu_mrpc(self):$/;"	m	class:BertClassifyBenchmark
benchmark_1_gpu_no_dist_strat	resnet/keras/keras_cifar_benchmark.py	/^  def benchmark_1_gpu_no_dist_strat(self):$/;"	m	class:Resnet56KerasBenchmarkBase
benchmark_1_gpu_no_dist_strat	resnet/keras/keras_imagenet_benchmark.py	/^  def benchmark_1_gpu_no_dist_strat(self):$/;"	m	class:Resnet50KerasBenchmarkBase
benchmark_1_gpu_no_dist_strat_run_eagerly	resnet/keras/keras_imagenet_benchmark.py	/^  def benchmark_1_gpu_no_dist_strat_run_eagerly(self):$/;"	m	class:Resnet50KerasBenchmarkBase
benchmark_1_gpu_static_batch	transformer/v2/transformer_benchmark.py	/^  def benchmark_1_gpu_static_batch(self):$/;"	m	class:TransformerBaseKerasAccuracy
benchmark_1_gpu_static_batch	transformer/v2/transformer_benchmark.py	/^  def benchmark_1_gpu_static_batch(self):$/;"	m	class:TransformerKerasBenchmark
benchmark_2_gpu	resnet/keras/keras_cifar_benchmark.py	/^  def benchmark_2_gpu(self):$/;"	m	class:Resnet56KerasAccuracy
benchmark_2_gpu	resnet/keras/keras_cifar_benchmark.py	/^  def benchmark_2_gpu(self):$/;"	m	class:Resnet56KerasBenchmarkBase
benchmark_2_gpu_mprc	bert/benchmark/bert_benchmark.py	/^  def benchmark_2_gpu_mprc(self):$/;"	m	class:BertClassifyBenchmark
benchmark_2_gpus	recommendation/ncf_keras_benchmark.py	/^  def benchmark_2_gpus(self):$/;"	m	class:KerasNCFRealData
benchmark_2_gpus	recommendation/ncf_keras_benchmark.py	/^  def benchmark_2_gpus(self):$/;"	m	class:KerasNCFSyntheticData
benchmark_2_gpus_ctl	recommendation/ncf_keras_benchmark.py	/^  def benchmark_2_gpus_ctl(self):$/;"	m	class:KerasNCFRealData
benchmark_2_gpus_ctl_early_stop	recommendation/ncf_keras_benchmark.py	/^  def benchmark_2_gpus_ctl_early_stop(self):$/;"	m	class:KerasNCFRealData
benchmark_2_gpus_early_stop	recommendation/ncf_keras_benchmark.py	/^  def benchmark_2_gpus_early_stop(self):$/;"	m	class:KerasNCFRealData
benchmark_4_gpu_mrpc	bert/benchmark/bert_benchmark.py	/^  def benchmark_4_gpu_mrpc(self):$/;"	m	class:BertClassifyBenchmark
benchmark_8_gpu	resnet/keras/keras_imagenet_benchmark.py	/^  def benchmark_8_gpu(self):$/;"	m	class:Resnet50KerasAccuracy
benchmark_8_gpu	resnet/keras/keras_imagenet_benchmark.py	/^  def benchmark_8_gpu(self):$/;"	m	class:Resnet50KerasBenchmarkBase
benchmark_8_gpu	resnet/keras/keras_imagenet_benchmark.py	/^  def benchmark_8_gpu(self):$/;"	m	class:TrivialKerasBenchmarkReal
benchmark_8_gpu	transformer/v2/transformer_benchmark.py	/^  def benchmark_8_gpu(self):$/;"	m	class:TransformerBaseKerasAccuracy
benchmark_8_gpu	transformer/v2/transformer_benchmark.py	/^  def benchmark_8_gpu(self):$/;"	m	class:TransformerBigKerasAccuracy
benchmark_8_gpu	transformer/v2/transformer_benchmark.py	/^  def benchmark_8_gpu(self):$/;"	m	class:TransformerKerasBenchmark
benchmark_8_gpu_cloning	resnet/keras/keras_imagenet_benchmark.py	/^  def benchmark_8_gpu_cloning(self):$/;"	m	class:Resnet50KerasBenchmarkBase
benchmark_8_gpu_fp16	resnet/keras/keras_imagenet_benchmark.py	/^  def benchmark_8_gpu_fp16(self):$/;"	m	class:Resnet50KerasAccuracy
benchmark_8_gpu_fp16	resnet/keras/keras_imagenet_benchmark.py	/^  def benchmark_8_gpu_fp16(self):$/;"	m	class:Resnet50KerasBenchmarkBase
benchmark_8_gpu_fp16_cloning	resnet/keras/keras_imagenet_benchmark.py	/^  def benchmark_8_gpu_fp16_cloning(self):$/;"	m	class:Resnet50KerasBenchmarkBase
benchmark_8_gpu_fp16_cloning_tweaked	resnet/keras/keras_imagenet_benchmark.py	/^  def benchmark_8_gpu_fp16_cloning_tweaked(self):$/;"	m	class:Resnet50KerasBenchmarkBase
benchmark_8_gpu_fp16_dynamic_tweaked	resnet/keras/keras_imagenet_benchmark.py	/^  def benchmark_8_gpu_fp16_dynamic_tweaked(self):$/;"	m	class:Resnet50KerasBenchmarkBase
benchmark_8_gpu_fp16_tweaked	resnet/keras/keras_imagenet_benchmark.py	/^  def benchmark_8_gpu_fp16_tweaked(self):$/;"	m	class:Resnet50KerasBenchmarkBase
benchmark_8_gpu_mlperf_like	resnet/keras/keras_imagenet_benchmark.py	/^  def benchmark_8_gpu_mlperf_like(self):$/;"	m	class:Resnet50KerasAccuracy
benchmark_8_gpu_mlperf_like_tweaked	resnet/keras/keras_imagenet_benchmark.py	/^  def benchmark_8_gpu_mlperf_like_tweaked(self):$/;"	m	class:Resnet50KerasAccuracy
benchmark_8_gpu_mrpc	bert/benchmark/bert_benchmark.py	/^  def benchmark_8_gpu_mrpc(self):$/;"	m	class:BertClassifyAccuracy
benchmark_8_gpu_mrpc	bert/benchmark/bert_benchmark.py	/^  def benchmark_8_gpu_mrpc(self):$/;"	m	class:BertClassifyBenchmark
benchmark_8_gpu_slack	resnet/keras/keras_imagenet_benchmark.py	/^  def benchmark_8_gpu_slack(self):$/;"	m	class:Resnet50KerasBenchmarkBase
benchmark_8_gpu_slack	resnet/keras/keras_imagenet_benchmark.py	/^  def benchmark_8_gpu_slack(self):$/;"	m	class:TrivialKerasBenchmarkReal
benchmark_8_gpu_static_batch	transformer/v2/transformer_benchmark.py	/^  def benchmark_8_gpu_static_batch(self):$/;"	m	class:TransformerBaseKerasAccuracy
benchmark_8_gpu_static_batch	transformer/v2/transformer_benchmark.py	/^  def benchmark_8_gpu_static_batch(self):$/;"	m	class:TransformerBigKerasAccuracy
benchmark_8_gpu_static_batch	transformer/v2/transformer_benchmark.py	/^  def benchmark_8_gpu_static_batch(self):$/;"	m	class:TransformerKerasBenchmark
benchmark_8_gpu_tweaked	resnet/keras/keras_imagenet_benchmark.py	/^  def benchmark_8_gpu_tweaked(self):$/;"	m	class:Resnet50KerasBenchmarkBase
benchmark_8_gpu_tweaked	resnet/keras/keras_imagenet_benchmark.py	/^  def benchmark_8_gpu_tweaked(self):$/;"	m	class:TrivialKerasBenchmarkReal
benchmark_8_gpu_warmup	resnet/keras/keras_imagenet_benchmark.py	/^  def benchmark_8_gpu_warmup(self):$/;"	m	class:TrivialKerasBenchmarkReal
benchmark_context	utils/logs/logger.py	/^def benchmark_context(flag_obj):$/;"	f
benchmark_graph_1_gpu	resnet/estimator_benchmark.py	/^  def benchmark_graph_1_gpu(self):$/;"	m	class:Resnet50EstimatorBenchmark
benchmark_graph_1_gpu	resnet/estimator_benchmark.py	/^  def benchmark_graph_1_gpu(self):$/;"	m	class:Resnet56EstimatorAccuracy
benchmark_graph_1_gpu	resnet/keras/keras_cifar_benchmark.py	/^  def benchmark_graph_1_gpu(self):$/;"	m	class:Resnet56KerasAccuracy
benchmark_graph_1_gpu	resnet/keras/keras_cifar_benchmark.py	/^  def benchmark_graph_1_gpu(self):$/;"	m	class:Resnet56KerasBenchmarkBase
benchmark_graph_1_gpu	resnet/keras/keras_imagenet_benchmark.py	/^  def benchmark_graph_1_gpu(self):$/;"	m	class:Resnet50KerasBenchmarkBase
benchmark_graph_1_gpu	resnet/keras/keras_imagenet_benchmark.py	/^  def benchmark_graph_1_gpu(self):$/;"	m	class:TrivialKerasBenchmarkReal
benchmark_graph_1_gpu	transformer/transformer_estimator_benchmark.py	/^  def benchmark_graph_1_gpu(self):$/;"	m	class:TransformerEstimatorBenchmark
benchmark_graph_1_gpu_fp16	resnet/keras/keras_imagenet_benchmark.py	/^  def benchmark_graph_1_gpu_fp16(self):$/;"	m	class:Resnet50KerasBenchmarkBase
benchmark_graph_1_gpu_no_dist_strat	resnet/keras/keras_cifar_benchmark.py	/^  def benchmark_graph_1_gpu_no_dist_strat(self):$/;"	m	class:Resnet56KerasAccuracy
benchmark_graph_1_gpu_no_dist_strat	resnet/keras/keras_cifar_benchmark.py	/^  def benchmark_graph_1_gpu_no_dist_strat(self):$/;"	m	class:Resnet56KerasBenchmarkBase
benchmark_graph_1_gpu_no_dist_strat	resnet/keras/keras_imagenet_benchmark.py	/^  def benchmark_graph_1_gpu_no_dist_strat(self):$/;"	m	class:Resnet50KerasBenchmarkBase
benchmark_graph_2_gpu	resnet/estimator_benchmark.py	/^  def benchmark_graph_2_gpu(self):$/;"	m	class:Resnet56EstimatorAccuracy
benchmark_graph_2_gpu	resnet/keras/keras_cifar_benchmark.py	/^  def benchmark_graph_2_gpu(self):$/;"	m	class:Resnet56KerasAccuracy
benchmark_graph_2_gpu	resnet/keras/keras_cifar_benchmark.py	/^  def benchmark_graph_2_gpu(self):$/;"	m	class:Resnet56KerasBenchmarkBase
benchmark_graph_2_gpu	transformer/transformer_estimator_benchmark.py	/^  def benchmark_graph_2_gpu(self):$/;"	m	class:TransformerBaseEstimatorAccuracy
benchmark_graph_2_gpu	transformer/transformer_estimator_benchmark.py	/^  def benchmark_graph_2_gpu(self):$/;"	m	class:TransformerEstimatorBenchmark
benchmark_graph_4_gpu	transformer/transformer_estimator_benchmark.py	/^  def benchmark_graph_4_gpu(self):$/;"	m	class:TransformerEstimatorBenchmark
benchmark_graph_8_gpu	resnet/estimator_benchmark.py	/^  def benchmark_graph_8_gpu(self):$/;"	m	class:Resnet50EstimatorAccuracy
benchmark_graph_8_gpu	resnet/estimator_benchmark.py	/^  def benchmark_graph_8_gpu(self):$/;"	m	class:Resnet50EstimatorBenchmark
benchmark_graph_8_gpu	resnet/keras/keras_imagenet_benchmark.py	/^  def benchmark_graph_8_gpu(self):$/;"	m	class:Resnet50KerasAccuracy
benchmark_graph_8_gpu	resnet/keras/keras_imagenet_benchmark.py	/^  def benchmark_graph_8_gpu(self):$/;"	m	class:Resnet50KerasBenchmarkBase
benchmark_graph_8_gpu	resnet/keras/keras_imagenet_benchmark.py	/^  def benchmark_graph_8_gpu(self):$/;"	m	class:TrivialKerasBenchmarkReal
benchmark_graph_8_gpu	transformer/transformer_estimator_benchmark.py	/^  def benchmark_graph_8_gpu(self):$/;"	m	class:TransformerBaseEstimatorAccuracy
benchmark_graph_8_gpu	transformer/transformer_estimator_benchmark.py	/^  def benchmark_graph_8_gpu(self):$/;"	m	class:TransformerBigEstimatorAccuracy
benchmark_graph_8_gpu	transformer/transformer_estimator_benchmark.py	/^  def benchmark_graph_8_gpu(self):$/;"	m	class:TransformerEstimatorBenchmark
benchmark_graph_8_gpu_fp16	resnet/keras/keras_imagenet_benchmark.py	/^  def benchmark_graph_8_gpu_fp16(self):$/;"	m	class:Resnet50KerasBenchmarkBase
benchmark_graph_8_gpu_fp16_dynamic_tweaked	resnet/keras/keras_imagenet_benchmark.py	/^  def benchmark_graph_8_gpu_fp16_dynamic_tweaked(self):$/;"	m	class:Resnet50KerasBenchmarkBase
benchmark_graph_8_gpu_fp16_tweaked	resnet/keras/keras_imagenet_benchmark.py	/^  def benchmark_graph_8_gpu_fp16_tweaked(self):$/;"	m	class:Resnet50KerasBenchmarkBase
benchmark_graph_8_gpu_static_batch	transformer/transformer_estimator_benchmark.py	/^  def benchmark_graph_8_gpu_static_batch(self):$/;"	m	class:TransformerBaseEstimatorAccuracy
benchmark_graph_8_gpu_static_batch	transformer/transformer_estimator_benchmark.py	/^  def benchmark_graph_8_gpu_static_batch(self):$/;"	m	class:TransformerBigEstimatorAccuracy
benchmark_graph_8_gpu_tweaked	resnet/keras/keras_imagenet_benchmark.py	/^  def benchmark_graph_8_gpu_tweaked(self):$/;"	m	class:TrivialKerasBenchmarkReal
benchmark_graph_fp16_1_gpu	resnet/estimator_benchmark.py	/^  def benchmark_graph_fp16_1_gpu(self):$/;"	m	class:Resnet50EstimatorBenchmark
benchmark_graph_fp16_1_gpu	resnet/estimator_benchmark.py	/^  def benchmark_graph_fp16_1_gpu(self):$/;"	m	class:Resnet56EstimatorAccuracy
benchmark_graph_fp16_1_gpu	transformer/transformer_estimator_benchmark.py	/^  def benchmark_graph_fp16_1_gpu(self):$/;"	m	class:TransformerEstimatorBenchmark
benchmark_graph_fp16_1_gpu_tweaked	resnet/estimator_benchmark.py	/^  def benchmark_graph_fp16_1_gpu_tweaked(self):$/;"	m	class:Resnet50EstimatorBenchmark
benchmark_graph_fp16_2_gpu	resnet/estimator_benchmark.py	/^  def benchmark_graph_fp16_2_gpu(self):$/;"	m	class:Resnet56EstimatorAccuracy
benchmark_graph_fp16_2_gpu	transformer/transformer_estimator_benchmark.py	/^  def benchmark_graph_fp16_2_gpu(self):$/;"	m	class:TransformerEstimatorBenchmark
benchmark_graph_fp16_4_gpu	transformer/transformer_estimator_benchmark.py	/^  def benchmark_graph_fp16_4_gpu(self):$/;"	m	class:TransformerEstimatorBenchmark
benchmark_graph_fp16_8_gpu	resnet/estimator_benchmark.py	/^  def benchmark_graph_fp16_8_gpu(self):$/;"	m	class:Resnet50EstimatorAccuracy
benchmark_graph_fp16_8_gpu	resnet/estimator_benchmark.py	/^  def benchmark_graph_fp16_8_gpu(self):$/;"	m	class:Resnet50EstimatorBenchmark
benchmark_graph_fp16_8_gpu	transformer/transformer_estimator_benchmark.py	/^  def benchmark_graph_fp16_8_gpu(self):$/;"	m	class:TransformerBaseEstimatorAccuracy
benchmark_graph_fp16_8_gpu	transformer/transformer_estimator_benchmark.py	/^  def benchmark_graph_fp16_8_gpu(self):$/;"	m	class:TransformerEstimatorBenchmark
benchmark_graph_fp16_8_gpu_tweaked	resnet/estimator_benchmark.py	/^  def benchmark_graph_fp16_8_gpu_tweaked(self):$/;"	m	class:Resnet50EstimatorBenchmark
benchmark_graph_fp16_graph_rewrite_1_gpu_tweaked	resnet/estimator_benchmark.py	/^  def benchmark_graph_fp16_graph_rewrite_1_gpu_tweaked(self):$/;"	m	class:Resnet50EstimatorBenchmark
benchmark_graph_fp16_graph_rewrite_8_gpu	resnet/estimator_benchmark.py	/^  def benchmark_graph_fp16_graph_rewrite_8_gpu(self):$/;"	m	class:Resnet50EstimatorAccuracy
benchmark_graph_fp16_graph_rewrite_8_gpu_tweaked	resnet/estimator_benchmark.py	/^  def benchmark_graph_fp16_graph_rewrite_8_gpu_tweaked(self):$/;"	m	class:Resnet50EstimatorBenchmark
benchmark_graph_xla_1_gpu	resnet/keras/keras_imagenet_benchmark.py	/^  def benchmark_graph_xla_1_gpu(self):$/;"	m	class:Resnet50KerasBenchmarkBase
benchmark_graph_xla_1_gpu_fp16	resnet/keras/keras_imagenet_benchmark.py	/^  def benchmark_graph_xla_1_gpu_fp16(self):$/;"	m	class:Resnet50KerasBenchmarkBase
benchmark_graph_xla_1_gpu_fp16_slack	resnet/keras/keras_imagenet_benchmark.py	/^  def benchmark_graph_xla_1_gpu_fp16_slack(self):$/;"	m	class:Resnet50KerasBenchmarkBase
benchmark_graph_xla_1_gpu_fp16_tweaked	resnet/keras/keras_imagenet_benchmark.py	/^  def benchmark_graph_xla_1_gpu_fp16_tweaked(self):$/;"	m	class:Resnet50KerasBenchmarkBase
benchmark_graph_xla_8_gpu	resnet/keras/keras_imagenet_benchmark.py	/^  def benchmark_graph_xla_8_gpu(self):$/;"	m	class:Resnet50KerasBenchmarkBase
benchmark_graph_xla_8_gpu_fp16	resnet/keras/keras_imagenet_benchmark.py	/^  def benchmark_graph_xla_8_gpu_fp16(self):$/;"	m	class:Resnet50KerasBenchmarkBase
benchmark_graph_xla_8_gpu_fp16_dynamic_tweaked	resnet/keras/keras_imagenet_benchmark.py	/^  def benchmark_graph_xla_8_gpu_fp16_dynamic_tweaked(self):$/;"	m	class:Resnet50KerasBenchmarkBase
benchmark_graph_xla_8_gpu_fp16_slack	resnet/keras/keras_imagenet_benchmark.py	/^  def benchmark_graph_xla_8_gpu_fp16_slack(self):$/;"	m	class:Resnet50KerasBenchmarkBase
benchmark_graph_xla_8_gpu_fp16_tweaked	resnet/keras/keras_imagenet_benchmark.py	/^  def benchmark_graph_xla_8_gpu_fp16_tweaked(self):$/;"	m	class:Resnet50KerasBenchmarkBase
benchmark_graph_xla_8_gpu_fp16_tweaked_delay_measure	resnet/keras/keras_imagenet_benchmark.py	/^  def benchmark_graph_xla_8_gpu_fp16_tweaked_delay_measure(self):$/;"	m	class:Resnet50KerasBenchmarkBase
benchmark_graph_xla_8_gpu_fp16_tweaked_optional_next	resnet/keras/keras_imagenet_benchmark.py	/^  def benchmark_graph_xla_8_gpu_fp16_tweaked_optional_next(self):$/;"	m	class:Resnet50KerasBenchmarkBase
benchmark_train_step_time	mnist/mnist_test.py	/^  def benchmark_train_step_time(self):$/;"	m	class:Benchmarks
benchmark_uploader	benchmark/benchmark_uploader_test.py	/^  benchmark_uploader = None$/;"	v
benchmark_xla_1_gpu	resnet/keras/keras_imagenet_benchmark.py	/^  def benchmark_xla_1_gpu(self):$/;"	m	class:Resnet50KerasBenchmarkBase
benchmark_xla_1_gpu_fp16	resnet/keras/keras_imagenet_benchmark.py	/^  def benchmark_xla_1_gpu_fp16(self):$/;"	m	class:Resnet50KerasBenchmarkBase
benchmark_xla_1_gpu_fp16_dynamic	resnet/keras/keras_imagenet_benchmark.py	/^  def benchmark_xla_1_gpu_fp16_dynamic(self):$/;"	m	class:Resnet50KerasBenchmarkBase
benchmark_xla_1_gpu_fp16_slack	resnet/keras/keras_imagenet_benchmark.py	/^  def benchmark_xla_1_gpu_fp16_slack(self):$/;"	m	class:Resnet50KerasBenchmarkBase
benchmark_xla_1_gpu_fp16_tweaked	resnet/keras/keras_imagenet_benchmark.py	/^  def benchmark_xla_1_gpu_fp16_tweaked(self):$/;"	m	class:Resnet50KerasBenchmarkBase
benchmark_xla_8_gpu	resnet/keras/keras_imagenet_benchmark.py	/^  def benchmark_xla_8_gpu(self):$/;"	m	class:Resnet50KerasBenchmarkBase
benchmark_xla_8_gpu_fp16	resnet/keras/keras_imagenet_benchmark.py	/^  def benchmark_xla_8_gpu_fp16(self):$/;"	m	class:Resnet50KerasAccuracy
benchmark_xla_8_gpu_fp16	resnet/keras/keras_imagenet_benchmark.py	/^  def benchmark_xla_8_gpu_fp16(self):$/;"	m	class:Resnet50KerasBenchmarkBase
benchmark_xla_8_gpu_fp16_cloning	resnet/keras/keras_imagenet_benchmark.py	/^  def benchmark_xla_8_gpu_fp16_cloning(self):$/;"	m	class:Resnet50KerasBenchmarkBase
benchmark_xla_8_gpu_fp16_cloning_tweaked	resnet/keras/keras_imagenet_benchmark.py	/^  def benchmark_xla_8_gpu_fp16_cloning_tweaked(self):$/;"	m	class:Resnet50KerasBenchmarkBase
benchmark_xla_8_gpu_fp16_cloning_tweaked_delay_measure	resnet/keras/keras_imagenet_benchmark.py	/^  def benchmark_xla_8_gpu_fp16_cloning_tweaked_delay_measure(self):$/;"	m	class:Resnet50KerasBenchmarkBase
benchmark_xla_8_gpu_fp16_dynamic	resnet/keras/keras_imagenet_benchmark.py	/^  def benchmark_xla_8_gpu_fp16_dynamic(self):$/;"	m	class:Resnet50KerasAccuracy
benchmark_xla_8_gpu_fp16_dynamic_tweaked	resnet/keras/keras_imagenet_benchmark.py	/^  def benchmark_xla_8_gpu_fp16_dynamic_tweaked(self):$/;"	m	class:Resnet50KerasBenchmarkBase
benchmark_xla_8_gpu_fp16_slack	resnet/keras/keras_imagenet_benchmark.py	/^  def benchmark_xla_8_gpu_fp16_slack(self):$/;"	m	class:Resnet50KerasBenchmarkBase
benchmark_xla_8_gpu_fp16_tensorboard_tweaked	resnet/keras/keras_imagenet_benchmark.py	/^  def benchmark_xla_8_gpu_fp16_tensorboard_tweaked(self):$/;"	m	class:Resnet50KerasBenchmarkBase
benchmark_xla_8_gpu_fp16_tweaked	resnet/keras/keras_imagenet_benchmark.py	/^  def benchmark_xla_8_gpu_fp16_tweaked(self):$/;"	m	class:Resnet50KerasBenchmarkBase
benchmark_xla_8_gpu_fp16_tweaked_delay_measure	resnet/keras/keras_imagenet_benchmark.py	/^  def benchmark_xla_8_gpu_fp16_tweaked_delay_measure(self):$/;"	m	class:Resnet50KerasBenchmarkBase
benchmark_xla_8_gpu_fp16_tweaked_optional_next	resnet/keras/keras_imagenet_benchmark.py	/^  def benchmark_xla_8_gpu_fp16_tweaked_optional_next(self):$/;"	m	class:Resnet50KerasBenchmarkBase
benchmark_xla_8_gpu_tweaked	resnet/keras/keras_imagenet_benchmark.py	/^  def benchmark_xla_8_gpu_tweaked(self):$/;"	m	class:Resnet50KerasBenchmarkBase
bias_shape	bert/modeling.py	/^  def bias_shape(self):$/;"	m	class:Dense3D
bigquery	benchmark/benchmark_uploader_test.py	/^  bigquery = None$/;"	v
bigquery	utils/logs/logger_test.py	/^  bigquery = None$/;"	v
bisect	transformer/utils/tokenizer.py	/^  def bisect(min_val, max_val):$/;"	f	function:_generate_subtokens_with_target_vocab_size
bleu_score	transformer/utils/metrics.py	/^def bleu_score(logits, labels):$/;"	f
bleu_tokenize	transformer/compute_bleu.py	/^def bleu_tokenize(string):$/;"	f
bleu_wrapper	transformer/compute_bleu.py	/^def bleu_wrapper(ref_filename, hyp_filename, case_sensitive=False):$/;"	f
block_layer	resnet/resnet_model.py	/^def block_layer(inputs, filters, bottleneck, block_fn, blocks, strides,$/;"	f
buffer_reached	recommendation/data_pipeline.py	/^  def buffer_reached(self):$/;"	m	class:DatasetManager
build	bert/bert_models.py	/^  def build(self, unused_input_shapes):$/;"	m	class:BertPretrainLayer
build	bert/bert_models.py	/^  def build(self, unused_input_shapes):$/;"	m	class:BertSquadLogitsLayer
build	bert/modeling.py	/^  def build(self, input_shape):$/;"	m	class:Dense2DProjection
build	bert/modeling.py	/^  def build(self, input_shape):$/;"	m	class:Dense3D
build	bert/modeling.py	/^  def build(self, input_shapes):$/;"	m	class:EmbeddingPostprocessor
build	bert/modeling.py	/^  def build(self, unused_input_shapes):$/;"	m	class:Attention
build	bert/modeling.py	/^  def build(self, unused_input_shapes):$/;"	m	class:BertModel
build	bert/modeling.py	/^  def build(self, unused_input_shapes):$/;"	m	class:EmbeddingLookup
build	bert/modeling.py	/^  def build(self, unused_input_shapes):$/;"	m	class:Transformer
build	bert/modeling.py	/^  def build(self, unused_input_shapes):$/;"	m	class:TransformerBlock
build	transformer/model/embedding_layer.py	/^  def build(self, _):$/;"	m	class:EmbeddingSharedWeights
build	transformer/model/transformer.py	/^  def build(self, _):$/;"	m	class:LayerNormalization
build	transformer/v2/attention_layer.py	/^  def build(self, input_shape):$/;"	m	class:Attention
build	transformer/v2/embedding_layer.py	/^  def build(self, input_shape):$/;"	m	class:EmbeddingSharedWeights
build	transformer/v2/ffn_layer.py	/^  def build(self, input_shape):$/;"	m	class:FeedForwardNetwork
build	transformer/v2/metrics.py	/^  def build(self, input_shape):$/;"	m	class:MetricLayer
build	transformer/v2/transformer.py	/^  def build(self, input_shape):$/;"	m	class:DecoderStack
build	transformer/v2/transformer.py	/^  def build(self, input_shape):$/;"	m	class:EncoderStack
build	transformer/v2/transformer.py	/^  def build(self, input_shape):$/;"	m	class:LayerNormalization
build	transformer/v2/transformer.py	/^  def build(self, input_shape):$/;"	m	class:PrePostProcessingWrapper
build_and_test_estimator	wide_deep/census_test.py	/^  def build_and_test_estimator(self, model_type):$/;"	m	class:BaseTest
build_estimator	wide_deep/census_main.py	/^def build_estimator(model_dir, model_type, model_column_fn, inter_op, intra_op):$/;"	f
build_estimator	wide_deep/movielens_main.py	/^def build_estimator(model_dir, model_type, model_column_fn, inter_op, intra_op):$/;"	f
build_model_columns	wide_deep/census_dataset.py	/^def build_model_columns():$/;"	f
build_model_columns	wide_deep/movielens_dataset.py	/^def build_model_columns(dataset):$/;"	f
build_stats	recommendation/ncf_keras_main.py	/^def build_stats(loss, eval_result, time_callback):$/;"	f
build_stats	resnet/keras/keras_common.py	/^def build_stats(history, eval_output, callbacks):$/;"	f
build_stats	transformer/v2/misc.py	/^def build_stats(history, callbacks):$/;"	f
build_tensor_serving_input_receiver_fn	utils/export/export.py	/^def build_tensor_serving_input_receiver_fn(shape, dtype=tf.float32,$/;"	f
call	bert/bert_models.py	/^  def call(self, inputs):$/;"	m	class:BertPretrainLayer
call	bert/bert_models.py	/^  def call(self, inputs):$/;"	m	class:BertPretrainLossAndMetricLayer
call	bert/bert_models.py	/^  def call(self, inputs):$/;"	m	class:BertSquadLogitsLayer
call	bert/modeling.py	/^  def call(self, inputs):$/;"	m	class:Attention
call	bert/modeling.py	/^  def call(self, inputs):$/;"	m	class:BertModel
call	bert/modeling.py	/^  def call(self, inputs):$/;"	m	class:Dense2DProjection
call	bert/modeling.py	/^  def call(self, inputs):$/;"	m	class:Dense3D
call	bert/modeling.py	/^  def call(self, inputs):$/;"	m	class:EmbeddingLookup
call	bert/modeling.py	/^  def call(self, inputs):$/;"	m	class:EmbeddingPostprocessor
call	bert/modeling.py	/^  def call(self, inputs):$/;"	m	class:Transformer
call	bert/modeling.py	/^  def call(self, inputs):$/;"	m	class:TransformerBlock
call	recommendation/ncf_keras_main.py	/^  def call(self, inputs):$/;"	m	class:MetricLayer
call	transformer/model/attention_layer.py	/^  def call(self, x, bias, cache=None):$/;"	m	class:SelfAttention
call	transformer/model/attention_layer.py	/^  def call(self, x, y, bias, cache=None):$/;"	m	class:Attention
call	transformer/model/embedding_layer.py	/^  def call(self, x):$/;"	m	class:EmbeddingSharedWeights
call	transformer/model/ffn_layer.py	/^  def call(self, x, padding=None):$/;"	m	class:FeedFowardNetwork
call	transformer/model/transformer.py	/^  def call(self, decoder_inputs, encoder_outputs, decoder_self_attention_bias,$/;"	m	class:DecoderStack
call	transformer/model/transformer.py	/^  def call(self, encoder_inputs, attention_bias, inputs_padding):$/;"	m	class:EncoderStack
call	transformer/model/transformer.py	/^  def call(self, x, epsilon=1e-6):$/;"	m	class:LayerNormalization
call	transformer/v2/attention_layer.py	/^  def call(self, x, bias, training, cache=None):$/;"	m	class:SelfAttention
call	transformer/v2/attention_layer.py	/^  def call(self, x, y, bias, training, cache=None):$/;"	m	class:Attention
call	transformer/v2/embedding_layer.py	/^  def call(self, inputs, mode="embedding"):$/;"	m	class:EmbeddingSharedWeights
call	transformer/v2/ffn_layer.py	/^  def call(self, x, training):$/;"	m	class:FeedForwardNetwork
call	transformer/v2/metrics.py	/^  def call(self, inputs):$/;"	m	class:LossLayer
call	transformer/v2/metrics.py	/^  def call(self, inputs):$/;"	m	class:MetricLayer
call	transformer/v2/transformer.py	/^  def call(self, encoder_inputs, attention_bias, inputs_padding, training):$/;"	m	class:EncoderStack
call	transformer/v2/transformer.py	/^  def call(self, inputs, training):$/;"	m	class:Transformer
call	transformer/v2/transformer.py	/^  def call(self, x, *args, **kwargs):$/;"	m	class:PrePostProcessingWrapper
call	transformer/v2/transformer.py	/^  def call(self, x, epsilon=1e-6):$/;"	m	class:LayerNormalization
call	transformer/v2/transformer.py	/^  def call(self,$/;"	m	class:DecoderStack
channels	resnet/layer_test.py	/^         channels=4),$/;"	v
check_image_file_header	mnist/dataset.py	/^def check_image_file_header(filename):$/;"	f
check_labels_file_header	mnist/dataset.py	/^def check_labels_file_header(filename):$/;"	f
cifar10_model_fn	resnet/cifar10_main.py	/^def cifar10_model_fn(features, labels, mode, params):$/;"	f
cifar10_model_fn_helper	resnet/cifar10_test.py	/^  def cifar10_model_fn_helper(self, mode, resnet_version, dtype):$/;"	m	class:BaseTest
ckpt_prefix	utils/testing/reference_data.py	/^  ckpt_prefix = "model.ckpt"$/;"	v	class:BaseTest
classification_loss_fn	bert/run_classifier.py	/^  def classification_loss_fn(labels, logits):$/;"	f	function:get_loss_fn
classifier_model	bert/bert_models.py	/^def classifier_model(bert_config,$/;"	f
clear_system_caches	utils/logs/mlperf_helper.py	/^def clear_system_caches():$/;"	f
close	bert/squad_lib.py	/^  def close(self):$/;"	m	class:FeatureWriter
close	recommendation/popen_helper.py	/^  def close(self):$/;"	m	class:FauxPool
combine_heads	transformer/model/attention_layer.py	/^  def combine_heads(self, x):$/;"	m	class:Attention
combine_heads	transformer/v2/attention_layer.py	/^  def combine_heads(self, x):$/;"	m	class:Attention
common_tensor_properties	utils/testing/reference_data.py	/^  def common_tensor_properties(input_array):$/;"	m	class:BaseTest
compatible_bias_shape	bert/modeling.py	/^  def compatible_bias_shape(self):$/;"	m	class:Dense3D
compatible_kernel_shape	bert/modeling.py	/^  def compatible_kernel_shape(self):$/;"	m	class:Dense3D
compile_files	transformer/data_download.py	/^def compile_files(raw_dir, raw_files, tag):$/;"	f
compute_accuracy	mnist/mnist_eager.py	/^def compute_accuracy(logits, labels):$/;"	f
compute_bleu	transformer/utils/metrics.py	/^def compute_bleu(reference_corpus, translation_corpus, max_order=4,$/;"	f
compute_eval_loss_and_metrics_helper	recommendation/neumf_model.py	/^def compute_eval_loss_and_metrics_helper(logits,              # type: tf.Tensor$/;"	f
compute_top_k_and_ndcg	recommendation/neumf_model.py	/^def compute_top_k_and_ndcg(logits,              # type: tf.Tensor$/;"	f
config_benchmark_logger	utils/logs/logger.py	/^def config_benchmark_logger(flag_obj=None):$/;"	f
configure_cluster	utils/misc/distribution_utils.py	/^def configure_cluster(worker_hosts=None, task_index=-1):$/;"	f
construct_embedding_and_values	utils/accelerator/tpu_test.py	/^  def construct_embedding_and_values(self, embedding_dim, vocab_size,$/;"	m	class:TPUBaseTester
construct_estimator	recommendation/ncf_estimator_main.py	/^def construct_estimator(model_dir, params):$/;"	f
construct_estimator	transformer/transformer_main.py	/^def construct_estimator(flags_obj, params, schedule_manager):$/;"	f
construct_input_fns	wide_deep/movielens_dataset.py	/^def construct_input_fns(dataset, data_dir, batch_size=16, repeat=1):$/;"	f
construct_lookup_variables	recommendation/data_pipeline.py	/^  def construct_lookup_variables(self):$/;"	m	class:BaseDataConstructor
construct_lookup_variables	recommendation/data_pipeline.py	/^  def construct_lookup_variables(self):$/;"	m	class:BisectionDataConstructor
construct_lookup_variables	recommendation/data_pipeline.py	/^  def construct_lookup_variables(self):$/;"	m	class:MaterializedDataConstructor
construct_model	recommendation/neumf_model.py	/^def construct_model(user_input, item_input, params, need_strip=False):$/;"	f
construct_scalar_host_call	utils/accelerator/tpu.py	/^def construct_scalar_host_call(metric_dict, model_dir, prefix=""):$/;"	f
conv2d_fixed_padding	resnet/resnet_model.py	/^def conv2d_fixed_padding(inputs, filters, kernel_size, strides, data_format):$/;"	f
conv_block	resnet/keras/resnet_model.py	/^def conv_block(input_tensor,$/;"	f
conv_building_block	resnet/keras/resnet_cifar_model.py	/^def conv_building_block(input_tensor,$/;"	f
convert_by_vocab	bert/tokenization.py	/^def convert_by_vocab(vocab, items):$/;"	f
convert_examples_to_features	bert/squad_lib.py	/^def convert_examples_to_features(examples,$/;"	f
convert_ids_to_tokens	bert/tokenization.py	/^  def convert_ids_to_tokens(self, ids):$/;"	m	class:FullTokenizer
convert_ids_to_tokens	bert/tokenization.py	/^def convert_ids_to_tokens(inv_vocab, ids):$/;"	f
convert_single_example	bert/classifier_data_lib.py	/^def convert_single_example(ex_index, example, label_list, max_seq_length,$/;"	f
convert_to_softmax_logits	recommendation/ncf_common.py	/^def convert_to_softmax_logits(logits):$/;"	f
convert_to_unicode	bert/tokenization.py	/^def convert_to_unicode(text):$/;"	f
convert_tokens_to_ids	bert/tokenization.py	/^  def convert_tokens_to_ids(self, tokens):$/;"	m	class:FullTokenizer
convert_tokens_to_ids	bert/tokenization.py	/^def convert_tokens_to_ids(vocab, tokens):$/;"	f
core_fn	utils/flags/core.py	/^  def core_fn(*args, **kwargs):$/;"	f	function:register_key_flags_in_core
correctness_function	utils/testing/reference_data_test.py	/^    def correctness_function(tensor_result):$/;"	f	function:GoldenBaseTest._uniform_random_ops
create_attention_mask_from_input_mask	bert/modeling.py	/^def create_attention_mask_from_input_mask(from_tensor, to_mask):$/;"	f
create_classifier_dataset	bert/input_pipeline.py	/^def create_classifier_dataset(file_path,$/;"	f
create_int_feature	bert/classifier_data_lib.py	/^    def create_int_feature(values):$/;"	f	function:file_based_convert_examples_to_features
create_int_feature	bert/squad_lib.py	/^    def create_int_feature(values):$/;"	f	function:FeatureWriter.process_feature
create_model	mnist/mnist.py	/^def create_model(data_format):$/;"	f
create_model	transformer/v2/transformer.py	/^def create_model(params, is_train):$/;"	f
create_optimizer	bert/optimization.py	/^def create_optimizer(init_lr, num_train_steps, num_warmup_steps):$/;"	f
create_pretrain_dataset	bert/input_pipeline.py	/^def create_pretrain_dataset(file_path,$/;"	f
create_squad_dataset	bert/input_pipeline.py	/^def create_squad_dataset(file_path, seq_length, batch_size, is_training=True):$/;"	f
csv_to_joint_dataframe	datasets/movielens.py	/^def csv_to_joint_dataframe(data_dir, dataset):$/;"	f
current_data_root	recommendation/data_pipeline.py	/^  def current_data_root(self):$/;"	m	class:DatasetManager
data_delay_prefetch	resnet/keras/keras_common.py	/^def data_delay_prefetch():$/;"	f
data_format	mnist/mnist_eager_test.py	/^def data_format():$/;"	f
data_generator	recommendation/data_pipeline.py	/^  def data_generator(self, epochs_between_evals):$/;"	m	class:DatasetManager
data_root	utils/testing/reference_data.py	/^  def data_root(self):$/;"	m	class:BaseTest
dataset	mnist/dataset.py	/^def dataset(directory, images_file, labels_file):$/;"	f
decode	transformer/model/transformer.py	/^  def decode(self, targets, encoder_outputs, attention_bias):$/;"	m	class:Transformer
decode	transformer/utils/tokenizer.py	/^  def decode(self, subtokens):$/;"	m	class:Subtokenizer
decode	transformer/v2/transformer.py	/^  def decode(self, targets, encoder_outputs, attention_bias, training):$/;"	m	class:Transformer
decode_binary	recommendation/data_pipeline.py	/^    def decode_binary(data_bytes):$/;"	f	function:DatasetManager._deserialize
decode_image	mnist/dataset.py	/^  def decode_image(image):$/;"	f	function:dataset
decode_label	mnist/dataset.py	/^  def decode_label(label):$/;"	f	function:dataset
default_batch_size	transformer/model/model_params.py	/^    default_batch_size=1024,$/;"	v
default_batch_size	transformer/model/model_params.py	/^    default_batch_size=2048,  # Maximum number of tokens per batch of examples.$/;"	v
default_batch_size	transformer/model/model_params.py	/^    default_batch_size=4096,$/;"	v
default_batch_size_tpu	transformer/model/model_params.py	/^    default_batch_size_tpu=1024,$/;"	v
default_batch_size_tpu	transformer/model/model_params.py	/^    default_batch_size_tpu=16384,$/;"	v
default_batch_size_tpu	transformer/model/model_params.py	/^    default_batch_size_tpu=32768,$/;"	v
default_correctness_function	utils/testing/reference_data.py	/^  def default_correctness_function(self, *args):$/;"	m	class:BaseTest
define_base	utils/flags/_base.py	/^def define_base(data_dir=True, model_dir=True, clean=True, train_epochs=True,$/;"	f
define_base	utils/flags/core.py	/^define_base = register_key_flags_in_core(_base.define_base)$/;"	v
define_base_eager	utils/flags/core.py	/^define_base_eager = register_key_flags_in_core(functools.partial($/;"	v
define_benchmark	utils/flags/_benchmark.py	/^def define_benchmark(benchmark_log_dir=True, bigquery_uploader=True):$/;"	f
define_benchmark	utils/flags/core.py	/^define_benchmark = register_key_flags_in_core(_benchmark.define_benchmark)$/;"	v
define_census_flags	wide_deep/census_main.py	/^def define_census_flags():$/;"	f
define_cifar_flags	resnet/cifar10_main.py	/^def define_cifar_flags():$/;"	f
define_compute_bleu_flags	transformer/compute_bleu.py	/^def define_compute_bleu_flags():$/;"	f
define_data_download_flags	boosted_trees/data_download.py	/^def define_data_download_flags():$/;"	f
define_data_download_flags	datasets/movielens.py	/^def define_data_download_flags():$/;"	f
define_data_download_flags	transformer/data_download.py	/^def define_data_download_flags():$/;"	f
define_data_download_flags	wide_deep/census_dataset.py	/^def define_data_download_flags():$/;"	f
define_device	utils/flags/_device.py	/^def define_device(tpu=True):$/;"	f
define_device	utils/flags/core.py	/^define_device = register_key_flags_in_core(_device.define_device)$/;"	v
define_flags	utils/flags/flags_test.py	/^def define_flags():$/;"	f
define_image	utils/flags/_misc.py	/^def define_image(data_format=True):$/;"	f
define_image	utils/flags/core.py	/^define_image = register_key_flags_in_core(_misc.define_image)$/;"	v
define_imagenet_flags	resnet/imagenet_main.py	/^def define_imagenet_flags(dynamic_loss_scale=False, fp16_implementation=False):$/;"	f
define_keras_benchmark_flags	keras_application_models/benchmark_main.py	/^def define_keras_benchmark_flags():$/;"	f
define_keras_flags	resnet/keras/keras_common.py	/^def define_keras_flags():$/;"	f
define_mnist_eager_flags	mnist/mnist_eager.py	/^def define_mnist_eager_flags():$/;"	f
define_mnist_flags	mnist/mnist.py	/^def define_mnist_flags():$/;"	f
define_movie_flags	wide_deep/movielens_main.py	/^def define_movie_flags():$/;"	f
define_ncf_flags	recommendation/ncf_common.py	/^def define_ncf_flags():$/;"	f
define_performance	utils/flags/_performance.py	/^def define_performance(num_parallel_calls=True, inter_op=True, intra_op=True,$/;"	f
define_performance	utils/flags/core.py	/^define_performance = register_key_flags_in_core(_performance.define_performance)$/;"	v
define_resnet_flags	resnet/resnet_run_loop.py	/^def define_resnet_flags(resnet_size_choices=None, dynamic_loss_scale=False,$/;"	f
define_train_higgs_flags	boosted_trees/train_higgs.py	/^def define_train_higgs_flags():$/;"	f
define_transformer_flags	transformer/transformer_main.py	/^def define_transformer_flags():$/;"	f
define_transformer_flags	transformer/v2/misc.py	/^def define_transformer_flags():$/;"	f
define_translate_flags	transformer/translate.py	/^def define_translate_flags():$/;"	f
define_wide_deep_flags	wide_deep/wide_deep_run_loop.py	/^def define_wide_deep_flags():$/;"	f
device	mnist/mnist_eager_test.py	/^def device():$/;"	f
dict_to_example	transformer/data_download.py	/^def dict_to_example(dictionary):$/;"	f
download	datasets/movielens.py	/^def download(dataset, data_dir):$/;"	f
download	mnist/dataset.py	/^def download(directory, filename):$/;"	f
download	wide_deep/census_dataset.py	/^def download(data_dir):$/;"	f
download_and_extract	transformer/data_download.py	/^def download_and_extract(path, url, input_filename, target_filename):$/;"	f
download_from_url	transformer/data_download.py	/^def download_from_url(path, url):$/;"	f
download_report_hook	transformer/data_download.py	/^def download_report_hook(count, block_size, total_size):$/;"	f
drain_dataset	recommendation/data_test.py	/^  def drain_dataset(self, dataset, g):$/;"	m	class:BaseTest
dummy_input_fn	mnist/mnist_test.py	/^def dummy_input_fn():$/;"	f
embedding_matmul	utils/accelerator/tpu.py	/^def embedding_matmul(embedding_table, values, mask, name="embedding_matmul"):$/;"	f
enabled	utils/logs/mlperf_helper.py	/^  def enabled(self):$/;"	m	class:Logger
encode	transformer/model/transformer.py	/^  def encode(self, inputs, attention_bias):$/;"	m	class:Transformer
encode	transformer/utils/tokenizer.py	/^  def encode(self, raw_string, add_eos=False):$/;"	m	class:Subtokenizer
encode	transformer/v2/transformer.py	/^  def encode(self, inputs, attention_bias, training):$/;"	m	class:Transformer
encode_and_save_files	transformer/data_download.py	/^def encode_and_save_files($/;"	f
end	utils/logs/metric_hook.py	/^  def end(self, session):$/;"	m	class:LoggingMetricHook
end_construction	recommendation/data_pipeline.py	/^  def end_construction(self):$/;"	m	class:DatasetManager
epochs_to_steps	transformer/utils/schedule.py	/^  def epochs_to_steps(self, num_epochs, mode):$/;"	m	class:Manager
eval	transformer/v2/transformer_main.py	/^  def eval(self):$/;"	m	class:TransformerTask
eval_input_fn	mnist/mnist.py	/^  def eval_input_fn():$/;"	f	function:run_mnist
eval_input_fn	mnist/mnist_tpu.py	/^def eval_input_fn(params):$/;"	f
eval_input_fn	transformer/utils/dataset.py	/^def eval_input_fn(params):$/;"	f
eval_input_fn	transformer/v2/data_pipeline.py	/^def eval_input_fn(params):$/;"	f
eval_input_fn	wide_deep/census_main.py	/^  def eval_input_fn():$/;"	f	function:run_census
eval_size_check	recommendation/ncf_common.py	/^  def eval_size_check(eval_batch_size):$/;"	f	function:define_ncf_flags
eval_step	recommendation/ncf_keras_main.py	/^    def eval_step():$/;"	f	function:run_ncf
evaluate	mnist/mnist_eager_test.py	/^def evaluate(defun=False):$/;"	f
evaluate_and_log_bleu	transformer/transformer_main.py	/^def evaluate_and_log_bleu(estimator, bleu_source, bleu_ref, vocab_file):$/;"	f
evaluate_and_log_bleu	transformer/v2/transformer_main.py	/^def evaluate_and_log_bleu(model, bleu_source, bleu_ref, vocab_file):$/;"	f
example_to_bucket_id	transformer/utils/dataset.py	/^  def example_to_bucket_id(example_input, example_target):$/;"	f	function:_batch_examples
example_to_bucket_id	transformer/v2/data_pipeline.py	/^  def example_to_bucket_id(example_input, example_target):$/;"	f	function:_batch_examples
exclude_batch_norm	resnet/resnet_run_loop.py	/^  def exclude_batch_norm(name):$/;"	f	function:resnet_model_fn
export_bert_model	bert/model_saving_utils.py	/^def export_bert_model(model_export_path,$/;"	f
export_classifier	bert/run_classifier.py	/^def export_classifier(model_export_path, input_meta_data):$/;"	f
export_model	wide_deep/wide_deep_run_loop.py	/^def export_model(model, model_type, export_dir, model_column_fn):$/;"	f
extra_decode_length	transformer/model/model_params.py	/^    extra_decode_length=50,$/;"	v
file_based_convert_examples_to_features	bert/classifier_data_lib.py	/^def file_based_convert_examples_to_features(examples, label_list,$/;"	f
file_based_input_fn_builder	bert/input_pipeline.py	/^def file_based_input_fn_builder(input_file, name_to_features):$/;"	f
fill_report_object	resnet/keras/keras_imagenet_benchmark.py	/^  def fill_report_object(self, stats):$/;"	m	class:Resnet50KerasBenchmarkBase
fill_report_object	resnet/keras/keras_imagenet_benchmark.py	/^  def fill_report_object(self, stats):$/;"	m	class:TrivialKerasBenchmarkReal
filter_size	transformer/model/model_params.py	/^    filter_size=2048,  # Inner layer dimension in the feedforward network.$/;"	v
filter_size	transformer/model/model_params.py	/^    filter_size=256,$/;"	v
filter_size	transformer/model/model_params.py	/^    filter_size=4096,$/;"	v
find_file	transformer/data_download.py	/^def find_file(path, filename, max_depth=5):$/;"	f
firstline_indent	utils/flags/_conventions.py	/^                               firstline_indent="\\n")$/;"	v
fixed_core_count	utils/data/file_io_test.py	/^def fixed_core_count(cpu_count):$/;"	f
fixed_padding	resnet/resnet_model.py	/^def fixed_padding(inputs, kernel_size, data_format):$/;"	f
from_config	bert/optimization.py	/^  def from_config(cls, config):$/;"	m	class:AdamWeightDecay
from_dict	bert/modeling.py	/^  def from_dict(cls, json_object):$/;"	m	class:BertConfig
from_json_file	bert/modeling.py	/^  def from_json_file(cls, json_file):$/;"	m	class:BertConfig
gather_indexes	bert/bert_models.py	/^def gather_indexes(sequence_tensor, positions):$/;"	f
gelu	bert/modeling.py	/^def gelu(x):$/;"	f
generate_classifier_dataset	bert/create_finetuning_data.py	/^def generate_classifier_dataset():$/;"	f
generate_squad_dataset	bert/create_finetuning_data.py	/^def generate_squad_dataset():$/;"	f
generate_synthetic_data	utils/misc/model_helpers.py	/^def generate_synthetic_data($/;"	f
generate_synthetic_input_dataset	keras_application_models/dataset.py	/^def generate_synthetic_input_dataset(model, batch_size):$/;"	f
generate_tf_record_from_data_file	bert/classifier_data_lib.py	/^def generate_tf_record_from_data_file(processor,$/;"	f
generate_tf_record_from_json_file	bert/squad_lib.py	/^def generate_tf_record_from_json_file(input_file_path,$/;"	f
get_activation	bert/modeling.py	/^def get_activation(identifier):$/;"	f
get_benchmark_logger	utils/logs/logger.py	/^def get_benchmark_logger():$/;"	f
get_bert_model	bert/modeling.py	/^def get_bert_model(input_word_ids,$/;"	f
get_bucket_boundaries	boosted_trees/train_higgs.py	/^  def get_bucket_boundaries(feature):$/;"	f	function:make_inputs_from_np_arrays
get_callbacks	resnet/keras/keras_common.py	/^def get_callbacks(learning_rate_schedule_fn, num_images):$/;"	f
get_callbacks	transformer/v2/misc.py	/^def get_callbacks():$/;"	f
get_config	bert/modeling.py	/^  def get_config(self):$/;"	m	class:BertModel
get_config	bert/optimization.py	/^  def get_config(self):$/;"	m	class:AdamWeightDecay
get_config	bert/optimization.py	/^  def get_config(self):$/;"	m	class:WarmUp
get_config	resnet/keras/keras_common.py	/^  def get_config(self):$/;"	m	class:PiecewiseConstantDecayWithWarmup
get_config	transformer/v2/attention_layer.py	/^  def get_config(self):$/;"	m	class:Attention
get_config	transformer/v2/embedding_layer.py	/^  def get_config(self):$/;"	m	class:EmbeddingSharedWeights
get_config	transformer/v2/ffn_layer.py	/^  def get_config(self):$/;"	m	class:FeedForwardNetwork
get_config	transformer/v2/metrics.py	/^  def get_config(self):$/;"	m	class:LossLayer
get_config	transformer/v2/metrics.py	/^  def get_config(self):$/;"	m	class:MetricLayer
get_config	transformer/v2/transformer.py	/^  def get_config(self):$/;"	m	class:DecoderStack
get_config	transformer/v2/transformer.py	/^  def get_config(self):$/;"	m	class:EncoderStack
get_config	transformer/v2/transformer.py	/^  def get_config(self):$/;"	m	class:LayerNormalization
get_config	transformer/v2/transformer.py	/^  def get_config(self):$/;"	m	class:PrePostProcessingWrapper
get_config	transformer/v2/transformer.py	/^  def get_config(self):$/;"	m	class:Transformer
get_config_proto_v1	resnet/keras/keras_common.py	/^def get_config_proto_v1():$/;"	f
get_constructor	recommendation/data_pipeline.py	/^def get_constructor(name):$/;"	f
get_dataset	recommendation/data_pipeline.py	/^  def get_dataset(self, batch_size, epochs_between_evals):$/;"	m	class:DatasetManager
get_decoder_self_attention_bias	transformer/model/model_utils.py	/^def get_decoder_self_attention_bias(length):$/;"	f
get_dev_examples	bert/classifier_data_lib.py	/^  def get_dev_examples(self, data_dir):$/;"	m	class:ColaProcessor
get_dev_examples	bert/classifier_data_lib.py	/^  def get_dev_examples(self, data_dir):$/;"	m	class:DataProcessor
get_dev_examples	bert/classifier_data_lib.py	/^  def get_dev_examples(self, data_dir):$/;"	m	class:MnliProcessor
get_dev_examples	bert/classifier_data_lib.py	/^  def get_dev_examples(self, data_dir):$/;"	m	class:MrpcProcessor
get_dev_examples	bert/classifier_data_lib.py	/^  def get_dev_examples(self, data_dir):$/;"	m	class:XnliProcessor
get_distribution_strategy	recommendation/ncf_common.py	/^def get_distribution_strategy(params):$/;"	f
get_distribution_strategy	utils/misc/distribution_utils.py	/^def get_distribution_strategy(distribution_strategy="default",$/;"	f
get_eval_metrics	transformer/utils/metrics.py	/^def get_eval_metrics(logits, labels, params):$/;"	f
get_examples_per_sec	bert/benchmark/bert_benchmark.py	/^  def get_examples_per_sec(self, batch_size):$/;"	m	class:BenchmarkTimerCallback
get_examples_per_second_callback	keras_application_models/model_callbacks.py	/^def get_examples_per_second_callback($/;"	f
get_examples_per_second_hook	utils/logs/hooks_helper.py	/^def get_examples_per_second_hook(every_n_steps=100,$/;"	f
get_fauxpool	recommendation/popen_helper.py	/^def get_fauxpool(num_workers, init_worker=None, closing=True):$/;"	f
get_filenames	resnet/cifar10_main.py	/^def get_filenames(is_training, data_dir):$/;"	f
get_filenames	resnet/imagenet_main.py	/^def get_filenames(is_training, data_dir):$/;"	f
get_final_text	bert/squad_lib.py	/^def get_final_text(pred_text, orig_text, do_lower_case, verbose=False):$/;"	f
get_forkpool	recommendation/popen_helper.py	/^def get_forkpool(num_workers, init_worker=None, closing=True):$/;"	f
get_global_step	transformer/transformer_main.py	/^def get_global_step(estimator):$/;"	f
get_hit_rate_and_ndcg	recommendation/ncf_test.py	/^  def get_hit_rate_and_ndcg(self, predicted_scores_by_user, items_by_user,$/;"	m	class:NcfTest
get_initializer	bert/modeling.py	/^def get_initializer(initializer_range=0.02):$/;"	f
get_input_fn	wide_deep/census_test.py	/^    def get_input_fn(num_epochs, shuffle, batch_size):$/;"	f	function:BaseTest.build_and_test_estimator
get_inputs	recommendation/ncf_common.py	/^def get_inputs(params):$/;"	f
get_labels	bert/classifier_data_lib.py	/^  def get_labels(self):$/;"	m	class:ColaProcessor
get_labels	bert/classifier_data_lib.py	/^  def get_labels(self):$/;"	m	class:DataProcessor
get_labels	bert/classifier_data_lib.py	/^  def get_labels(self):$/;"	m	class:MnliProcessor
get_labels	bert/classifier_data_lib.py	/^  def get_labels(self):$/;"	m	class:MrpcProcessor
get_labels	bert/classifier_data_lib.py	/^  def get_labels(self):$/;"	m	class:XnliProcessor
get_learning_rate	transformer/transformer_main.py	/^def get_learning_rate(learning_rate, hidden_size, learning_rate_warmup_steps):$/;"	f
get_logging_metric_callback	keras_application_models/model_callbacks.py	/^def get_logging_metric_callback(metric_logger=None, **kwargs):  # pylint: disable=unused-argument$/;"	f
get_logging_metric_hook	utils/logs/hooks_helper.py	/^def get_logging_metric_hook(tensors_to_log=None,$/;"	f
get_logging_tensor_hook	utils/logs/hooks_helper.py	/^def get_logging_tensor_hook(every_n_iter=100, tensors_to_log=None, **kwargs):  # pylint: disable=unused-argument$/;"	f
get_loss_fn	bert/run_classifier.py	/^def get_loss_fn(num_classes, loss_scale=1.0):$/;"	f
get_loss_fn	bert/run_pretraining.py	/^def get_loss_fn(loss_scale=1.0):$/;"	f
get_loss_fn	bert/run_squad.py	/^def get_loss_fn(loss_scale=1.0):$/;"	f
get_loss_scale	utils/flags/_performance.py	/^def get_loss_scale(flags_obj):$/;"	f
get_loss_scale	utils/flags/core.py	/^get_loss_scale = _performance.get_loss_scale$/;"	v
get_mlperf_log	utils/logs/mlperf_helper.py	/^def get_mlperf_log():$/;"	f
get_model_callbacks	keras_application_models/model_callbacks.py	/^def get_model_callbacks(name_list, **kwargs):$/;"	f
get_model_params	transformer/v2/misc.py	/^def get_model_params(param_set, num_gpus):$/;"	f
get_monitor_value	recommendation/ncf_keras_main.py	/^  def get_monitor_value(self, logs):$/;"	m	class:CustomEarlyStopping
get_next	utils/misc/distribution_utils.py	/^  def get_next(self):$/;"	m	class:SyntheticDataset
get_nondefault_flags_as_str	utils/flags/core.py	/^def get_nondefault_flags_as_str():$/;"	f
get_num_gpus	utils/flags/_base.py	/^def get_num_gpus(flags_obj):$/;"	f
get_num_gpus	utils/flags/core.py	/^get_num_gpus = _base.get_num_gpus$/;"	v
get_optimizer	resnet/keras/keras_common.py	/^def get_optimizer(learning_rate=0.1):$/;"	f
get_padding	transformer/model/model_utils.py	/^def get_padding(x, padding_value=0):$/;"	f
get_padding_bias	transformer/model/model_utils.py	/^def get_padding_bias(x):$/;"	f
get_position_encoding	transformer/model/model_utils.py	/^def get_position_encoding($/;"	f
get_pretrain_input_data	bert/run_pretraining.py	/^def get_pretrain_input_data(input_file_pattern, seq_length,$/;"	f
get_primary_cpu_task	bert/model_training_utils.py	/^def get_primary_cpu_task(use_remote_tpu=False):$/;"	f
get_processor_name	bert/classifier_data_lib.py	/^  def get_processor_name():$/;"	m	class:ColaProcessor
get_processor_name	bert/classifier_data_lib.py	/^  def get_processor_name():$/;"	m	class:DataProcessor
get_processor_name	bert/classifier_data_lib.py	/^  def get_processor_name():$/;"	m	class:MnliProcessor
get_processor_name	bert/classifier_data_lib.py	/^  def get_processor_name():$/;"	m	class:MrpcProcessor
get_processor_name	bert/classifier_data_lib.py	/^  def get_processor_name():$/;"	m	class:XnliProcessor
get_profiler_callback	utils/misc/keras_utils.py	/^def get_profiler_callback(model_dir, profile_steps, enable_tensorboard):$/;"	f
get_profiler_hook	utils/logs/hooks_helper.py	/^def get_profiler_hook(model_dir, save_steps=1000, **kwargs):  # pylint: disable=unused-argument$/;"	f
get_raw_files	transformer/data_download.py	/^def get_raw_files(raw_dir, data_source):$/;"	f
get_raw_results	bert/run_squad.py	/^def get_raw_results(predictions):$/;"	f
get_shape_list	bert/modeling.py	/^def get_shape_list(tensor, expected_rank=None, name=None):$/;"	f
get_strategy_scope	utils/misc/distribution_utils.py	/^def get_strategy_scope(strategy):$/;"	f
get_synth_input_fn	resnet/cifar10_main.py	/^def get_synth_input_fn(dtype):$/;"	f
get_synth_input_fn	resnet/imagenet_main.py	/^def get_synth_input_fn(dtype):$/;"	f
get_synth_input_fn	resnet/keras/keras_common.py	/^def get_synth_input_fn(height, width, num_channels, num_classes,$/;"	f
get_synth_input_fn	resnet/resnet_run_loop.py	/^def get_synth_input_fn(height, width, num_channels, num_classes,$/;"	f
get_temp_dir	resnet/keras/keras_cifar_test.py	/^  def get_temp_dir(self):$/;"	m	class:KerasCifarTest
get_temp_dir	resnet/keras/keras_imagenet_test.py	/^  def get_temp_dir(self):$/;"	m	class:KerasImagenetTest
get_test_examples	bert/classifier_data_lib.py	/^  def get_test_examples(self, data_dir):$/;"	m	class:ColaProcessor
get_test_examples	bert/classifier_data_lib.py	/^  def get_test_examples(self, data_dir):$/;"	m	class:DataProcessor
get_test_examples	bert/classifier_data_lib.py	/^  def get_test_examples(self, data_dir):$/;"	m	class:MnliProcessor
get_test_examples	bert/classifier_data_lib.py	/^  def get_test_examples(self, data_dir):$/;"	m	class:MrpcProcessor
get_tf_dtype	utils/flags/_performance.py	/^def get_tf_dtype(flags_obj):$/;"	f
get_tf_dtype	utils/flags/core.py	/^get_tf_dtype = _performance.get_tf_dtype$/;"	v
get_threadpool	recommendation/popen_helper.py	/^def get_threadpool(num_workers, init_worker=None, closing=True):$/;"	f
get_train_examples	bert/classifier_data_lib.py	/^  def get_train_examples(self, data_dir):$/;"	m	class:ColaProcessor
get_train_examples	bert/classifier_data_lib.py	/^  def get_train_examples(self, data_dir):$/;"	m	class:DataProcessor
get_train_examples	bert/classifier_data_lib.py	/^  def get_train_examples(self, data_dir):$/;"	m	class:MnliProcessor
get_train_examples	bert/classifier_data_lib.py	/^  def get_train_examples(self, data_dir):$/;"	m	class:MrpcProcessor
get_train_examples	bert/classifier_data_lib.py	/^  def get_train_examples(self, data_dir):$/;"	m	class:XnliProcessor
get_train_hooks	utils/logs/hooks_helper.py	/^def get_train_hooks(name_list, use_tpu=False, **kwargs):$/;"	f
get_train_op_and_metrics	transformer/transformer_main.py	/^def get_train_op_and_metrics(loss, params):$/;"	f
help	mnist/mnist_tpu.py	/^    help="The Cloud TPU to use for training. This should be either the name "$/;"	v
help	mnist/mnist_tpu.py	/^    help="[Optional] GCE zone where the Cloud TPU is located in. If not "$/;"	v
help	mnist/mnist_tpu.py	/^    help="[Optional] Project name for the Cloud TPU-enabled project. If not "$/;"	v
help	resnet/cifar10_download_and_extract.py	/^    help='Directory to download data and extract the tarball')$/;"	v
help_wrap	utils/flags/_conventions.py	/^  def help_wrap(text, *args, **kwargs):$/;"	f
help_wrap	utils/flags/_conventions.py	/^  help_wrap = _help_wrap$/;"	v
help_wrap	utils/flags/core.py	/^help_wrap = _conventions.help_wrap$/;"	v
hidden_size	transformer/model/model_params.py	/^    hidden_size=1024,$/;"	v
hidden_size	transformer/model/model_params.py	/^    hidden_size=32,$/;"	v
hidden_size	transformer/model/model_params.py	/^    hidden_size=512,  # Model dimension in the hidden layers.$/;"	v
host_call_fn	utils/accelerator/tpu.py	/^  def host_call_fn(global_step, *args):$/;"	f	function:construct_scalar_host_call
identity_block	resnet/keras/resnet_model.py	/^def identity_block(input_tensor, kernel_size, filters, stage, block):$/;"	f
identity_building_block	resnet/keras/resnet_cifar_model.py	/^def identity_building_block(input_tensor,$/;"	f
image_bytes_serving_input_fn	resnet/resnet_run_loop.py	/^def image_bytes_serving_input_fn(image_shape, dtype=tf.float32):$/;"	f
imagenet_model_fn	resnet/imagenet_main.py	/^def imagenet_model_fn(features, labels, mode, params):$/;"	f
imap	recommendation/popen_helper.py	/^  def imap(self, func, iterable, chunksize=1):$/;"	m	class:FauxPool
increment_request_epoch	recommendation/data_pipeline.py	/^  def increment_request_epoch(self):$/;"	m	class:BaseDataConstructor
increment_request_epoch	recommendation/data_pipeline.py	/^  def increment_request_epoch(self):$/;"	m	class:DatasetManager
increment_request_epoch	recommendation/data_pipeline.py	/^  def increment_request_epoch(self):$/;"	m	class:DummyConstructor
init_from_files	transformer/utils/tokenizer.py	/^  def init_from_files($/;"	m	class:Subtokenizer
initialize	utils/misc/distribution_utils.py	/^  def initialize(self):$/;"	m	class:SyntheticDataset
initializer_gain	transformer/model/model_params.py	/^    initializer_gain=1.0,  # Used in trainable variable initialization.$/;"	v
input_fn	bert/input_pipeline.py	/^  def input_fn():$/;"	f	function:file_based_input_fn_builder
input_fn	boosted_trees/train_higgs.py	/^  def input_fn():$/;"	f	function:make_eval_inputs_from_np_arrays
input_fn	boosted_trees/train_higgs.py	/^  def input_fn():$/;"	f	function:make_inputs_from_np_arrays
input_fn	recommendation/data_pipeline.py	/^    def input_fn(params):$/;"	f	function:DatasetManager.make_input_fn
input_fn	recommendation/data_pipeline.py	/^    def input_fn(params):$/;"	f	function:DummyConstructor.make_input_fn
input_fn	resnet/cifar10_main.py	/^def input_fn(is_training,$/;"	f
input_fn	resnet/imagenet_main.py	/^def input_fn(is_training,$/;"	f
input_fn	resnet/keras/keras_common.py	/^  def input_fn(is_training, data_dir, batch_size, *args, **kwargs):$/;"	f	function:get_synth_input_fn
input_fn	resnet/resnet_run_loop.py	/^  def input_fn(is_training, data_dir, batch_size, *args, **kwargs):$/;"	f	function:get_synth_input_fn
input_fn	transformer/translate.py	/^  def input_fn():$/;"	f	function:translate_file
input_fn	transformer/translate.py	/^  def input_fn():$/;"	f	function:translate_text
input_fn	wide_deep/census_dataset.py	/^def input_fn(data_file, num_epochs, shuffle, batch_size):$/;"	f
input_fn	wide_deep/census_test.py	/^      def input_fn():$/;"	f	function:BaseTest.build_and_test_estimator.get_input_fn
input_fn	wide_deep/movielens_dataset.py	/^  def input_fn():$/;"	f	function:_df_to_input_fn
input_fn_eval	resnet/resnet_run_loop.py	/^  def input_fn_eval():$/;"	f	function:resnet_main
input_fn_train	resnet/resnet_run_loop.py	/^  def input_fn_train(num_epochs, input_context=None):$/;"	f	function:resnet_main
input_generator	transformer/translate.py	/^  def input_generator():$/;"	f	function:translate_file
input_generator	transformer/v2/translate.py	/^  def input_generator():$/;"	f	function:translate_file
insert_run_status	benchmark/benchmark_uploader.py	/^  def insert_run_status(self, dataset_name, table_name, run_id, run_status):$/;"	m	class:BigQueryUploader
instantiate_pipeline	recommendation/data_preprocessing.py	/^def instantiate_pipeline(dataset, data_dir, params, constructor_type=None,$/;"	f
integerize_genres	datasets/movielens.py	/^def integerize_genres(dataframe):$/;"	f
is_special_none_tensor	bert/modeling.py	/^def is_special_none_tensor(tensor):$/;"	f
is_v2	transformer/v2/misc.py	/^def is_v2():$/;"	f
is_v2_0	resnet/keras/keras_common.py	/^def is_v2_0():$/;"	f
is_whitespace	bert/squad_lib.py	/^  def is_whitespace(c):$/;"	f	function:read_squad_examples
iter_shard_dataframe	utils/data/file_io.py	/^def iter_shard_dataframe(df, rows_per_core=1000):$/;"	f
join	recommendation/popen_helper.py	/^  def join(self):$/;"	m	class:FauxPool
kernel_shape	bert/modeling.py	/^  def kernel_shape(self):$/;"	m	class:Dense3D
label_smoothing	transformer/model/model_params.py	/^    label_smoothing=0.1,$/;"	v
layer_postprocess_dropout	transformer/model/model_params.py	/^    layer_postprocess_dropout=0.1,$/;"	v
layer_postprocess_dropout	transformer/model/model_params.py	/^    layer_postprocess_dropout=0.3,$/;"	v
learning_rate	transformer/model/model_params.py	/^    learning_rate=2.0,$/;"	v
learning_rate_decay_rate	transformer/model/model_params.py	/^    learning_rate_decay_rate=1.0,$/;"	v
learning_rate_fn	resnet/resnet_run_loop.py	/^  def learning_rate_fn(global_step):$/;"	f	function:learning_rate_with_decay
learning_rate_schedule	resnet/keras/keras_cifar_main.py	/^def learning_rate_schedule(current_epoch,$/;"	f
learning_rate_schedule	resnet/keras/keras_imagenet_main.py	/^def learning_rate_schedule(current_epoch,$/;"	f
learning_rate_warmup_steps	transformer/model/model_params.py	/^    learning_rate_warmup_steps=16000,$/;"	v
learning_rate_warmup_steps	transformer/model/model_params.py	/^    learning_rate_warmup_steps=8000$/;"	v
learning_rate_with_decay	resnet/resnet_run_loop.py	/^def learning_rate_with_decay($/;"	f
linear	transformer/model/embedding_layer.py	/^  def linear(self, x):$/;"	m	class:EmbeddingSharedWeights
lint	utils/testing/scripts/presubmit.sh	/^lint() {$/;"	f
load_vocab	bert/tokenization.py	/^def load_vocab(vocab_file):$/;"	f
local_flags	bert/benchmark/bert_benchmark.py	/^  local_flags = None$/;"	v	class:BertBenchmarkBase
local_flags	recommendation/ncf_keras_benchmark.py	/^  local_flags = None$/;"	v	class:KerasNCFBenchmarkBase
local_flags	resnet/estimator_benchmark.py	/^  local_flags = None$/;"	v	class:EstimatorBenchmark
local_flags	resnet/estimator_benchmark.py	/^  local_flags = None$/;"	v	class:Resnet50EstimatorBenchmark
local_flags	resnet/estimator_benchmark.py	/^  local_flags = None$/;"	v	class:Resnet56EstimatorAccuracy
local_flags	resnet/keras/keras_benchmark.py	/^  local_flags = None$/;"	v	class:KerasBenchmark
local_flags	transformer/transformer_estimator_benchmark.py	/^  local_flags = None$/;"	v	class:EstimatorBenchmark
local_flags	utils/testing/perfzero_benchmark.py	/^  local_flags = None$/;"	v	class:PerfZeroBenchmark
log_and_get_hooks	recommendation/ncf_estimator_main.py	/^def log_and_get_hooks(eval_batch_size):$/;"	f
log_evaluation_result	utils/logs/logger.py	/^  def log_evaluation_result(self, eval_results):$/;"	m	class:BaseBenchmarkLogger
log_file	utils/logs/mlperf_helper.py	/^  def log_file(self):$/;"	m	class:Logger
log_metric	utils/logs/logger.py	/^  def log_metric(self, name, value, unit=None, global_step=None, extras=None):$/;"	m	class:BaseBenchmarkLogger
log_metric	utils/logs/logger.py	/^  def log_metric(self, name, value, unit=None, global_step=None, extras=None):$/;"	m	class:BenchmarkBigQueryLogger
log_metric	utils/logs/logger.py	/^  def log_metric(self, name, value, unit=None, global_step=None, extras=None):$/;"	m	class:BenchmarkFileLogger
log_metric	utils/testing/mock_lib.py	/^  def log_metric(self, name, value, unit=None, global_step=None,$/;"	m	class:MockBenchmarkLogger
log_run_info	utils/logs/logger.py	/^  def log_run_info(self, model_name, dataset_name, run_params, test_id=None):$/;"	m	class:BaseBenchmarkLogger
log_run_info	utils/logs/logger.py	/^  def log_run_info(self, model_name, dataset_name, run_params, test_id=None):$/;"	m	class:BenchmarkBigQueryLogger
log_run_info	utils/logs/logger.py	/^  def log_run_info(self, model_name, dataset_name, run_params, test_id=None):$/;"	m	class:BenchmarkFileLogger
lookup_negative_items	recommendation/data_pipeline.py	/^  def lookup_negative_items(self, **kwargs):$/;"	m	class:BaseDataConstructor
lookup_negative_items	recommendation/data_pipeline.py	/^  def lookup_negative_items(self, negative_users, **kwargs):$/;"	m	class:BisectionDataConstructor
lookup_negative_items	recommendation/data_pipeline.py	/^  def lookup_negative_items(self, negative_users, **kwargs):$/;"	m	class:MaterializedDataConstructor
loss	mnist/mnist_eager.py	/^def loss(logits, labels):$/;"	f
loss_filter_fn	resnet/cifar10_main.py	/^  def loss_filter_fn(_):$/;"	f	function:cifar10_model_fn
main	benchmark/benchmark_uploader_main.py	/^def main(_):$/;"	f
main	bert/create_finetuning_data.py	/^def main(_):$/;"	f
main	bert/run_classifier.py	/^def main(_):$/;"	f
main	bert/run_pretraining.py	/^def main(_):$/;"	f
main	bert/run_squad.py	/^def main(_):$/;"	f
main	boosted_trees/data_download.py	/^def main(unused_argv):$/;"	f
main	boosted_trees/train_higgs.py	/^def main(_):$/;"	f
main	datasets/movielens.py	/^def main(_):$/;"	f
main	keras_application_models/benchmark_main.py	/^def main(_):$/;"	f
main	mnist/mnist.py	/^def main(_):$/;"	f
main	mnist/mnist_eager.py	/^def main(_):$/;"	f
main	mnist/mnist_tpu.py	/^def main(argv):$/;"	f
main	recommendation/ncf_estimator_main.py	/^def main(_):$/;"	f
main	recommendation/ncf_keras_main.py	/^def main(_):$/;"	f
main	resnet/cifar10_download_and_extract.py	/^def main(_):$/;"	f
main	resnet/cifar10_main.py	/^def main(_):$/;"	f
main	resnet/imagenet_main.py	/^def main(_):$/;"	f
main	resnet/keras/keras_cifar_main.py	/^def main(_):$/;"	f
main	resnet/keras/keras_imagenet_main.py	/^def main(_):$/;"	f
main	transformer/compute_bleu.py	/^def main(unused_argv):$/;"	f
main	transformer/data_download.py	/^def main(unused_argv):$/;"	f
main	transformer/transformer_main.py	/^def main(_):$/;"	f
main	transformer/translate.py	/^def main(unused_argv):$/;"	f
main	transformer/v2/transformer_main.py	/^def main(_):$/;"	f
main	utils/testing/reference_data.py	/^def main(argv, test_class):$/;"	f
main	wide_deep/census_dataset.py	/^def main(_):$/;"	f
main	wide_deep/census_main.py	/^def main(_):$/;"	f
main	wide_deep/movielens_dataset.py	/^def main(_):$/;"	f
main	wide_deep/movielens_main.py	/^def main(_):$/;"	f
make_dataset_iterator	utils/misc/distribution_utils.py	/^  def make_dataset_iterator(self, dataset):$/;"	f	function:_monkey_patch_dataset_method
make_dir	transformer/data_download.py	/^def make_dir(path):$/;"	f
make_estimator	mnist/mnist_test.py	/^def make_estimator():$/;"	f
make_eval_inputs_from_np_arrays	boosted_trees/train_higgs.py	/^def make_eval_inputs_from_np_arrays(features_np, label_np):$/;"	f
make_input_fn	recommendation/data_pipeline.py	/^  def make_input_fn(is_training):$/;"	m	class:DummyConstructor
make_input_fn	recommendation/data_pipeline.py	/^  def make_input_fn(self, batch_size):$/;"	m	class:DatasetManager
make_input_fn	recommendation/data_pipeline.py	/^  def make_input_fn(self, is_training):$/;"	m	class:BaseDataConstructor
make_inputs_from_np_arrays	boosted_trees/train_higgs.py	/^def make_inputs_from_np_arrays(features_np, label_np):$/;"	f
make_params	recommendation/data_test.py	/^  def make_params(self, train_epochs=1):$/;"	m	class:BaseTest
make_projection	resnet/layer_test.py	/^  def make_projection(self, filters_out, strides, data_format):$/;"	m	class:BaseTest
map	recommendation/popen_helper.py	/^  def map(self, func, iterable, chunksize=None):$/;"	m	class:FauxPool
map_data_for_transformer_fn	transformer/v2/data_pipeline.py	/^def map_data_for_transformer_fn(x, y):$/;"	f
mask_duplicates	recommendation/stat_utils.py	/^def mask_duplicates(x, axis=1):  # type: (np.ndarray, int) -> np.ndarray$/;"	f
match	transformer/utils/tokenizer.py	/^  def match(m):$/;"	f	function:_unescape_token
max_length	transformer/model/model_params.py	/^    max_length=256,  # Maximum number of tokens per example.$/;"	v
metric_fn	bert/run_classifier.py	/^  def metric_fn():$/;"	f	function:run_customized_training
metric_fn	mnist/mnist_tpu.py	/^def metric_fn(labels, logits):$/;"	f
metric_fn	recommendation/ncf_keras_main.py	/^def metric_fn(logits, dup_mask, params):$/;"	f
metric_fn	recommendation/neumf_model.py	/^  def metric_fn(top_k_tensor, ndcg_tensor, weight_tensor):$/;"	f	function:compute_eval_loss_and_metrics_helper
mnist_model_fn_helper	mnist/mnist_test.py	/^  def mnist_model_fn_helper(self, mode, multi_gpu=False):$/;"	m	class:Tests
mock_download	recommendation/data_test.py	/^def mock_download(*args, **kwargs):$/;"	f
mock_log	utils/logs/logger_test.py	/^    def mock_log(*args, **kwargs):$/;"	f	function:BaseBenchmarkLoggerTest.setUp
model_fn	mnist/mnist.py	/^def model_fn(features, labels, mode, params):$/;"	f
model_fn	mnist/mnist_tpu.py	/^def model_fn(features, labels, mode, params):$/;"	f
model_fn	transformer/transformer_main.py	/^def model_fn(features, labels, mode, params):$/;"	f
name_to_seed	utils/testing/reference_data.py	/^  def name_to_seed(name):$/;"	m	class:BaseTest
ncf_print	utils/logs/mlperf_helper.py	/^  def ncf_print(self, key, value=None, stack_offset=_STACK_OFFSET,$/;"	m	class:Logger
neumf_model_fn	recommendation/neumf_model.py	/^def neumf_model_fn(features, labels, mode, params):$/;"	f
num_heads	transformer/model/model_params.py	/^    num_heads=16,$/;"	v
num_heads	transformer/model/model_params.py	/^    num_heads=4,$/;"	v
num_heads	transformer/model/model_params.py	/^    num_heads=8,  # Number of heads to use in multi-headed attention.$/;"	v
num_hidden_layers	transformer/model/model_params.py	/^    num_hidden_layers=6,  # Number of layers in the encoder and decoder stacks.$/;"	v
on_batch_begin	resnet/keras/keras_common.py	/^  def on_batch_begin(self, batch, logs=None):$/;"	m	class:LearningRateBatchScheduler
on_batch_begin	utils/misc/keras_utils.py	/^  def on_batch_begin(self, batch, logs=None):$/;"	m	class:ProfilerCallback
on_batch_begin	utils/misc/keras_utils.py	/^  def on_batch_begin(self, batch, logs=None):$/;"	m	class:TimeHistory
on_batch_end	bert/benchmark/bert_benchmark.py	/^  def on_batch_end(self, batch, logs=None):$/;"	m	class:BenchmarkTimerCallback
on_batch_end	keras_application_models/model_callbacks.py	/^  def on_batch_end(self, batch, logs=None):$/;"	m	class:ExamplesPerSecondCallback
on_batch_end	keras_application_models/model_callbacks.py	/^  def on_batch_end(self, batch, logs=None):$/;"	m	class:LoggingMetricCallback
on_batch_end	utils/misc/keras_utils.py	/^  def on_batch_end(self, batch, logs=None):$/;"	m	class:ProfilerCallback
on_batch_end	utils/misc/keras_utils.py	/^  def on_batch_end(self, batch, logs=None):$/;"	m	class:TimeHistory
on_batch_start	bert/benchmark/bert_benchmark.py	/^  def on_batch_start(self, batch, logs=None):$/;"	m	class:BenchmarkTimerCallback
on_epoch_begin	recommendation/ncf_keras_main.py	/^  def on_epoch_begin(self, epoch, logs=None):$/;"	m	class:IncrementEpochCallback
on_epoch_begin	resnet/keras/keras_common.py	/^  def on_epoch_begin(self, epoch, logs=None):$/;"	m	class:LearningRateBatchScheduler
on_epoch_begin	transformer/v2/optimizer.py	/^  def on_epoch_begin(self, epoch, logs=None):$/;"	m	class:LearningRateScheduler
on_epoch_end	bert/model_saving_utils.py	/^  def on_epoch_end(self, epoch, logs=None):$/;"	m	class:BertModelCheckpoint
on_epoch_end	keras_application_models/model_callbacks.py	/^  def on_epoch_end(self, epoch, logs=None):$/;"	m	class:LoggingMetricCallback
on_epoch_end	recommendation/ncf_keras_main.py	/^  def on_epoch_end(self, epoch, logs=None):$/;"	m	class:CustomEarlyStopping
on_epoch_end	transformer/v2/optimizer.py	/^  def on_epoch_end(self, epoch, logs=None):$/;"	m	class:LearningRateScheduler
on_finish	utils/logs/logger.py	/^  def on_finish(self, status):$/;"	m	class:BaseBenchmarkLogger
on_finish	utils/logs/logger.py	/^  def on_finish(self, status):$/;"	m	class:BenchmarkBigQueryLogger
on_finish	utils/logs/logger.py	/^  def on_finish(self, status):$/;"	m	class:BenchmarkFileLogger
on_gcp	utils/logs/cloud_lib.py	/^def on_gcp():$/;"	f
on_train_batch_begin	transformer/v2/optimizer.py	/^  def on_train_batch_begin(self, batch, logs=None):$/;"	m	class:LearningRateScheduler
on_train_begin	keras_application_models/model_callbacks.py	/^  def on_train_begin(self, logs=None):$/;"	m	class:ExamplesPerSecondCallback
on_train_begin	utils/misc/keras_utils.py	/^  def on_train_begin(self, logs=None):$/;"	m	class:TimeHistory
on_train_end	recommendation/ncf_keras_main.py	/^  def on_train_end(self, logs=None):$/;"	m	class:CustomEarlyStopping
on_train_end	utils/misc/keras_utils.py	/^  def on_train_end(self, logs=None):$/;"	m	class:TimeHistory
optimizer_adam_beta1	transformer/model/model_params.py	/^    optimizer_adam_beta1=0.9,$/;"	v
optimizer_adam_beta2	transformer/model/model_params.py	/^    optimizer_adam_beta2=0.997,$/;"	v
optimizer_adam_epsilon	transformer/model/model_params.py	/^    optimizer_adam_epsilon=1e-09,$/;"	v
override_flags_and_set_envars_for_gpu_thread_pool	resnet/resnet_run_loop.py	/^def override_flags_and_set_envars_for_gpu_thread_pool(flags_obj):$/;"	f
pack_inputs	bert/modeling.py	/^def pack_inputs(inputs):$/;"	f
padded_accuracy	transformer/utils/metrics.py	/^def padded_accuracy(logits, labels):$/;"	f
padded_accuracy	transformer/v2/metrics.py	/^def padded_accuracy(logits, labels):$/;"	f
padded_accuracy_top5	transformer/utils/metrics.py	/^def padded_accuracy_top5(logits, labels):$/;"	f
padded_accuracy_top5	transformer/v2/metrics.py	/^def padded_accuracy_top5(logits, labels):$/;"	f
padded_accuracy_topk	transformer/utils/metrics.py	/^def padded_accuracy_topk(logits, labels, k):$/;"	f
padded_accuracy_topk	transformer/v2/metrics.py	/^def padded_accuracy_topk(logits, labels, k):$/;"	f
padded_cross_entropy_loss	transformer/utils/metrics.py	/^def padded_cross_entropy_loss(logits, labels, smoothing, vocab_size):$/;"	f
padded_cross_entropy_loss	transformer/v2/metrics.py	/^def padded_cross_entropy_loss(logits, labels, smoothing, vocab_size):$/;"	f
padded_neg_log_perplexity	transformer/utils/metrics.py	/^def padded_neg_log_perplexity(logits, labels, vocab_size):$/;"	f
padded_neg_log_perplexity	transformer/v2/metrics.py	/^def padded_neg_log_perplexity(logits, labels, vocab_size):$/;"	f
padded_sequence_accuracy	transformer/utils/metrics.py	/^def padded_sequence_accuracy(logits, labels):$/;"	f
padded_sequence_accuracy	transformer/v2/metrics.py	/^def padded_sequence_accuracy(logits, labels):$/;"	f
parse_csv	wide_deep/census_dataset.py	/^  def parse_csv(value):$/;"	f	function:input_fn
parse_flags	recommendation/ncf_common.py	/^def parse_flags(flags_obj):$/;"	f
parse_flags	utils/flags/core.py	/^def parse_flags(argv=None):$/;"	f
parse_line	utils/logs/mlperf_helper.py	/^def parse_line(line): # type: (str) -> typing.Optional[ParsedLine]$/;"	f
parse_record	resnet/cifar10_main.py	/^def parse_record(raw_record, is_training, dtype):$/;"	f
parse_record	resnet/imagenet_main.py	/^def parse_record(raw_record, is_training, dtype):$/;"	f
parse_record_keras	resnet/keras/keras_cifar_main.py	/^def parse_record_keras(raw_record, is_training, dtype):$/;"	f
parse_record_keras	resnet/keras/keras_imagenet_main.py	/^def parse_record_keras(raw_record, is_training, dtype):$/;"	f
parser	resnet/cifar10_download_and_extract.py	/^parser = argparse.ArgumentParser()$/;"	v
past_stop_threshold	utils/misc/model_helpers.py	/^def past_stop_threshold(stop_threshold, eval_metric):$/;"	f
per_replica_batch_size	utils/misc/distribution_utils.py	/^def per_replica_batch_size(batch_size, num_gpus):$/;"	f
permutation	recommendation/stat_utils.py	/^def permutation(args):$/;"	f
piecewise_lr	resnet/keras/keras_common.py	/^      def piecewise_lr(step):$/;"	f	function:PiecewiseConstantDecayWithWarmup._get_learning_rate
poly_rate_fn	resnet/resnet_run_loop.py	/^  def poly_rate_fn(global_step):$/;"	f	function:learning_rate_with_decay
predict	transformer/model/transformer.py	/^  def predict(self, encoder_outputs, encoder_decoder_attention_bias):$/;"	m	class:Transformer
predict	transformer/v2/transformer.py	/^  def predict(self, encoder_outputs, encoder_decoder_attention_bias, training):$/;"	m	class:Transformer
predict	transformer/v2/transformer_main.py	/^  def predict(self):$/;"	m	class:TransformerTask
predict_input_fn	mnist/mnist_tpu.py	/^def predict_input_fn(params):$/;"	f
predict_squad	bert/run_squad.py	/^def predict_squad(strategy, input_meta_data):$/;"	f
predict_squad_customized	bert/run_squad.py	/^def predict_squad_customized(strategy, input_meta_data, bert_config,$/;"	f
predict_step	bert/run_squad.py	/^    def predict_step(iterator):$/;"	f	function:predict_squad_customized
preprocess_eval_input	recommendation/ncf_keras_main.py	/^  def preprocess_eval_input(features):$/;"	f	function:_get_train_and_eval_data
preprocess_image	resnet/cifar10_main.py	/^def preprocess_image(image, is_training):$/;"	f
preprocess_image	resnet/imagenet_preprocessing.py	/^def preprocess_image(image_buffer, bbox, output_height, output_width,$/;"	f
preprocess_train_input	recommendation/ncf_keras_main.py	/^  def preprocess_train_input(features, labels):$/;"	f	function:_get_train_and_eval_data
pretrain_model	bert/bert_models.py	/^def pretrain_model(bert_config,$/;"	f
printable_text	bert/tokenization.py	/^def printable_text(text):$/;"	f
problem_metric_fn	transformer/utils/metrics.py	/^  def problem_metric_fn(*args):$/;"	f	function:_convert_to_eval_metric
process_feature	bert/squad_lib.py	/^  def process_feature(self, feature):$/;"	m	class:FeatureWriter
process_param	utils/logs/logger.py	/^  def process_param(name, value):$/;"	f	function:_collect_run_params
process_record_dataset	resnet/resnet_run_loop.py	/^def process_record_dataset(dataset,$/;"	f
projection_shortcut	resnet/layer_test.py	/^    def projection_shortcut(inputs):$/;"	f	function:BaseTest.make_projection
projection_shortcut	resnet/resnet_model.py	/^  def projection_shortcut(inputs):$/;"	f	function:block_layer
property_chars	transformer/compute_bleu.py	/^  def property_chars(self, prefix):$/;"	m	class:UnicodeRegex
purge	utils/data/file_io.py	/^  def purge(self):$/;"	m	class:_GarbageCollector
put	recommendation/data_pipeline.py	/^  def put(self, index, data):$/;"	m	class:DatasetManager
py2_test	utils/testing/scripts/presubmit.sh	/^py2_test() {$/;"	f
py3_test	utils/testing/scripts/presubmit.sh	/^py3_test() {$/;"	f
py_test	utils/testing/scripts/presubmit.sh	/^py_test() {$/;"	f
random_dataset	mnist/mnist_eager_test.py	/^def random_dataset():$/;"	f
random_int32	recommendation/stat_utils.py	/^def random_int32():$/;"	f
random_name	utils/misc/distribution_utils.py	/^  def random_name(self, size=10, chars=string.ascii_uppercase + string.digits):$/;"	m	class:SyntheticDataset
ratings_csv_to_dataframe	datasets/movielens.py	/^def ratings_csv_to_dataframe(data_dir, dataset):$/;"	f
read32	mnist/dataset.py	/^def read32(bytestream):$/;"	f
read_higgs_data	boosted_trees/train_higgs.py	/^def read_higgs_data(data_dir, train_start, train_count, eval_start, eval_count):$/;"	f
read_squad_examples	bert/squad_lib.py	/^def read_squad_examples(input_file, is_training, version_2_with_negative):$/;"	f
record_scalars	transformer/transformer_main.py	/^def record_scalars(metric_dict):$/;"	f
regenerate	resnet/layer_test.py	/^  def regenerate(self):$/;"	m	class:BaseTest
regenerate	utils/testing/reference_data.py	/^  def regenerate(self):$/;"	m	class:BaseTest
regenerate	utils/testing/reference_data_test.py	/^  def regenerate(self):$/;"	m	class:GoldenBaseTest
register	utils/data/file_io.py	/^  def register(self, filepath):$/;"	m	class:_GarbageCollector
register_key_flags_in_core	utils/flags/core.py	/^def register_key_flags_in_core(f):$/;"	f
relu_dropout	transformer/model/model_params.py	/^    relu_dropout=0.1,$/;"	v
repeat_dataset	transformer/utils/schedule.py	/^  def repeat_dataset(self):$/;"	m	class:Manager
replicated_step	bert/run_squad.py	/^      def replicated_step(inputs):$/;"	f	function:predict_squad_customized.predict_step
require_cloud_storage	utils/flags/_device.py	/^def require_cloud_storage(flag_names):$/;"	f
require_cloud_storage	utils/flags/core.py	/^require_cloud_storage = _device.require_cloud_storage$/;"	v
reshape	resnet/imagenet_test.py	/^    def reshape(shape):$/;"	f	function:BaseTest._tensor_shapes_helper
reshape_to_matrix	bert/modeling.py	/^  def reshape_to_matrix(self, input_tensor):$/;"	m	class:Attention
resnet	resnet/keras/resnet_cifar_model.py	/^def resnet(num_blocks, classes=10, training=None):$/;"	f
resnet10	resnet/keras/resnet_cifar_model.py	/^resnet10 = functools.partial(resnet, num_blocks=110)$/;"	v
resnet20	resnet/keras/resnet_cifar_model.py	/^resnet20 = functools.partial(resnet, num_blocks=3)$/;"	v
resnet32	resnet/keras/resnet_cifar_model.py	/^resnet32 = functools.partial(resnet, num_blocks=5)$/;"	v
resnet50	resnet/keras/resnet_model.py	/^def resnet50(num_classes, dtype='float32', batch_size=None):$/;"	f
resnet56	resnet/keras/resnet_cifar_model.py	/^resnet56 = functools.partial(resnet, num_blocks=9)$/;"	v
resnet_block	resnet/keras/resnet_cifar_model.py	/^def resnet_block(input_tensor,$/;"	f
resnet_main	resnet/resnet_run_loop.py	/^def resnet_main($/;"	f
resnet_model_fn	resnet/resnet_run_loop.py	/^def resnet_model_fn(features, labels, mode, model_class,$/;"	f
resnet_model_fn_helper	resnet/imagenet_test.py	/^  def resnet_model_fn_helper(self, mode, resnet_version, dtype):$/;"	m	class:BaseTest
rouge_2_fscore	transformer/utils/metrics.py	/^def rouge_2_fscore(logits, labels):$/;"	f
rouge_l_fscore	transformer/utils/metrics.py	/^def rouge_l_fscore(predictions, labels):$/;"	f
rouge_l_sentence_level	transformer/utils/metrics.py	/^def rouge_l_sentence_level(eval_sentences, ref_sentences):$/;"	f
rouge_n	transformer/utils/metrics.py	/^def rouge_n(eval_sentences, ref_sentences, n=2):$/;"	f
run	recommendation/data_pipeline.py	/^  def run(self):$/;"	m	class:BaseDataConstructor
run	recommendation/data_pipeline.py	/^  def run(self):$/;"	m	class:DummyConstructor
run	resnet/keras/keras_cifar_main.py	/^def run(flags_obj):$/;"	f
run	resnet/keras/keras_imagenet_main.py	/^def run(flags_obj):$/;"	f
run_bert	bert/run_classifier.py	/^def run_bert(strategy, input_meta_data):$/;"	f
run_bert_pretrain	bert/run_pretraining.py	/^def run_bert_pretrain(strategy):$/;"	f
run_census	wide_deep/census_main.py	/^def run_census(flags_obj):$/;"	f
run_cifar	resnet/cifar10_main.py	/^def run_cifar(flags_obj):$/;"	f
run_customized_training	bert/run_classifier.py	/^def run_customized_training(strategy,$/;"	f
run_customized_training	bert/run_pretraining.py	/^def run_customized_training(strategy,$/;"	f
run_customized_training_loop	bert/model_training_utils.py	/^def run_customized_training_loop($/;"	f
run_imagenet	resnet/imagenet_main.py	/^def run_imagenet(flags_obj):$/;"	f
run_keras_model_benchmark	keras_application_models/benchmark_main.py	/^def run_keras_model_benchmark(_):$/;"	f
run_loop	transformer/transformer_main.py	/^def run_loop($/;"	f
run_loop	wide_deep/wide_deep_run_loop.py	/^def run_loop(name, train_input_fn, eval_input_fn, model_column_fn,$/;"	f
run_mnist	mnist/mnist.py	/^def run_mnist(flags_obj):$/;"	f
run_mnist_eager	mnist/mnist_eager.py	/^def run_mnist_eager(flags_obj):$/;"	f
run_movie	wide_deep/movielens_main.py	/^def run_movie(flags_obj):$/;"	f
run_ncf	recommendation/ncf_estimator_main.py	/^def run_ncf(_):$/;"	f
run_ncf	recommendation/ncf_keras_main.py	/^def run_ncf(_):$/;"	f
run_synthetic	utils/testing/integration.py	/^def run_synthetic(main, tmp_root, extra_flags=None, synth=True, max_train=1):$/;"	f
run_transformer	transformer/transformer_main.py	/^def run_transformer(flags_obj):$/;"	f
search	transformer/model/beam_search.py	/^  def search(self, initial_ids, initial_cache):$/;"	m	class:SequenceBeamSearch
search	transformer/v2/beam_search.py	/^  def search(self, initial_ids, initial_cache):$/;"	m	class:SequenceBeamSearchV2
sequence_beam_search	transformer/model/beam_search.py	/^def sequence_beam_search($/;"	f
sequence_beam_search	transformer/v2/beam_search.py	/^def sequence_beam_search($/;"	f
serving_input_receiver_fn	boosted_trees/train_higgs.py	/^  def serving_input_receiver_fn():$/;"	f	function:_make_csv_serving_input_receiver_fn
serving_input_receiver_fn	utils/export/export.py	/^  def serving_input_receiver_fn():$/;"	f	function:build_tensor_serving_input_receiver_fn
setUp	benchmark/benchmark_uploader_test.py	/^  def setUp(self, mock_bigquery):$/;"	m	class:BigQueryUploaderTest
setUp	boosted_trees/train_higgs_test.py	/^  def setUp(self):$/;"	m	class:BaseTest
setUp	recommendation/data_test.py	/^  def setUp(self):$/;"	m	class:BaseTest
setUp	recommendation/ncf_test.py	/^  def setUp(self):$/;"	m	class:NcfTest
setUp	resnet/cifar10_test.py	/^  def setUp(self):$/;"	m	class:BaseTest
setUp	resnet/imagenet_test.py	/^  def setUp(self):$/;"	m	class:BaseTest
setUp	resnet/keras/keras_cifar_test.py	/^  def setUp(self):$/;"	m	class:KerasCifarTest
setUp	resnet/keras/keras_imagenet_test.py	/^  def setUp(self):$/;"	m	class:KerasImagenetTest
setUp	transformer/v2/transformer_main_test.py	/^  def setUp(self):$/;"	m	class:TransformerTaskTest
setUp	transformer/v2/transformer_test.py	/^  def setUp(self):$/;"	m	class:TransformerV2Test
setUp	utils/logs/hooks_test.py	/^  def setUp(self):$/;"	m	class:ExamplesPerSecondHookTest
setUp	utils/logs/logger_test.py	/^  def setUp(self):$/;"	m	class:BaseBenchmarkLoggerTest
setUp	utils/logs/logger_test.py	/^  def setUp(self):$/;"	m	class:BenchmarkBigQueryLoggerTest
setUp	utils/logs/logger_test.py	/^  def setUp(self):$/;"	m	class:BenchmarkFileLoggerTest
setUp	utils/logs/metric_hook_test.py	/^  def setUp(self):$/;"	m	class:LoggingMetricHookTest
setUp	wide_deep/census_test.py	/^  def setUp(self):$/;"	m	class:BaseTest
setUp	wide_deep/movielens_test.py	/^  def setUp(self):$/;"	m	class:BaseTest
setUpClass	boosted_trees/train_higgs_test.py	/^  def setUpClass(cls):  # pylint: disable=invalid-name$/;"	m	class:BaseTest
setUpClass	recommendation/ncf_test.py	/^  def setUpClass(cls):  # pylint: disable=invalid-name$/;"	m	class:NcfTest
setUpClass	resnet/cifar10_test.py	/^  def setUpClass(cls):  # pylint: disable=invalid-name$/;"	m	class:BaseTest
setUpClass	resnet/imagenet_test.py	/^  def setUpClass(cls):  # pylint: disable=invalid-name$/;"	m	class:BaseTest
setUpClass	resnet/keras/keras_cifar_test.py	/^  def setUpClass(cls):  # pylint: disable=invalid-name$/;"	m	class:KerasCifarTest
setUpClass	resnet/keras/keras_common_test.py	/^  def setUpClass(cls):  # pylint: disable=invalid-name$/;"	m	class:KerasCommonTests
setUpClass	resnet/keras/keras_imagenet_test.py	/^  def setUpClass(cls):  # pylint: disable=invalid-name$/;"	m	class:KerasImagenetTest
setUpClass	utils/flags/flags_test.py	/^  def setUpClass(cls):$/;"	m	class:BaseTester
setUpClass	utils/logs/logger_test.py	/^  def setUpClass(cls):  # pylint: disable=invalid-name$/;"	m	class:BenchmarkLoggerTest
setUpClass	wide_deep/census_test.py	/^  def setUpClass(cls):  # pylint: disable=invalid-name$/;"	m	class:BaseTest
setUpClass	wide_deep/movielens_test.py	/^  def setUpClass(cls):  # pylint: disable=invalid-name$/;"	m	class:BaseTest
set_config_v2	resnet/keras/keras_common.py	/^def set_config_v2():$/;"	f
set_cudnn_batchnorm_mode	resnet/keras/keras_common.py	/^def set_cudnn_batchnorm_mode():$/;"	f
set_defaults	utils/flags/core.py	/^def set_defaults(**kwargs):$/;"	f
set_gpu_thread_mode_and_count	resnet/keras/keras_common.py	/^def set_gpu_thread_mode_and_count(flags_obj):$/;"	f
set_ncf_root	utils/logs/mlperf_helper.py	/^  def set_ncf_root(self, path):$/;"	m	class:Logger
set_up_synthetic_data	utils/misc/distribution_utils.py	/^def set_up_synthetic_data():$/;"	f
shard_filename	transformer/data_download.py	/^def shard_filename(path, tag, shard_num, total_shards):$/;"	f
shuffle_records	transformer/data_download.py	/^def shuffle_records(fname):$/;"	f
single_iteration_eval_steps	transformer/utils/schedule.py	/^  def single_iteration_eval_steps(self):$/;"	m	class:Manager
single_iteration_train_steps	transformer/utils/schedule.py	/^  def single_iteration_train_steps(self):$/;"	m	class:Manager
split_heads	transformer/model/attention_layer.py	/^  def split_heads(self, x):$/;"	m	class:Attention
split_heads	transformer/v2/attention_layer.py	/^  def split_heads(self, x):$/;"	m	class:Attention
squad_loss_fn	bert/run_squad.py	/^def squad_loss_fn(start_positions,$/;"	f
squad_model	bert/bert_models.py	/^def squad_model(bert_config, max_seq_length, float_type, initializer=None):$/;"	f
start_construction	recommendation/data_pipeline.py	/^  def start_construction(self):$/;"	m	class:DatasetManager
static_batch	transformer/model/model_params.py	/^    static_batch=False,$/;"	v
step_fn	recommendation/ncf_keras_main.py	/^      def step_fn(inputs):$/;"	f	function:run_ncf.eval_step
step_fn	recommendation/ncf_keras_main.py	/^      def step_fn(inputs):$/;"	f	function:run_ncf.train_step
stop_loop	recommendation/data_pipeline.py	/^  def stop_loop(self):$/;"	m	class:BaseDataConstructor
stop_loop	recommendation/data_pipeline.py	/^  def stop_loop(self):$/;"	m	class:DummyConstructor
symbols_to_logits_fn	transformer/model/transformer.py	/^    def symbols_to_logits_fn(ids, i, cache):$/;"	f	function:Transformer._get_symbols_to_logits_fn
symbols_to_logits_fn	transformer/v2/transformer.py	/^    def symbols_to_logits_fn(ids, i, cache):$/;"	f	function:Transformer._get_symbols_to_logits_fn
tearDown	benchmark/benchmark_uploader_test.py	/^  def tearDown(self):$/;"	m	class:BigQueryUploaderTest
tearDown	recommendation/ncf_test.py	/^  def tearDown(self):$/;"	m	class:NcfTest
tearDown	resnet/cifar10_test.py	/^  def tearDown(self):$/;"	m	class:BaseTest
tearDown	resnet/imagenet_test.py	/^  def tearDown(self):$/;"	m	class:BaseTest
tearDown	resnet/keras/keras_cifar_test.py	/^  def tearDown(self):$/;"	m	class:KerasCifarTest
tearDown	resnet/keras/keras_imagenet_test.py	/^  def tearDown(self):$/;"	m	class:KerasImagenetTest
tearDown	utils/logs/logger_test.py	/^  def tearDown(self):$/;"	m	class:BaseBenchmarkLoggerTest
tearDown	utils/logs/logger_test.py	/^  def tearDown(self):$/;"	m	class:BenchmarkBigQueryLoggerTest
tearDown	utils/logs/logger_test.py	/^  def tearDown(self):$/;"	m	class:BenchmarkFileLoggerTest
tearDown	utils/logs/metric_hook_test.py	/^  def tearDown(self):$/;"	m	class:LoggingMetricHookTest
tensor_shapes_helper	resnet/imagenet_test.py	/^  def tensor_shapes_helper(self, resnet_size, resnet_version, with_gpu=False):$/;"	m	class:BaseTest
terminate	recommendation/popen_helper.py	/^  def terminate(self):$/;"	m	class:FauxPool
test	mnist/dataset.py	/^def test(directory):$/;"	f
test	mnist/mnist_eager.py	/^def test(model, dataset):$/;"	f
test_attention_layer	transformer/v2/transformer_layers_test.py	/^  def test_attention_layer(self):$/;"	m	class:TransformerLayersTest
test_basic_tokenizer_lower	bert/tokenization_test.py	/^  def test_basic_tokenizer_lower(self):$/;"	m	class:TokenizationTest
test_basic_tokenizer_no_lower	bert/tokenization_test.py	/^  def test_basic_tokenizer_no_lower(self):$/;"	m	class:TokenizationTest
test_batch_norm	resnet/layer_test.py	/^  def test_batch_norm(self):$/;"	m	class:BaseTest
test_batch_size	utils/misc/distribution_utils_test.py	/^  def test_batch_size(self):$/;"	m	class:PerReplicaBatchSizeTest
test_batch_size_with_remainder	utils/misc/distribution_utils_test.py	/^  def test_batch_size_with_remainder(self):$/;"	m	class:PerReplicaBatchSizeTest
test_benchmark_context	utils/logs/logger_test.py	/^  def test_benchmark_context(self, mock_config_benchmark_logger):$/;"	m	class:BenchmarkLoggerTest
test_benchmark_context_failure	utils/logs/logger_test.py	/^  def test_benchmark_context_failure(self, mock_config_benchmark_logger):$/;"	m	class:BenchmarkLoggerTest
test_benchmark_setting	utils/flags/flags_test.py	/^  def test_benchmark_setting(self):$/;"	m	class:BaseTester
test_bleu_different	transformer/compute_bleu_test.py	/^  def test_bleu_different(self):$/;"	m	class:ComputeBleuTest
test_bleu_same	transformer/compute_bleu_test.py	/^  def test_bleu_same(self):$/;"	m	class:ComputeBleuTest
test_bleu_same_different_case	transformer/compute_bleu_test.py	/^  def test_bleu_same_different_case(self):$/;"	m	class:ComputeBleuTest
test_bleu_tokenize	transformer/compute_bleu_test.py	/^  def test_bleu_tokenize(self):$/;"	m	class:ComputeBleuTest
test_block_0	resnet/layer_test.py	/^  def test_block_0(self):$/;"	m	class:BaseTest
test_block_1	resnet/layer_test.py	/^  def test_block_1(self):$/;"	m	class:BaseTest
test_block_2	resnet/layer_test.py	/^  def test_block_2(self):$/;"	m	class:BaseTest
test_block_3	resnet/layer_test.py	/^  def test_block_3(self):$/;"	m	class:BaseTest
test_block_4	resnet/layer_test.py	/^  def test_block_4(self):$/;"	m	class:BaseTest
test_block_5	resnet/layer_test.py	/^  def test_block_5(self):$/;"	m	class:BaseTest
test_block_6	resnet/layer_test.py	/^  def test_block_6(self):$/;"	m	class:BaseTest
test_block_7	resnet/layer_test.py	/^  def test_block_7(self):$/;"	m	class:BaseTest
test_booleans	utils/flags/flags_test.py	/^  def test_booleans(self):$/;"	m	class:BaseTester
test_build_stats	resnet/keras/keras_common_test.py	/^  def test_build_stats(self):$/;"	m	class:KerasCommonTests
test_build_stats_sparse	resnet/keras/keras_common_test.py	/^  def test_build_stats_sparse(self):$/;"	m	class:KerasCommonTests
test_build_tensor_serving_input_receiver_fn	utils/export/export_test.py	/^  def test_build_tensor_serving_input_receiver_fn(self):$/;"	m	class:ExportUtilsTest
test_build_tensor_serving_input_receiver_fn_batch_dtype	utils/export/export_test.py	/^  def test_build_tensor_serving_input_receiver_fn_batch_dtype(self):$/;"	m	class:ExportUtilsTest
test_chinese	bert/tokenization_test.py	/^  def test_chinese(self):$/;"	m	class:TokenizationTest
test_cifar10_end_to_end_synthetic_v1	resnet/cifar10_test.py	/^  def test_cifar10_end_to_end_synthetic_v1(self):$/;"	m	class:BaseTest
test_cifar10_end_to_end_synthetic_v2	resnet/cifar10_test.py	/^  def test_cifar10_end_to_end_synthetic_v2(self):$/;"	m	class:BaseTest
test_cifar10_model_fn_eval_mode_v1	resnet/cifar10_test.py	/^  def test_cifar10_model_fn_eval_mode_v1(self):$/;"	m	class:BaseTest
test_cifar10_model_fn_eval_mode_v2	resnet/cifar10_test.py	/^  def test_cifar10_model_fn_eval_mode_v2(self):$/;"	m	class:BaseTest
test_cifar10_model_fn_predict_mode_v1	resnet/cifar10_test.py	/^  def test_cifar10_model_fn_predict_mode_v1(self):$/;"	m	class:BaseTest
test_cifar10_model_fn_predict_mode_v2	resnet/cifar10_test.py	/^  def test_cifar10_model_fn_predict_mode_v2(self):$/;"	m	class:BaseTest
test_cifar10_model_fn_train_mode_v1	resnet/cifar10_test.py	/^  def test_cifar10_model_fn_train_mode_v1(self):$/;"	m	class:BaseTest
test_cifar10_model_fn_trainmode__v2	resnet/cifar10_test.py	/^  def test_cifar10_model_fn_trainmode__v2(self):$/;"	m	class:BaseTest
test_cifar10model_shape_v1	resnet/cifar10_test.py	/^  def test_cifar10model_shape_v1(self):$/;"	m	class:BaseTest
test_cifar10model_shape_v2	resnet/cifar10_test.py	/^  def test_cifar10model_shape_v2(self):$/;"	m	class:BaseTest
test_collect_gpu_info	utils/logs/logger_test.py	/^  def test_collect_gpu_info(self):$/;"	m	class:BenchmarkFileLoggerTest
test_collect_memory_info	utils/logs/logger_test.py	/^  def test_collect_memory_info(self):$/;"	m	class:BenchmarkFileLoggerTest
test_collect_run_params	utils/logs/logger_test.py	/^  def test_collect_run_params(self):$/;"	m	class:BenchmarkFileLoggerTest
test_collect_tensorflow_environment_variables	utils/logs/logger_test.py	/^  def test_collect_tensorflow_environment_variables(self):$/;"	m	class:BenchmarkFileLoggerTest
test_collect_tensorflow_info	utils/logs/logger_test.py	/^  def test_collect_tensorflow_info(self):$/;"	m	class:BenchmarkFileLoggerTest
test_config_base_benchmark_logger	utils/logs/logger_test.py	/^  def test_config_base_benchmark_logger(self):$/;"	m	class:BenchmarkLoggerTest
test_config_benchmark_bigquery_logger	utils/logs/logger_test.py	/^  def test_config_benchmark_bigquery_logger(self, mock_bigquery_client):$/;"	m	class:BenchmarkLoggerTest
test_config_benchmark_file_logger	utils/logs/logger_test.py	/^  def test_config_benchmark_file_logger(self):$/;"	m	class:BenchmarkLoggerTest
test_convert_tokens_to_ids	bert/tokenization_test.py	/^  def test_convert_tokens_to_ids(self):$/;"	m	class:TokenizationTest
test_count_and_gen_subtokens	transformer/utils/tokenizer_test.py	/^  def test_count_and_gen_subtokens(self):$/;"	m	class:StringHelperTest
test_create_logging_dir	utils/logs/logger_test.py	/^  def test_create_logging_dir(self):$/;"	m	class:BenchmarkFileLoggerTest
test_create_model_not_train	transformer/v2/transformer_test.py	/^  def test_create_model_not_train(self):$/;"	m	class:TransformerV2Test
test_create_model_train	transformer/v2/transformer_test.py	/^  def test_create_model_train(self):$/;"	m	class:TransformerV2Test
test_dataset_input_fn	resnet/cifar10_test.py	/^  def test_dataset_input_fn(self):$/;"	m	class:BaseTest
test_decode	transformer/utils/tokenizer_test.py	/^  def test_decode(self):$/;"	m	class:SubtokenizerTest
test_default_setting	utils/flags/flags_test.py	/^  def test_default_setting(self):$/;"	m	class:BaseTester
test_dense	utils/testing/reference_data_test.py	/^  def test_dense(self):$/;"	m	class:GoldenBaseTest
test_embedding_0	utils/accelerator/tpu_test.py	/^  def test_embedding_0(self):$/;"	m	class:TPUBaseTester
test_embedding_1	utils/accelerator/tpu_test.py	/^  def test_embedding_1(self):$/;"	m	class:TPUBaseTester
test_embedding_2	utils/accelerator/tpu_test.py	/^  def test_embedding_2(self):$/;"	m	class:TPUBaseTester
test_embedding_shared_weights	transformer/v2/transformer_layers_test.py	/^  def test_embedding_shared_weights(self):$/;"	m	class:TransformerLayersTest
test_encode	transformer/utils/tokenizer_test.py	/^  def test_encode(self):$/;"	m	class:SubtokenizerTest
test_end_to_end	boosted_trees/train_higgs_test.py	/^  def test_end_to_end(self):$/;"	m	class:BaseTest
test_end_to_end_1_gpu	resnet/keras/keras_cifar_test.py	/^  def test_end_to_end_1_gpu(self):$/;"	m	class:KerasCifarTest
test_end_to_end_1_gpu	resnet/keras/keras_imagenet_test.py	/^  def test_end_to_end_1_gpu(self):$/;"	m	class:KerasImagenetTest
test_end_to_end_2_gpu	resnet/keras/keras_cifar_test.py	/^  def test_end_to_end_2_gpu(self):$/;"	m	class:KerasCifarTest
test_end_to_end_2_gpu	resnet/keras/keras_imagenet_test.py	/^  def test_end_to_end_2_gpu(self):$/;"	m	class:KerasImagenetTest
test_end_to_end_2_gpu_fp16	resnet/keras/keras_imagenet_test.py	/^  def test_end_to_end_2_gpu_fp16(self):$/;"	m	class:KerasImagenetTest
test_end_to_end_bisection	recommendation/data_test.py	/^  def test_end_to_end_bisection(self):$/;"	m	class:BaseTest
test_end_to_end_deep	wide_deep/census_test.py	/^  def test_end_to_end_deep(self):$/;"	m	class:BaseTest
test_end_to_end_deep	wide_deep/movielens_test.py	/^  def test_end_to_end_deep(self):$/;"	m	class:BaseTest
test_end_to_end_estimator	recommendation/ncf_test.py	/^  def test_end_to_end_estimator(self):$/;"	m	class:NcfTest
test_end_to_end_estimator_mlperf	recommendation/ncf_test.py	/^  def test_end_to_end_estimator_mlperf(self):$/;"	m	class:NcfTest
test_end_to_end_graph_1_gpu	resnet/keras/keras_cifar_test.py	/^  def test_end_to_end_graph_1_gpu(self):$/;"	m	class:KerasCifarTest
test_end_to_end_graph_1_gpu	resnet/keras/keras_imagenet_test.py	/^  def test_end_to_end_graph_1_gpu(self):$/;"	m	class:KerasImagenetTest
test_end_to_end_graph_2_gpu	resnet/keras/keras_cifar_test.py	/^  def test_end_to_end_graph_2_gpu(self):$/;"	m	class:KerasCifarTest
test_end_to_end_graph_2_gpu	resnet/keras/keras_imagenet_test.py	/^  def test_end_to_end_graph_2_gpu(self):$/;"	m	class:KerasImagenetTest
test_end_to_end_graph_no_dist_strat	resnet/keras/keras_cifar_test.py	/^  def test_end_to_end_graph_no_dist_strat(self):$/;"	m	class:KerasCifarTest
test_end_to_end_graph_no_dist_strat	resnet/keras/keras_imagenet_test.py	/^  def test_end_to_end_graph_no_dist_strat(self):$/;"	m	class:KerasImagenetTest
test_end_to_end_graph_xla_2_gpu	resnet/keras/keras_imagenet_test.py	/^  def test_end_to_end_graph_xla_2_gpu(self):$/;"	m	class:KerasImagenetTest
test_end_to_end_keras	recommendation/ncf_test.py	/^  def test_end_to_end_keras(self):$/;"	m	class:NcfTest
test_end_to_end_keras_1_gpu	recommendation/ncf_test.py	/^  def test_end_to_end_keras_1_gpu(self):$/;"	m	class:NcfTest
test_end_to_end_keras_2_gpu	recommendation/ncf_test.py	/^  def test_end_to_end_keras_2_gpu(self):$/;"	m	class:NcfTest
test_end_to_end_keras_mlperf	recommendation/ncf_test.py	/^  def test_end_to_end_keras_mlperf(self):$/;"	m	class:NcfTest
test_end_to_end_materialized	recommendation/data_test.py	/^  def test_end_to_end_materialized(self):$/;"	m	class:BaseTest
test_end_to_end_no_dist_strat	resnet/keras/keras_cifar_test.py	/^  def test_end_to_end_no_dist_strat(self):$/;"	m	class:KerasCifarTest
test_end_to_end_no_dist_strat	resnet/keras/keras_imagenet_test.py	/^  def test_end_to_end_no_dist_strat(self):$/;"	m	class:KerasImagenetTest
test_end_to_end_wide	wide_deep/census_test.py	/^  def test_end_to_end_wide(self):$/;"	m	class:BaseTest
test_end_to_end_wide_deep	wide_deep/census_test.py	/^  def test_end_to_end_wide_deep(self):$/;"	m	class:BaseTest
test_end_to_end_with_export	boosted_trees/train_higgs_test.py	/^  def test_end_to_end_with_export(self):$/;"	m	class:BaseTest
test_end_to_end_xla_2_gpu	resnet/keras/keras_imagenet_test.py	/^  def test_end_to_end_xla_2_gpu(self):$/;"	m	class:KerasImagenetTest
test_end_to_end_xla_2_gpu_fp16	resnet/keras/keras_imagenet_test.py	/^  def test_end_to_end_xla_2_gpu_fp16(self):$/;"	m	class:KerasImagenetTest
test_epoch_basis	transformer/utils/schedule_test.py	/^  def test_epoch_basis(self):$/;"	m	class:ScheduleBaseTester
test_epoch_basis_tpu	transformer/utils/schedule_test.py	/^  def test_epoch_basis_tpu(self):$/;"	m	class:ScheduleBaseTester
test_escape_token	transformer/utils/tokenizer_test.py	/^  def test_escape_token(self):$/;"	m	class:StringHelperTest
test_eval	transformer/v2/transformer_main_test.py	/^  def test_eval(self):$/;"	m	class:TransformerTaskTest
test_evaluate	mnist/mnist_eager_test.py	/^  def test_evaluate(self):$/;"	m	class:MNISTTest
test_evaluate_with_defun	mnist/mnist_eager_test.py	/^  def test_evaluate_with_defun(self):$/;"	m	class:MNISTTest
test_examples_per_sec_every_1_secs	utils/logs/hooks_test.py	/^  def test_examples_per_sec_every_1_secs(self):$/;"	m	class:ExamplesPerSecondHookTest
test_examples_per_sec_every_1_steps	utils/logs/hooks_test.py	/^  def test_examples_per_sec_every_1_steps(self):$/;"	m	class:ExamplesPerSecondHookTest
test_examples_per_sec_every_1_steps_with_warm_steps	utils/logs/hooks_test.py	/^  def test_examples_per_sec_every_1_steps_with_warm_steps(self):$/;"	m	class:ExamplesPerSecondHookTest
test_examples_per_sec_every_5_secs	utils/logs/hooks_test.py	/^  def test_examples_per_sec_every_5_secs(self):$/;"	m	class:ExamplesPerSecondHookTest
test_examples_per_sec_every_5_steps	utils/logs/hooks_test.py	/^  def test_examples_per_sec_every_5_steps(self):$/;"	m	class:ExamplesPerSecondHookTest
test_examples_per_sec_every_5_steps_with_warm_steps	utils/logs/hooks_test.py	/^  def test_examples_per_sec_every_5_steps_with_warm_steps(self):$/;"	m	class:ExamplesPerSecondHookTest
test_expand_to_beam_size	transformer/model/beam_search_test.py	/^  def test_expand_to_beam_size(self):$/;"	m	class:BeamSearchHelperTests
test_feed_forward_network	transformer/v2/transformer_layers_test.py	/^  def test_feed_forward_network(self):$/;"	m	class:TransformerLayersTest
test_filter_and_bucket_subtokens	transformer/utils/tokenizer_test.py	/^  def test_filter_and_bucket_subtokens(self):$/;"	m	class:StringHelperTest
test_flatten_beam_dim	transformer/model/beam_search_test.py	/^  def test_flatten_beam_dim(self):$/;"	m	class:BeamSearchHelperTests
test_fresh_randomness_bisection	recommendation/data_test.py	/^  def test_fresh_randomness_bisection(self):$/;"	m	class:BaseTest
test_fresh_randomness_materialized	recommendation/data_test.py	/^  def test_fresh_randomness_materialized(self):$/;"	m	class:BaseTest
test_full_tokenizer	bert/tokenization_test.py	/^  def test_full_tokenizer(self):$/;"	m	class:TokenizationTest
test_gather_beams	transformer/model/beam_search_test.py	/^  def test_gather_beams(self):$/;"	m	class:BeamSearchHelperTests
test_gather_topk_beams	transformer/model/beam_search_test.py	/^  def test_gather_topk_beams(self):$/;"	m	class:BeamSearchHelperTests
test_gen_new_subtoken_list	transformer/utils/tokenizer_test.py	/^  def test_gen_new_subtoken_list(self):$/;"	m	class:StringHelperTest
test_generate_alphabet_dict	transformer/utils/tokenizer_test.py	/^  def test_generate_alphabet_dict(self):$/;"	m	class:StringHelperTest
test_generate_nested_data	utils/misc/model_helpers_test.py	/^  def test_generate_nested_data(self):$/;"	m	class:SyntheticDataTest
test_generate_only_input_data	utils/misc/model_helpers_test.py	/^  def test_generate_only_input_data(self):$/;"	m	class:SyntheticDataTest
test_generate_subtokens	transformer/utils/tokenizer_test.py	/^  def test_generate_subtokens(self):$/;"	m	class:StringHelperTest
test_generate_synethetic_data	utils/misc/model_helpers_test.py	/^  def test_generate_synethetic_data(self):$/;"	m	class:SyntheticDataTest
test_get_decoder_self_attention_bias	transformer/model/model_utils_test.py	/^  def test_get_decoder_self_attention_bias(self):$/;"	m	class:ModelUtilsTest
test_get_default_benchmark_logger	utils/logs/logger_test.py	/^  def test_get_default_benchmark_logger(self):$/;"	m	class:BenchmarkLoggerTest
test_get_logging_metric_hook	utils/logs/hooks_helper_test.py	/^  def test_get_logging_metric_hook(self):$/;"	m	class:BaseTest
test_get_nondefault_flags_as_str	utils/flags/flags_test.py	/^  def test_get_nondefault_flags_as_str(self):$/;"	m	class:BaseTester
test_get_padding	transformer/model/model_utils_test.py	/^  def test_get_padding(self):$/;"	m	class:ModelUtilsTest
test_get_padding_bias	transformer/model/model_utils_test.py	/^  def test_get_padding_bias(self):$/;"	m	class:ModelUtilsTest
test_get_shape_keep_last_dim	transformer/model/beam_search_test.py	/^  def test_get_shape_keep_last_dim(self):$/;"	m	class:BeamSearchHelperTests
test_get_train_hooks_examples_per_second_hook	utils/logs/hooks_helper_test.py	/^  def test_get_train_hooks_examples_per_second_hook(self):$/;"	m	class:BaseTest
test_get_train_hooks_logging_tensor_hook	utils/logs/hooks_helper_test.py	/^  def test_get_train_hooks_logging_tensor_hook(self):$/;"	m	class:BaseTest
test_get_train_hooks_profiler_hook	utils/logs/hooks_helper_test.py	/^  def test_get_train_hooks_profiler_hook(self):$/;"	m	class:BaseTest
test_global_step_not_found	utils/logs/metric_hook_test.py	/^  def test_global_step_not_found(self):$/;"	m	class:LoggingMetricHookTest
test_hit_rate_and_ndcg	recommendation/ncf_test.py	/^  def test_hit_rate_and_ndcg(self):$/;"	m	class:NcfTest
test_illegal_args	utils/logs/metric_hook_test.py	/^  def test_illegal_args(self):$/;"	m	class:LoggingMetricHookTest
test_imagenet_end_to_end_synthetic_v1	resnet/imagenet_test.py	/^  def test_imagenet_end_to_end_synthetic_v1(self):$/;"	m	class:BaseTest
test_imagenet_end_to_end_synthetic_v1_huge	resnet/imagenet_test.py	/^  def test_imagenet_end_to_end_synthetic_v1_huge(self):$/;"	m	class:BaseTest
test_imagenet_end_to_end_synthetic_v1_tiny	resnet/imagenet_test.py	/^  def test_imagenet_end_to_end_synthetic_v1_tiny(self):$/;"	m	class:BaseTest
test_imagenet_end_to_end_synthetic_v2	resnet/imagenet_test.py	/^  def test_imagenet_end_to_end_synthetic_v2(self):$/;"	m	class:BaseTest
test_imagenet_end_to_end_synthetic_v2_huge	resnet/imagenet_test.py	/^  def test_imagenet_end_to_end_synthetic_v2_huge(self):$/;"	m	class:BaseTest
test_imagenet_end_to_end_synthetic_v2_tiny	resnet/imagenet_test.py	/^  def test_imagenet_end_to_end_synthetic_v2_tiny(self):$/;"	m	class:BaseTest
test_imagenetmodel_shape_v1	resnet/imagenet_test.py	/^  def test_imagenetmodel_shape_v1(self):$/;"	m	class:BaseTest
test_imagenetmodel_shape_v2	resnet/imagenet_test.py	/^  def test_imagenetmodel_shape_v2(self):$/;"	m	class:BaseTest
test_incorrectness_function	utils/testing/reference_data_test.py	/^  def test_incorrectness_function(self):$/;"	m	class:GoldenBaseTest
test_input_fn	wide_deep/census_test.py	/^  def test_input_fn(self):$/;"	m	class:BaseTest
test_input_fn	wide_deep/movielens_test.py	/^  def test_input_fn(self):$/;"	m	class:BaseTest
test_insert_run_status	benchmark/benchmark_uploader_test.py	/^  def test_insert_run_status(self):$/;"	m	class:BigQueryUploaderTest
test_is_control	bert/tokenization_test.py	/^  def test_is_control(self):$/;"	m	class:TokenizationTest
test_is_punctuation	bert/tokenization_test.py	/^  def test_is_punctuation(self):$/;"	m	class:TokenizationTest
test_is_whitespace	bert/tokenization_test.py	/^  def test_is_whitespace(self):$/;"	m	class:TokenizationTest
test_join_tokens_to_string	transformer/utils/tokenizer_test.py	/^  def test_join_tokens_to_string(self):$/;"	m	class:StringHelperTest
test_large_rows_large_core	utils/data/file_io_test.py	/^  def test_large_rows_large_core(self):$/;"	m	class:BaseTest
test_large_rows_low_core	utils/data/file_io_test.py	/^  def test_large_rows_low_core(self):$/;"	m	class:BaseTest
test_large_rows_medium_core	utils/data/file_io_test.py	/^  def test_large_rows_medium_core(self):$/;"	m	class:BaseTest
test_list_to_index_dict	transformer/utils/tokenizer_test.py	/^  def test_list_to_index_dict(self):$/;"	m	class:StringHelperTest
test_log_evaluation_result	utils/logs/logger_test.py	/^  def test_log_evaluation_result(self):$/;"	m	class:BenchmarkFileLoggerTest
test_log_evaluation_result_with_invalid_type	utils/logs/logger_test.py	/^  def test_log_evaluation_result_with_invalid_type(self):$/;"	m	class:BenchmarkFileLoggerTest
test_log_metric	utils/logs/logger_test.py	/^  def test_log_metric(self):$/;"	m	class:BaseBenchmarkLoggerTest
test_log_metric	utils/logs/logger_test.py	/^  def test_log_metric(self):$/;"	m	class:BenchmarkBigQueryLoggerTest
test_log_metric	utils/logs/logger_test.py	/^  def test_log_metric(self):$/;"	m	class:BenchmarkFileLoggerTest
test_log_multiple_metrics	utils/logs/logger_test.py	/^  def test_log_multiple_metrics(self):$/;"	m	class:BenchmarkFileLoggerTest
test_log_non_number_value	utils/logs/logger_test.py	/^  def test_log_non_number_value(self):$/;"	m	class:BenchmarkFileLoggerTest
test_log_run_info	utils/logs/logger_test.py	/^  def test_log_run_info(self, mock_gather_run_info):$/;"	m	class:BenchmarkBigQueryLoggerTest
test_log_run_info	utils/logs/logger_test.py	/^  def test_log_run_info(self, mock_gather_run_info):$/;"	m	class:BenchmarkFileLoggerTest
test_log_tensors	utils/logs/metric_hook_test.py	/^  def test_log_tensors(self):$/;"	m	class:LoggingMetricHookTest
test_loss_layer	transformer/v2/transformer_layers_test.py	/^  def test_loss_layer(self):$/;"	m	class:TransformerLayersTest
test_make_inputs_from_np_arrays	boosted_trees/train_higgs_test.py	/^  def test_make_inputs_from_np_arrays(self):$/;"	m	class:BaseTest
test_masking_0	utils/accelerator/tpu_test.py	/^  def test_masking_0(self):$/;"	m	class:TPUBaseTester
test_masking_1	utils/accelerator/tpu_test.py	/^  def test_masking_1(self):$/;"	m	class:TPUBaseTester
test_masking_2	utils/accelerator/tpu_test.py	/^  def test_masking_2(self):$/;"	m	class:TPUBaseTester
test_metric_layer	transformer/v2/transformer_layers_test.py	/^  def test_metric_layer(self):$/;"	m	class:TransformerLayersTest
test_mirrored_strategy	utils/misc/distribution_utils_test.py	/^  def test_mirrored_strategy(self):$/;"	m	class:GetDistributionStrategyTest
test_mlperf_log_pip_version	utils/logs/mlperf_helper.py	/^    def test_mlperf_log_pip_version():$/;"	f	function:get_mlperf_log
test_mnist	mnist/mnist_test.py	/^  def test_mnist(self):$/;"	m	class:Tests
test_mnist_model_fn_eval_mode	mnist/mnist_test.py	/^  def test_mnist_model_fn_eval_mode(self):$/;"	m	class:Tests
test_mnist_model_fn_predict_mode	mnist/mnist_test.py	/^  def test_mnist_model_fn_predict_mode(self):$/;"	m	class:Tests
test_mnist_model_fn_train_mode	mnist/mnist_test.py	/^  def test_mnist_model_fn_train_mode(self):$/;"	m	class:Tests
test_mnist_model_fn_train_mode_multi_gpu	mnist/mnist_test.py	/^  def test_mnist_model_fn_train_mode_multi_gpu(self):$/;"	m	class:Tests
test_mutual_exclusivity	transformer/utils/schedule_test.py	/^  def test_mutual_exclusivity(self):$/;"	m	class:ScheduleBaseTester
test_name	resnet/layer_test.py	/^  def test_name(self):$/;"	m	class:BaseTest
test_name	utils/testing/reference_data.py	/^  def test_name(self):$/;"	m	class:BaseTest
test_name	utils/testing/reference_data_test.py	/^  def test_name(self):$/;"	m	class:GoldenBaseTest
test_not_on_gcp	utils/logs/cloud_lib_test.py	/^  def test_not_on_gcp(self, mock_requests_get):$/;"	m	class:CloudLibTest
test_on_finish	utils/logs/logger_test.py	/^  def test_on_finish(self):$/;"	m	class:BenchmarkBigQueryLoggerTest
test_on_gcp	utils/logs/cloud_lib_test.py	/^  def test_on_gcp(self, mock_requests_get):$/;"	m	class:CloudLibTest
test_one_device_strategy_cpu	utils/misc/distribution_utils_test.py	/^  def test_one_device_strategy_cpu(self):$/;"	m	class:GetDistributionStrategyTest
test_one_device_strategy_gpu	utils/misc/distribution_utils_test.py	/^  def test_one_device_strategy_gpu(self):$/;"	m	class:GetDistributionStrategyTest
test_parse_dtype_info	utils/flags/flags_test.py	/^  def test_parse_dtype_info(self):$/;"	m	class:BaseTester
test_past_stop_threshold	utils/misc/model_helpers_test.py	/^  def test_past_stop_threshold(self):$/;"	m	class:PastStopThresholdTest
test_past_stop_threshold_none_false	utils/misc/model_helpers_test.py	/^  def test_past_stop_threshold_none_false(self):$/;"	m	class:PastStopThresholdTest
test_past_stop_threshold_not_number	utils/misc/model_helpers_test.py	/^  def test_past_stop_threshold_not_number(self):$/;"	m	class:PastStopThresholdTest
test_predict	transformer/v2/transformer_main_test.py	/^  def test_predict(self):$/;"	m	class:TransformerTaskTest
test_preprocessing	recommendation/data_test.py	/^  def test_preprocessing(self):$/;"	m	class:BaseTest
test_print_at_end_only	utils/logs/metric_hook_test.py	/^  def test_print_at_end_only(self):$/;"	m	class:LoggingMetricHookTest
test_print_every_n_secs	utils/logs/metric_hook_test.py	/^  def test_print_every_n_secs(self):$/;"	m	class:LoggingMetricHookTest
test_print_every_n_secs_and_end	utils/logs/metric_hook_test.py	/^  def test_print_every_n_secs_and_end(self):$/;"	m	class:LoggingMetricHookTest
test_print_every_n_steps	utils/logs/metric_hook_test.py	/^  def test_print_every_n_steps(self):$/;"	m	class:LoggingMetricHookTest
test_print_every_n_steps_and_end	utils/logs/metric_hook_test.py	/^  def test_print_every_n_steps_and_end(self):$/;"	m	class:LoggingMetricHookTest
test_raise_in_both_secs_and_steps	utils/logs/hooks_test.py	/^  def test_raise_in_both_secs_and_steps(self):$/;"	m	class:ExamplesPerSecondHookTest
test_raise_in_invalid_names	utils/logs/hooks_helper_test.py	/^  def test_raise_in_invalid_names(self):$/;"	m	class:BaseTest
test_raise_in_non_list_names	utils/logs/hooks_helper_test.py	/^  def test_raise_in_non_list_names(self):$/;"	m	class:BaseTest
test_raise_in_none_secs_and_steps	utils/logs/hooks_test.py	/^  def test_raise_in_none_secs_and_steps(self):$/;"	m	class:ExamplesPerSecondHookTest
test_read_higgs_data	boosted_trees/train_higgs_test.py	/^  def test_read_higgs_data(self):$/;"	m	class:BaseTest
test_resnet_model_fn_eval_mode_v1	resnet/imagenet_test.py	/^  def test_resnet_model_fn_eval_mode_v1(self):$/;"	m	class:BaseTest
test_resnet_model_fn_eval_mode_v2	resnet/imagenet_test.py	/^  def test_resnet_model_fn_eval_mode_v2(self):$/;"	m	class:BaseTest
test_resnet_model_fn_predict_mode_v1	resnet/imagenet_test.py	/^  def test_resnet_model_fn_predict_mode_v1(self):$/;"	m	class:BaseTest
test_resnet_model_fn_predict_mode_v2	resnet/imagenet_test.py	/^  def test_resnet_model_fn_predict_mode_v2(self):$/;"	m	class:BaseTest
test_resnet_model_fn_train_mode_v1	resnet/imagenet_test.py	/^  def test_resnet_model_fn_train_mode_v1(self):$/;"	m	class:BaseTest
test_resnet_model_fn_train_mode_v2	resnet/imagenet_test.py	/^  def test_resnet_model_fn_train_mode_v2(self):$/;"	m	class:BaseTest
test_serialize_deserialize_0	utils/data/file_io_test.py	/^  def test_serialize_deserialize_0(self):$/;"	m	class:BaseTest
test_serialize_deserialize_1	utils/data/file_io_test.py	/^  def test_serialize_deserialize_1(self):$/;"	m	class:BaseTest
test_serialize_deserialize_2	utils/data/file_io_test.py	/^  def test_serialize_deserialize_2(self):$/;"	m	class:BaseTest
test_shape_list	transformer/model/beam_search_test.py	/^  def test_shape_list(self):$/;"	m	class:BeamSearchHelperTests
test_small_rows_large_core	utils/data/file_io_test.py	/^  def test_small_rows_large_core(self):$/;"	m	class:BaseTest
test_small_rows_low_core	utils/data/file_io_test.py	/^  def test_small_rows_low_core(self):$/;"	m	class:BaseTest
test_small_rows_medium_core	utils/data/file_io_test.py	/^  def test_small_rows_medium_core(self):$/;"	m	class:BaseTest
test_split_string_to_tokens	transformer/utils/tokenizer_test.py	/^  def test_split_string_to_tokens(self):$/;"	m	class:StringHelperTest
test_split_token_to_subtokens	transformer/utils/tokenizer_test.py	/^  def test_split_token_to_subtokens(self):$/;"	m	class:StringHelperTest
test_step	bert/model_training_utils.py	/^      def test_step(iterator):$/;"	f	function:run_customized_training_loop
test_step_basis	transformer/utils/schedule_test.py	/^  def test_step_basis(self):$/;"	m	class:ScheduleBaseTester
test_step_basis_tpu	transformer/utils/schedule_test.py	/^  def test_step_basis_tpu(self):$/;"	m	class:ScheduleBaseTester
test_subtoken_ids_to_tokens	transformer/utils/tokenizer_test.py	/^  def test_subtoken_ids_to_tokens(self):$/;"	m	class:SubtokenizerTest
test_tensor_name_error	utils/testing/reference_data_test.py	/^  def test_tensor_name_error(self):$/;"	m	class:GoldenBaseTest
test_tensor_shape_error	utils/testing/reference_data_test.py	/^  def test_tensor_shape_error(self):$/;"	m	class:GoldenBaseTest
test_tensor_shapes_resnet_101_v1	resnet/imagenet_test.py	/^  def test_tensor_shapes_resnet_101_v1(self):$/;"	m	class:BaseTest
test_tensor_shapes_resnet_101_v2	resnet/imagenet_test.py	/^  def test_tensor_shapes_resnet_101_v2(self):$/;"	m	class:BaseTest
test_tensor_shapes_resnet_101_with_gpu_v1	resnet/imagenet_test.py	/^  def test_tensor_shapes_resnet_101_with_gpu_v1(self):$/;"	m	class:BaseTest
test_tensor_shapes_resnet_101_with_gpu_v2	resnet/imagenet_test.py	/^  def test_tensor_shapes_resnet_101_with_gpu_v2(self):$/;"	m	class:BaseTest
test_tensor_shapes_resnet_152_v1	resnet/imagenet_test.py	/^  def test_tensor_shapes_resnet_152_v1(self):$/;"	m	class:BaseTest
test_tensor_shapes_resnet_152_v2	resnet/imagenet_test.py	/^  def test_tensor_shapes_resnet_152_v2(self):$/;"	m	class:BaseTest
test_tensor_shapes_resnet_152_with_gpu_v1	resnet/imagenet_test.py	/^  def test_tensor_shapes_resnet_152_with_gpu_v1(self):$/;"	m	class:BaseTest
test_tensor_shapes_resnet_152_with_gpu_v2	resnet/imagenet_test.py	/^  def test_tensor_shapes_resnet_152_with_gpu_v2(self):$/;"	m	class:BaseTest
test_tensor_shapes_resnet_18_v1	resnet/imagenet_test.py	/^  def test_tensor_shapes_resnet_18_v1(self):$/;"	m	class:BaseTest
test_tensor_shapes_resnet_18_v2	resnet/imagenet_test.py	/^  def test_tensor_shapes_resnet_18_v2(self):$/;"	m	class:BaseTest
test_tensor_shapes_resnet_18_with_gpu_v1	resnet/imagenet_test.py	/^  def test_tensor_shapes_resnet_18_with_gpu_v1(self):$/;"	m	class:BaseTest
test_tensor_shapes_resnet_18_with_gpu_v2	resnet/imagenet_test.py	/^  def test_tensor_shapes_resnet_18_with_gpu_v2(self):$/;"	m	class:BaseTest
test_tensor_shapes_resnet_200_v1	resnet/imagenet_test.py	/^  def test_tensor_shapes_resnet_200_v1(self):$/;"	m	class:BaseTest
test_tensor_shapes_resnet_200_v2	resnet/imagenet_test.py	/^  def test_tensor_shapes_resnet_200_v2(self):$/;"	m	class:BaseTest
test_tensor_shapes_resnet_200_with_gpu_v1	resnet/imagenet_test.py	/^  def test_tensor_shapes_resnet_200_with_gpu_v1(self):$/;"	m	class:BaseTest
test_tensor_shapes_resnet_200_with_gpu_v2	resnet/imagenet_test.py	/^  def test_tensor_shapes_resnet_200_with_gpu_v2(self):$/;"	m	class:BaseTest
test_tensor_shapes_resnet_34_v1	resnet/imagenet_test.py	/^  def test_tensor_shapes_resnet_34_v1(self):$/;"	m	class:BaseTest
test_tensor_shapes_resnet_34_v2	resnet/imagenet_test.py	/^  def test_tensor_shapes_resnet_34_v2(self):$/;"	m	class:BaseTest
test_tensor_shapes_resnet_34_with_gpu_v1	resnet/imagenet_test.py	/^  def test_tensor_shapes_resnet_34_with_gpu_v1(self):$/;"	m	class:BaseTest
test_tensor_shapes_resnet_34_with_gpu_v2	resnet/imagenet_test.py	/^  def test_tensor_shapes_resnet_34_with_gpu_v2(self):$/;"	m	class:BaseTest
test_tensor_shapes_resnet_50_v1	resnet/imagenet_test.py	/^  def test_tensor_shapes_resnet_50_v1(self):$/;"	m	class:BaseTest
test_tensor_shapes_resnet_50_v2	resnet/imagenet_test.py	/^  def test_tensor_shapes_resnet_50_v2(self):$/;"	m	class:BaseTest
test_tensor_shapes_resnet_50_with_gpu_v1	resnet/imagenet_test.py	/^  def test_tensor_shapes_resnet_50_with_gpu_v1(self):$/;"	m	class:BaseTest
test_tensor_shapes_resnet_50_with_gpu_v2	resnet/imagenet_test.py	/^  def test_tensor_shapes_resnet_50_with_gpu_v2(self):$/;"	m	class:BaseTest
test_time_history	resnet/keras/keras_common_test.py	/^  def test_time_history(self):$/;"	m	class:KerasCommonTests
test_tiny_rows_low_core	utils/data/file_io_test.py	/^  def test_tiny_rows_low_core(self):$/;"	m	class:BaseTest
test_tiny_rows_medium_core	utils/data/file_io_test.py	/^  def test_tiny_rows_medium_core(self):$/;"	m	class:BaseTest
test_train	mnist/mnist_eager_test.py	/^  def test_train(self):$/;"	m	class:MNISTTest
test_train	transformer/v2/transformer_main_test.py	/^  def test_train(self):$/;"	m	class:TransformerTaskTest
test_train_with_defun	mnist/mnist_eager_test.py	/^  def test_train_with_defun(self):$/;"	m	class:MNISTTest
test_unescape_token	transformer/utils/tokenizer_test.py	/^  def test_unescape_token(self):$/;"	m	class:StringHelperTest
test_unflatten_beam_dim	transformer/model/beam_search_test.py	/^  def test_unflatten_beam_dim(self):$/;"	m	class:BeamSearchHelperTests
test_uniform_random	utils/testing/reference_data_test.py	/^  def test_uniform_random(self):$/;"	m	class:GoldenBaseTest
test_update_run_status	benchmark/benchmark_uploader_test.py	/^  def test_update_run_status(self):$/;"	m	class:BigQueryUploaderTest
test_upload_benchmark_metric_json	benchmark/benchmark_uploader_test.py	/^  def test_upload_benchmark_metric_json(self):$/;"	m	class:BigQueryUploaderTest
test_upload_benchmark_run_file	benchmark/benchmark_uploader_test.py	/^  def test_upload_benchmark_run_file(self):$/;"	m	class:BigQueryUploaderTest
test_upload_benchmark_run_json	benchmark/benchmark_uploader_test.py	/^  def test_upload_benchmark_run_json(self):$/;"	m	class:BigQueryUploaderTest
test_upload_metric_file	benchmark/benchmark_uploader_test.py	/^  def test_upload_metric_file(self):$/;"	m	class:BigQueryUploaderTest
test_wide_deep_estimator_training	wide_deep/census_test.py	/^  def test_wide_deep_estimator_training(self):$/;"	m	class:BaseTest
test_wordpiece_tokenizer	bert/tokenization_test.py	/^  def test_wordpiece_tokenizer(self):$/;"	m	class:TokenizationTest
tfe	mnist/mnist_eager.py	/^tfe = tf.contrib.eager$/;"	v
to_dict	bert/modeling.py	/^  def to_dict(self):$/;"	m	class:BertConfig
to_json_string	bert/modeling.py	/^  def to_json_string(self):$/;"	m	class:BertConfig
tokenize	bert/tokenization.py	/^  def tokenize(self, text):$/;"	m	class:BasicTokenizer
tokenize	bert/tokenization.py	/^  def tokenize(self, text):$/;"	m	class:FullTokenizer
tokenize	bert/tokenization.py	/^  def tokenize(self, text):$/;"	m	class:WordpieceTokenizer
tpu_initialize	bert/tpu_lib.py	/^def tpu_initialize(tpu_address):$/;"	f
train	mnist/dataset.py	/^def train(directory):$/;"	f
train	mnist/mnist_eager.py	/^def train(model, optimizer, dataset, step_counter, log_interval=None):$/;"	f
train	mnist/mnist_eager_test.py	/^def train(defun=False):$/;"	f
train	transformer/v2/transformer_main.py	/^  def train(self):$/;"	m	class:TransformerTask
train_boosted_trees	boosted_trees/train_higgs.py	/^def train_boosted_trees(flags_obj):$/;"	f
train_increment_str	transformer/utils/schedule.py	/^  def train_increment_str(self):$/;"	m	class:Manager
train_input_fn	mnist/mnist.py	/^  def train_input_fn():$/;"	f	function:run_mnist
train_input_fn	mnist/mnist_tpu.py	/^def train_input_fn(params):$/;"	f
train_input_fn	transformer/utils/dataset.py	/^def train_input_fn(params):$/;"	f
train_input_fn	transformer/v2/data_pipeline.py	/^def train_input_fn(params):$/;"	f
train_input_fn	wide_deep/census_main.py	/^  def train_input_fn():$/;"	f	function:run_census
train_squad	bert/run_squad.py	/^def train_squad(strategy, input_meta_data):$/;"	f
train_step	bert/model_training_utils.py	/^      def train_step(iterator):$/;"	f	function:run_customized_training_loop
train_step	recommendation/ncf_keras_main.py	/^    def train_step():$/;"	f	function:run_ncf
transformer_loss	transformer/v2/metrics.py	/^def transformer_loss(logits, labels, smoothing, vocab_size):$/;"	f
translate_and_compute_bleu	transformer/transformer_main.py	/^def translate_and_compute_bleu(estimator, subtokenizer, bleu_source, bleu_ref):$/;"	f
translate_and_compute_bleu	transformer/v2/transformer_main.py	/^def translate_and_compute_bleu(model, subtokenizer, bleu_source, bleu_ref):$/;"	f
translate_file	transformer/translate.py	/^def translate_file($/;"	f
translate_file	transformer/v2/translate.py	/^def translate_file($/;"	f
translate_from_input	transformer/v2/translate.py	/^def translate_from_input(outputs, subtokenizer):$/;"	f
translate_from_text	transformer/v2/translate.py	/^def translate_from_text(model, subtokenizer, txt):$/;"	f
translate_text	transformer/translate.py	/^def translate_text(estimator, subtokenizer, txt):$/;"	f
trivial_model	resnet/keras/trivial_model.py	/^def trivial_model(num_classes, dtype='float32'):$/;"	f
txt_line_iterator	transformer/data_download.py	/^def txt_line_iterator(path):$/;"	f
undo_set_up_synthetic_data	utils/misc/distribution_utils.py	/^def undo_set_up_synthetic_data():$/;"	f
unit_test	resnet/estimator_benchmark.py	/^  def unit_test(self):$/;"	m	class:Resnet56EstimatorAccuracy
unpack_inputs	bert/modeling.py	/^def unpack_inputs(inputs):$/;"	f
unparse_line	utils/logs/mlperf_helper.py	/^def unparse_line(parsed_line): # type: (ParsedLine) -> str$/;"	f
update_run_status	benchmark/benchmark_uploader.py	/^  def update_run_status(self, dataset_name, table_name, run_id, run_status):$/;"	m	class:BigQueryUploader
upload_benchmark_metric_json	benchmark/benchmark_uploader.py	/^  def upload_benchmark_metric_json($/;"	m	class:BigQueryUploader
upload_benchmark_run_file	benchmark/benchmark_uploader.py	/^  def upload_benchmark_run_file($/;"	m	class:BigQueryUploader
upload_benchmark_run_json	benchmark/benchmark_uploader.py	/^  def upload_benchmark_run_json($/;"	m	class:BigQueryUploader
upload_metric_file	benchmark/benchmark_uploader.py	/^  def upload_metric_file($/;"	m	class:BigQueryUploader
uregex	transformer/compute_bleu.py	/^uregex = UnicodeRegex()$/;"	v
use_tpu	transformer/model/model_params.py	/^    use_tpu=False,$/;"	v
validate_case_matches_checkpoint	bert/tokenization.py	/^def validate_case_matches_checkpoint(do_lower_case, init_checkpoint):$/;"	f
validate_train_hook_name	utils/logs/hooks_helper_test.py	/^  def validate_train_hook_name(self,$/;"	m	class:BaseTest
very_slightly_biased_randint	recommendation/stat_utils.py	/^def very_slightly_biased_randint(max_val_vector):$/;"	f
vocab_size	transformer/model/model_params.py	/^    vocab_size=33708,  # Number of tokens defined in the vocabulary file.$/;"	v
warmup_lr	resnet/keras/keras_common.py	/^      def warmup_lr(step):$/;"	f	function:PiecewiseConstantDecayWithWarmup._get_learning_rate
whitespace_tokenize	bert/tokenization.py	/^def whitespace_tokenize(text):$/;"	f
window_size_fn	transformer/utils/dataset.py	/^  def window_size_fn(bucket_id):$/;"	f	function:_batch_examples
window_size_fn	transformer/v2/data_pipeline.py	/^  def window_size_fn(bucket_id):$/;"	f	function:_batch_examples
worker_job	recommendation/popen_helper.py	/^def worker_job():$/;"	f
write_file	transformer/data_download.py	/^def write_file(writer, filename):$/;"	f
write_predictions	bert/squad_lib.py	/^def write_predictions(all_examples,$/;"	f
write_to_buffer	utils/data/file_io.py	/^def write_to_buffer(dataframe, buffer_path, columns, expected_size=None):$/;"	f
write_to_temp_buffer	utils/data/file_io.py	/^def write_to_temp_buffer(dataframe, buffer_folder, columns):$/;"	f
xla_validator	recommendation/ncf_common.py	/^  def xla_validator(flag_dict):$/;"	f	function:define_ncf_flags
